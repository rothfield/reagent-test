// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__9538__delegate = function (args){
return console.log.apply(console,(function (){var G__9537 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__9537) : cljs.core.into_array.call(null,G__9537));
})());
};
var G__9538 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9539__i = 0, G__9539__a = new Array(arguments.length -  0);
while (G__9539__i < G__9539__a.length) {G__9539__a[G__9539__i] = arguments[G__9539__i + 0]; ++G__9539__i;}
  args = new cljs.core.IndexedSeq(G__9539__a,0);
} 
return G__9538__delegate.call(this,args);};
G__9538.cljs$lang$maxFixedArity = 0;
G__9538.cljs$lang$applyTo = (function (arglist__9540){
var args = cljs.core.seq(arglist__9540);
return G__9538__delegate(args);
});
G__9538.cljs$core$IFn$_invoke$arity$variadic = G__9538__delegate;
return G__9538;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__9542 = x;
return goog.isString(G__9542);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__9544 = x__$1;
return goog.typeOf(G__9544);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3541__auto__ = ty;
if(cljs.core.truth_(and__3541__auto__)){
return ty.cljs$lang$type;
} else {
return and__3541__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__9546 = obj;
return goog.typeOf(G__9546);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__9548 = Symbol;
return goog.typeOf(G__9548);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4440__auto___9550 = len;
var i_9551 = (0);
while(true){
if((i_9551 < n__4440__auto___9550)){
(new_arr[i_9551] = (arr[i_9551]));

var G__9552 = (i_9551 + (1));
i_9551 = G__9552;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__9553 = (i + (1));
i = G__9553;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__9562__delegate = function (array,i,idxs){
var G__9559 = aget;
var G__9560 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__9561 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9559,G__9560,G__9561) : cljs.core.apply.call(null,G__9559,G__9560,G__9561));
};
var G__9562 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__9563__i = 0, G__9563__a = new Array(arguments.length -  2);
while (G__9563__i < G__9563__a.length) {G__9563__a[G__9563__i] = arguments[G__9563__i + 2]; ++G__9563__i;}
  idxs = new cljs.core.IndexedSeq(G__9563__a,0);
} 
return G__9562__delegate.call(this,array,i,idxs);};
G__9562.cljs$lang$maxFixedArity = 2;
G__9562.cljs$lang$applyTo = (function (arglist__9564){
var array = cljs.core.first(arglist__9564);
arglist__9564 = cljs.core.next(arglist__9564);
var i = cljs.core.first(arglist__9564);
var idxs = cljs.core.rest(arglist__9564);
return G__9562__delegate(array,i,idxs);
});
G__9562.cljs$core$IFn$_invoke$arity$variadic = G__9562__delegate;
return G__9562;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__9565 = null;
if (arguments.length > 2) {
var G__9566__i = 0, G__9566__a = new Array(arguments.length -  2);
while (G__9566__i < G__9566__a.length) {G__9566__a[G__9566__i] = arguments[G__9566__i + 2]; ++G__9566__i;}
G__9565 = new cljs.core.IndexedSeq(G__9566__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__9565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__9575__delegate = function (array,idx,idx2,idxv){
var G__9571 = aset;
var G__9572 = (array[idx]);
var G__9573 = idx2;
var G__9574 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9571,G__9572,G__9573,G__9574) : cljs.core.apply.call(null,G__9571,G__9572,G__9573,G__9574));
};
var G__9575 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__9576__i = 0, G__9576__a = new Array(arguments.length -  3);
while (G__9576__i < G__9576__a.length) {G__9576__a[G__9576__i] = arguments[G__9576__i + 3]; ++G__9576__i;}
  idxv = new cljs.core.IndexedSeq(G__9576__a,0);
} 
return G__9575__delegate.call(this,array,idx,idx2,idxv);};
G__9575.cljs$lang$maxFixedArity = 3;
G__9575.cljs$lang$applyTo = (function (arglist__9577){
var array = cljs.core.first(arglist__9577);
arglist__9577 = cljs.core.next(arglist__9577);
var idx = cljs.core.first(arglist__9577);
arglist__9577 = cljs.core.next(arglist__9577);
var idx2 = cljs.core.first(arglist__9577);
var idxv = cljs.core.rest(arglist__9577);
return G__9575__delegate(array,idx,idx2,idxv);
});
G__9575.cljs$core$IFn$_invoke$arity$variadic = G__9575__delegate;
return G__9575;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__9578 = null;
if (arguments.length > 3) {
var G__9579__i = 0, G__9579__a = new Array(arguments.length -  3);
while (G__9579__i < G__9579__a.length) {G__9579__a[G__9579__i] = arguments[G__9579__i + 3]; ++G__9579__i;}
G__9578 = new cljs.core.IndexedSeq(G__9579__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__9578);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__9585 = (function (a,x){
a.push(x);

return a;
});
var G__9586 = [];
var G__9587 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9585,G__9586,G__9587) : cljs.core.reduce.call(null,G__9585,G__9586,G__9587));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__9588__i = 0, G__9588__a = new Array(arguments.length -  2);
while (G__9588__i < G__9588__a.length) {G__9588__a[G__9588__i] = arguments[G__9588__i + 2]; ++G__9588__i;}
  args = new cljs.core.IndexedSeq(G__9588__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__9589){
var obj = cljs.core.first(arglist__9589);
arglist__9589 = cljs.core.next(arglist__9589);
var s = cljs.core.first(arglist__9589);
var args = cljs.core.rest(arglist__9589);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj9591 = {};
return obj9591;
})();


cljs.core.IFn = (function (){var obj9593 = {};
return obj9593;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9639 = x__4197__auto__;
return goog.typeOf(G__9639);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9641 = x__4197__auto__;
return goog.typeOf(G__9641);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9643 = x__4197__auto__;
return goog.typeOf(G__9643);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9645 = x__4197__auto__;
return goog.typeOf(G__9645);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9647 = x__4197__auto__;
return goog.typeOf(G__9647);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9649 = x__4197__auto__;
return goog.typeOf(G__9649);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9651 = x__4197__auto__;
return goog.typeOf(G__9651);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9653 = x__4197__auto__;
return goog.typeOf(G__9653);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9655 = x__4197__auto__;
return goog.typeOf(G__9655);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9657 = x__4197__auto__;
return goog.typeOf(G__9657);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9659 = x__4197__auto__;
return goog.typeOf(G__9659);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9661 = x__4197__auto__;
return goog.typeOf(G__9661);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9663 = x__4197__auto__;
return goog.typeOf(G__9663);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9665 = x__4197__auto__;
return goog.typeOf(G__9665);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9667 = x__4197__auto__;
return goog.typeOf(G__9667);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9669 = x__4197__auto__;
return goog.typeOf(G__9669);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9671 = x__4197__auto__;
return goog.typeOf(G__9671);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9673 = x__4197__auto__;
return goog.typeOf(G__9673);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9675 = x__4197__auto__;
return goog.typeOf(G__9675);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9677 = x__4197__auto__;
return goog.typeOf(G__9677);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9679 = x__4197__auto__;
return goog.typeOf(G__9679);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__9681 = x__4197__auto__;
return goog.typeOf(G__9681);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj9683 = {};
return obj9683;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3541__auto__ = value;
if(and__3541__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3541__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4197__auto__ = (((value == null))?null:value);
return (function (){var or__3553__auto__ = (cljs.core._clone[(function (){var G__9687 = x__4197__auto__;
return goog.typeOf(G__9687);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._clone["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj9689 = {};
return obj9689;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._count[(function (){var G__9693 = x__4197__auto__;
return goog.typeOf(G__9693);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._count["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj9695 = {};
return obj9695;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._empty[(function (){var G__9699 = x__4197__auto__;
return goog.typeOf(G__9699);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._empty["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj9701 = {};
return obj9701;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._conj[(function (){var G__9705 = x__4197__auto__;
return goog.typeOf(G__9705);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._conj["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj9707 = {};
return obj9707;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._nth[(function (){var G__9713 = x__4197__auto__;
return goog.typeOf(G__9713);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._nth["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._nth[(function (){var G__9715 = x__4197__auto__;
return goog.typeOf(G__9715);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._nth["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj9717 = {};
return obj9717;
})();


cljs.core.ISeq = (function (){var obj9719 = {};
return obj9719;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._first[(function (){var G__9723 = x__4197__auto__;
return goog.typeOf(G__9723);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._first["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._rest[(function (){var G__9727 = x__4197__auto__;
return goog.typeOf(G__9727);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._rest["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj9729 = {};
return obj9729;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._next[(function (){var G__9733 = x__4197__auto__;
return goog.typeOf(G__9733);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._next["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj9735 = {};
return obj9735;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._lookup[(function (){var G__9741 = x__4197__auto__;
return goog.typeOf(G__9741);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._lookup["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._lookup[(function (){var G__9743 = x__4197__auto__;
return goog.typeOf(G__9743);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._lookup["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj9745 = {};
return obj9745;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__9749 = x__4197__auto__;
return goog.typeOf(G__9749);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._assoc[(function (){var G__9753 = x__4197__auto__;
return goog.typeOf(G__9753);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj9755 = {};
return obj9755;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._dissoc[(function (){var G__9759 = x__4197__auto__;
return goog.typeOf(G__9759);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj9761 = {};
return obj9761;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._key[(function (){var G__9765 = x__4197__auto__;
return goog.typeOf(G__9765);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._key["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._val[(function (){var G__9769 = x__4197__auto__;
return goog.typeOf(G__9769);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._val["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj9771 = {};
return obj9771;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._disjoin[(function (){var G__9775 = x__4197__auto__;
return goog.typeOf(G__9775);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj9777 = {};
return obj9777;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._peek[(function (){var G__9781 = x__4197__auto__;
return goog.typeOf(G__9781);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._peek["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._pop[(function (){var G__9785 = x__4197__auto__;
return goog.typeOf(G__9785);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._pop["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj9787 = {};
return obj9787;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._assoc_n[(function (){var G__9791 = x__4197__auto__;
return goog.typeOf(G__9791);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj9793 = {};
return obj9793;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._deref[(function (){var G__9797 = x__4197__auto__;
return goog.typeOf(G__9797);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._deref["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj9799 = {};
return obj9799;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._deref_with_timeout[(function (){var G__9803 = x__4197__auto__;
return goog.typeOf(G__9803);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj9805 = {};
return obj9805;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._meta[(function (){var G__9809 = x__4197__auto__;
return goog.typeOf(G__9809);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._meta["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj9811 = {};
return obj9811;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._with_meta[(function (){var G__9815 = x__4197__auto__;
return goog.typeOf(G__9815);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj9817 = {};
return obj9817;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._reduce[(function (){var G__9823 = x__4197__auto__;
return goog.typeOf(G__9823);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reduce["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._reduce[(function (){var G__9825 = x__4197__auto__;
return goog.typeOf(G__9825);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reduce["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj9827 = {};
return obj9827;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._kv_reduce[(function (){var G__9831 = x__4197__auto__;
return goog.typeOf(G__9831);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj9833 = {};
return obj9833;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._equiv[(function (){var G__9837 = x__4197__auto__;
return goog.typeOf(G__9837);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._equiv["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj9839 = {};
return obj9839;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._hash[(function (){var G__9843 = x__4197__auto__;
return goog.typeOf(G__9843);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._hash["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj9845 = {};
return obj9845;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._seq[(function (){var G__9849 = x__4197__auto__;
return goog.typeOf(G__9849);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._seq["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj9851 = {};
return obj9851;
})();


cljs.core.IList = (function (){var obj9853 = {};
return obj9853;
})();


cljs.core.IRecord = (function (){var obj9855 = {};
return obj9855;
})();


cljs.core.IReversible = (function (){var obj9857 = {};
return obj9857;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._rseq[(function (){var G__9861 = x__4197__auto__;
return goog.typeOf(G__9861);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._rseq["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj9863 = {};
return obj9863;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._sorted_seq[(function (){var G__9867 = x__4197__auto__;
return goog.typeOf(G__9867);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._sorted_seq_from[(function (){var G__9871 = x__4197__auto__;
return goog.typeOf(G__9871);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._entry_key[(function (){var G__9875 = x__4197__auto__;
return goog.typeOf(G__9875);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._comparator[(function (){var G__9879 = x__4197__auto__;
return goog.typeOf(G__9879);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._comparator["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj9881 = {};
return obj9881;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3541__auto__ = writer;
if(and__3541__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3541__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4197__auto__ = (((writer == null))?null:writer);
return (function (){var or__3553__auto__ = (cljs.core._write[(function (){var G__9885 = x__4197__auto__;
return goog.typeOf(G__9885);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._write["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3541__auto__ = writer;
if(and__3541__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3541__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4197__auto__ = (((writer == null))?null:writer);
return (function (){var or__3553__auto__ = (cljs.core._flush[(function (){var G__9889 = x__4197__auto__;
return goog.typeOf(G__9889);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._flush["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj9891 = {};
return obj9891;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._pr_writer[(function (){var G__9895 = x__4197__auto__;
return goog.typeOf(G__9895);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj9897 = {};
return obj9897;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3541__auto__ = d;
if(and__3541__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3541__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4197__auto__ = (((d == null))?null:d);
return (function (){var or__3553__auto__ = (cljs.core._realized_QMARK_[(function (){var G__9901 = x__4197__auto__;
return goog.typeOf(G__9901);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj9903 = {};
return obj9903;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._notify_watches[(function (){var G__9907 = x__4197__auto__;
return goog.typeOf(G__9907);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._add_watch[(function (){var G__9911 = x__4197__auto__;
return goog.typeOf(G__9911);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._remove_watch[(function (){var G__9915 = x__4197__auto__;
return goog.typeOf(G__9915);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj9917 = {};
return obj9917;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._as_transient[(function (){var G__9921 = x__4197__auto__;
return goog.typeOf(G__9921);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj9923 = {};
return obj9923;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._conj_BANG_[(function (){var G__9927 = x__4197__auto__;
return goog.typeOf(G__9927);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._persistent_BANG_[(function (){var G__9931 = x__4197__auto__;
return goog.typeOf(G__9931);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj9933 = {};
return obj9933;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._assoc_BANG_[(function (){var G__9937 = x__4197__auto__;
return goog.typeOf(G__9937);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj9939 = {};
return obj9939;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__9943 = x__4197__auto__;
return goog.typeOf(G__9943);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj9945 = {};
return obj9945;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__9949 = x__4197__auto__;
return goog.typeOf(G__9949);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._pop_BANG_[(function (){var G__9953 = x__4197__auto__;
return goog.typeOf(G__9953);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj9955 = {};
return obj9955;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__9959 = x__4197__auto__;
return goog.typeOf(G__9959);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj9961 = {};
return obj9961;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._compare[(function (){var G__9965 = x__4197__auto__;
return goog.typeOf(G__9965);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._compare["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj9967 = {};
return obj9967;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._drop_first[(function (){var G__9971 = x__4197__auto__;
return goog.typeOf(G__9971);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj9973 = {};
return obj9973;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._chunked_first[(function (){var G__9977 = x__4197__auto__;
return goog.typeOf(G__9977);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._chunked_rest[(function (){var G__9981 = x__4197__auto__;
return goog.typeOf(G__9981);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj9983 = {};
return obj9983;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._chunked_next[(function (){var G__9987 = x__4197__auto__;
return goog.typeOf(G__9987);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj9989 = {};
return obj9989;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._name[(function (){var G__9993 = x__4197__auto__;
return goog.typeOf(G__9993);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._name["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._namespace[(function (){var G__9997 = x__4197__auto__;
return goog.typeOf(G__9997);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._namespace["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj9999 = {};
return obj9999;
})();


cljs.core.IReset = (function (){var obj10001 = {};
return obj10001;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._reset_BANG_[(function (){var G__10005 = x__4197__auto__;
return goog.typeOf(G__10005);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj10007 = {};
return obj10007;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__10017 = x__4197__auto__;
return goog.typeOf(G__10017);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__10019 = x__4197__auto__;
return goog.typeOf(G__10019);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__10021 = x__4197__auto__;
return goog.typeOf(G__10021);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__10023 = x__4197__auto__;
return goog.typeOf(G__10023);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj10025 = {};
return obj10025;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._vreset_BANG_[(function (){var G__10029 = x__4197__auto__;
return goog.typeOf(G__10029);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj10031 = {};
return obj10031;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._iterator[(function (){var G__10035 = x__4197__auto__;
return goog.typeOf(G__10035);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._iterator["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__10038 = (4294967295);
var G__10039 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10038,G__10039) : Math.imul.call(null,G__10038,G__10039));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__10042 = a;
var G__10043 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10042,G__10043) : Math.imul.call(null,G__10042,G__10043));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__10044 = (i + (2));
var G__10045 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__10044;
h1 = G__10045;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj10047 = {};
return obj10047;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__10048 = (i + (1));
var G__10049 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__10048;
hash = G__10049;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj10053 = {};
return obj10053;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__10056 = o;
if(G__10056){
var bit__4227__auto__ = (G__10056.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4227__auto__) || (G__10056.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__10057 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10057) : Math.floor.call(null,G__10057));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3541__auto__ = cljs.core.not(a.ns);
if(and__3541__auto__){
return b.ns;
} else {
return and__3541__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__10064 = a.ns;
var G__10065 = b.ns;
return goog.array.defaultCompare(G__10064,G__10065);
})();
if(((0) === nsc)){
var G__10066 = a.name;
var G__10067 = b.name;
return goog.array.defaultCompare(G__10066,G__10067);
} else {
return nsc;
}
}
} else {
var G__10068 = a.name;
var G__10069 = b.name;
return goog.array.defaultCompare(G__10068,G__10069);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__3974__auto__ = self__._hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__10071 = null;
var G__10071__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__10071__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__10071 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__10071__2.call(this,self__,coll);
case 3:
return G__10071__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10071.cljs$core$IFn$_invoke$arity$2 = G__10071__2;
G__10071.cljs$core$IFn$_invoke$arity$3 = G__10071__3;
return G__10071;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args10070){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10070)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__10119 = null;
var G__10119__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__10119__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__10119__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__10119__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__10119__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__10119__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__10119__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__10119__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__10119__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__10119__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__10119__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__10119__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__10119__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__10119__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__10119__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__10119__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__10119__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__10119__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__10119__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__10119__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__10119__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__10119__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10075 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__10076 = a;
var G__10077 = b;
var G__10078 = c;
var G__10079 = d;
var G__10080 = e;
var G__10081 = f;
var G__10082 = g;
var G__10083 = h;
var G__10084 = i;
var G__10085 = j;
var G__10086 = k;
var G__10087 = l;
var G__10088 = m;
var G__10089 = n;
var G__10090 = o;
var G__10091 = p;
var G__10092 = q;
var G__10093 = r;
var G__10094 = s;
var G__10095 = t;
var G__10096 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10075,G__10076,G__10077,G__10078,G__10079,G__10080,G__10081,G__10082,G__10083,G__10084,G__10085,G__10086,G__10087,G__10088,G__10089,G__10090,G__10091,G__10092,G__10093,G__10094,G__10095,G__10096) : cljs.core.apply.call(null,G__10075,G__10076,G__10077,G__10078,G__10079,G__10080,G__10081,G__10082,G__10083,G__10084,G__10085,G__10086,G__10087,G__10088,G__10089,G__10090,G__10091,G__10092,G__10093,G__10094,G__10095,G__10096));
});
G__10119 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__10119__1.call(this,self__);
case 2:
return G__10119__2.call(this,self__,a);
case 3:
return G__10119__3.call(this,self__,a,b);
case 4:
return G__10119__4.call(this,self__,a,b,c);
case 5:
return G__10119__5.call(this,self__,a,b,c,d);
case 6:
return G__10119__6.call(this,self__,a,b,c,d,e);
case 7:
return G__10119__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__10119__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__10119__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__10119__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__10119__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__10119__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__10119__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__10119__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__10119__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__10119__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__10119__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__10119__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__10119__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__10119__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__10119__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__10119__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10119.cljs$core$IFn$_invoke$arity$1 = G__10119__1;
G__10119.cljs$core$IFn$_invoke$arity$2 = G__10119__2;
G__10119.cljs$core$IFn$_invoke$arity$3 = G__10119__3;
G__10119.cljs$core$IFn$_invoke$arity$4 = G__10119__4;
G__10119.cljs$core$IFn$_invoke$arity$5 = G__10119__5;
G__10119.cljs$core$IFn$_invoke$arity$6 = G__10119__6;
G__10119.cljs$core$IFn$_invoke$arity$7 = G__10119__7;
G__10119.cljs$core$IFn$_invoke$arity$8 = G__10119__8;
G__10119.cljs$core$IFn$_invoke$arity$9 = G__10119__9;
G__10119.cljs$core$IFn$_invoke$arity$10 = G__10119__10;
G__10119.cljs$core$IFn$_invoke$arity$11 = G__10119__11;
G__10119.cljs$core$IFn$_invoke$arity$12 = G__10119__12;
G__10119.cljs$core$IFn$_invoke$arity$13 = G__10119__13;
G__10119.cljs$core$IFn$_invoke$arity$14 = G__10119__14;
G__10119.cljs$core$IFn$_invoke$arity$15 = G__10119__15;
G__10119.cljs$core$IFn$_invoke$arity$16 = G__10119__16;
G__10119.cljs$core$IFn$_invoke$arity$17 = G__10119__17;
G__10119.cljs$core$IFn$_invoke$arity$18 = G__10119__18;
G__10119.cljs$core$IFn$_invoke$arity$19 = G__10119__19;
G__10119.cljs$core$IFn$_invoke$arity$20 = G__10119__20;
G__10119.cljs$core$IFn$_invoke$arity$21 = G__10119__21;
G__10119.cljs$core$IFn$_invoke$arity$22 = G__10119__22;
return G__10119;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args10074){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10074)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__10097 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__10098 = a;
var G__10099 = b;
var G__10100 = c;
var G__10101 = d;
var G__10102 = e;
var G__10103 = f;
var G__10104 = g;
var G__10105 = h;
var G__10106 = i;
var G__10107 = j;
var G__10108 = k;
var G__10109 = l;
var G__10110 = m;
var G__10111 = n;
var G__10112 = o;
var G__10113 = p;
var G__10114 = q;
var G__10115 = r;
var G__10116 = s;
var G__10117 = t;
var G__10118 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10097,G__10098,G__10099,G__10100,G__10101,G__10102,G__10103,G__10104,G__10105,G__10106,G__10107,G__10108,G__10109,G__10110,G__10111,G__10112,G__10113,G__10114,G__10115,G__10116,G__10117,G__10118) : cljs.core.apply.call(null,G__10097,G__10098,G__10099,G__10100,G__10101,G__10102,G__10103,G__10104,G__10105,G__10106,G__10107,G__10108,G__10109,G__10110,G__10111,G__10112,G__10113,G__10114,G__10115,G__10116,G__10117,G__10118));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__10121 = x;
if(G__10121){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__10121.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__10121.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__10121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__10121);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__10123 = value;
if(G__10123){
var bit__4234__auto__ = (G__10123.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4234__auto__) || (G__10123.cljs$core$ICloneable$)){
return true;
} else {
if((!G__10123.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__10123);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__10123);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10125 = coll;
if(G__10125){
var bit__4227__auto__ = (G__10125.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4227__auto__) || (G__10125.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10127 = coll;
if(G__10127){
var bit__4227__auto__ = (G__10127.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4227__auto__) || (G__10127.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__10129 = coll;
if(G__10129){
var bit__4227__auto__ = (G__10129.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4227__auto__) || (G__10129.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10131 = coll;
if(G__10131){
var bit__4227__auto__ = (G__10131.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4227__auto__) || (G__10131.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__10136__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__10137 = y;
var G__10138 = cljs.core.first(more);
var G__10139 = cljs.core.next(more);
x = G__10137;
y = G__10138;
more = G__10139;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10136 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10140__i = 0, G__10140__a = new Array(arguments.length -  2);
while (G__10140__i < G__10140__a.length) {G__10140__a[G__10140__i] = arguments[G__10140__i + 2]; ++G__10140__i;}
  more = new cljs.core.IndexedSeq(G__10140__a,0);
} 
return G__10136__delegate.call(this,x,y,more);};
G__10136.cljs$lang$maxFixedArity = 2;
G__10136.cljs$lang$applyTo = (function (arglist__10141){
var x = cljs.core.first(arglist__10141);
arglist__10141 = cljs.core.next(arglist__10141);
var y = cljs.core.first(arglist__10141);
var more = cljs.core.rest(arglist__10141);
return G__10136__delegate(x,y,more);
});
G__10136.cljs$core$IFn$_invoke$arity$variadic = G__10136__delegate;
return G__10136;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__10142 = null;
if (arguments.length > 2) {
var G__10143__i = 0, G__10143__a = new Array(arguments.length -  2);
while (G__10143__i < G__10143__a.length) {G__10143__a[G__10143__i] = arguments[G__10143__i + 2]; ++G__10143__i;}
G__10142 = new cljs.core.IndexedSeq(G__10143__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__10144 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__10144) : cljs.core.es6_iterator_seq.call(null,G__10144));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__10145 = (n + (1));
var G__10146 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__10147 = cljs.core.next(coll__$1);
n = G__10145;
hash_code = G__10146;
coll__$1 = G__10147;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__10148 = (n + (1));
var G__10149 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__10150 = cljs.core.next(coll__$1);
n = G__10148;
hash_code = G__10149;
coll__$1 = G__10150;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__10151 = o;
return goog.getUid(G__10151);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__10153 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10153) : cljs.core.deref.call(null,G__10153));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10160 = val;
var G__10161 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10160,G__10161) : f.call(null,G__10160,G__10161));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10166 = nval;
var G__10167 = (n + (1));
val = G__10166;
n = G__10167;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10162 = val__$1;
var G__10163 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10162,G__10163) : f.call(null,G__10162,G__10163));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10168 = nval;
var G__10169 = (n + (1));
val__$1 = G__10168;
n = G__10169;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10164 = val__$1;
var G__10165 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10164,G__10165) : f.call(null,G__10164,G__10165));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10170 = nval;
var G__10171 = (n + (1));
val__$1 = G__10170;
n = G__10171;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10178 = val;
var G__10179 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10178,G__10179) : f.call(null,G__10178,G__10179));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10184 = nval;
var G__10185 = (n + (1));
val = G__10184;
n = G__10185;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10180 = val__$1;
var G__10181 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10180,G__10181) : f.call(null,G__10180,G__10181));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10186 = nval;
var G__10187 = (n + (1));
val__$1 = G__10186;
n = G__10187;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10182 = val__$1;
var G__10183 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10182,G__10183) : f.call(null,G__10182,G__10183));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10188 = nval;
var G__10189 = (n + (1));
val__$1 = G__10188;
n = G__10189;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__10191 = x;
if(G__10191){
var bit__4234__auto__ = (G__10191.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4234__auto__) || (G__10191.cljs$core$ICounted$)){
return true;
} else {
if((!G__10191.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10191);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10191);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__10193 = x;
if(G__10193){
var bit__4234__auto__ = (G__10193.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4234__auto__) || (G__10193.cljs$core$IIndexed$)){
return true;
} else {
if((!G__10193.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10193);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10193);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10194 = coll__$1;
var G__10195 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10194,G__10195) : cljs.core.equiv_sequential.call(null,G__10194,G__10195));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10196 = o;
var G__10197 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10196,G__10197) : cljs.core.cons.call(null,G__10196,G__10197));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10200 = coll__$1;
var G__10201 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10200,G__10201) : cljs.core.equiv_sequential.call(null,G__10200,G__10201));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10202 = cljs.core.List.EMPTY;
var G__10203 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10202,G__10203) : cljs.core.with_meta.call(null,G__10202,G__10203));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__10204 = f;
var G__10205 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10204,G__10205) : cljs.core.seq_reduce.call(null,G__10204,G__10205));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__10206 = f;
var G__10207 = start;
var G__10208 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10206,G__10207,G__10208) : cljs.core.seq_reduce.call(null,G__10206,G__10207,G__10208));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10209 = o;
var G__10210 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10209,G__10210) : cljs.core.cons.call(null,G__10209,G__10210));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__10211 = sn;
s = G__10211;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__10216__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__10217 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__10218 = cljs.core.first(xs);
var G__10219 = cljs.core.next(xs);
coll = G__10217;
x = G__10218;
xs = G__10219;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__10216 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__10220__i = 0, G__10220__a = new Array(arguments.length -  2);
while (G__10220__i < G__10220__a.length) {G__10220__a[G__10220__i] = arguments[G__10220__i + 2]; ++G__10220__i;}
  xs = new cljs.core.IndexedSeq(G__10220__a,0);
} 
return G__10216__delegate.call(this,coll,x,xs);};
G__10216.cljs$lang$maxFixedArity = 2;
G__10216.cljs$lang$applyTo = (function (arglist__10221){
var coll = cljs.core.first(arglist__10221);
arglist__10221 = cljs.core.next(arglist__10221);
var x = cljs.core.first(arglist__10221);
var xs = cljs.core.rest(arglist__10221);
return G__10216__delegate(coll,x,xs);
});
G__10216.cljs$core$IFn$_invoke$arity$variadic = G__10216__delegate;
return G__10216;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__10222 = null;
if (arguments.length > 2) {
var G__10223__i = 0, G__10223__a = new Array(arguments.length -  2);
while (G__10223__i < G__10223__a.length) {G__10223__a[G__10223__i] = arguments[G__10223__i + 2]; ++G__10223__i;}
G__10222 = new cljs.core.IndexedSeq(G__10223__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__10222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__10224 = cljs.core.next(s);
var G__10225 = (acc + (1));
s = G__10224;
acc = G__10225;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__10227 = coll;
if(G__10227){
var bit__4227__auto__ = (G__10227.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4227__auto__) || (G__10227.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__10228 = cljs.core.next(coll);
var G__10229 = (n - (1));
coll = G__10228;
n = G__10229;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__10230 = cljs.core.next(coll);
var G__10231 = (n - (1));
var G__10232 = not_found;
coll = G__10230;
n = G__10231;
not_found = G__10232;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__10237 = coll;
if(G__10237){
var bit__4227__auto__ = (G__10237.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4227__auto__) || (G__10237.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10238 = coll;
if(G__10238){
var bit__4234__auto__ = (G__10238.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4234__auto__) || (G__10238.cljs$core$ISeq$)){
return true;
} else {
if((!G__10238.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10238);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10238);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__10239 = coll;
if(G__10239){
var bit__4227__auto__ = (G__10239.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4227__auto__) || (G__10239.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10240 = coll;
if(G__10240){
var bit__4234__auto__ = (G__10240.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4234__auto__) || (G__10240.cljs$core$ISeq$)){
return true;
} else {
if((!G__10240.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10240);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10240);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__10241 = (n__$1 - (1));
var G__10242 = cljs.core.rest(xs);
n__$1 = G__10241;
xs = G__10242;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__10245 = o;
if(G__10245){
var bit__4227__auto__ = (G__10245.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4227__auto__) || (G__10245.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__10246 = o;
if(G__10246){
var bit__4227__auto__ = (G__10246.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4227__auto__) || (G__10246.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__10250__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__10251 = ret;
var G__10252 = cljs.core.first(kvs);
var G__10253 = cljs.core.second(kvs);
var G__10254 = cljs.core.nnext(kvs);
coll = G__10251;
k = G__10252;
v = G__10253;
kvs = G__10254;
continue;
} else {
return ret;
}
break;
}
};
var G__10250 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__10255__i = 0, G__10255__a = new Array(arguments.length -  3);
while (G__10255__i < G__10255__a.length) {G__10255__a[G__10255__i] = arguments[G__10255__i + 3]; ++G__10255__i;}
  kvs = new cljs.core.IndexedSeq(G__10255__a,0);
} 
return G__10250__delegate.call(this,coll,k,v,kvs);};
G__10250.cljs$lang$maxFixedArity = 3;
G__10250.cljs$lang$applyTo = (function (arglist__10256){
var coll = cljs.core.first(arglist__10256);
arglist__10256 = cljs.core.next(arglist__10256);
var k = cljs.core.first(arglist__10256);
arglist__10256 = cljs.core.next(arglist__10256);
var v = cljs.core.first(arglist__10256);
var kvs = cljs.core.rest(arglist__10256);
return G__10250__delegate(coll,k,v,kvs);
});
G__10250.cljs$core$IFn$_invoke$arity$variadic = G__10250__delegate;
return G__10250;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__10257 = null;
if (arguments.length > 3) {
var G__10258__i = 0, G__10258__a = new Array(arguments.length -  3);
while (G__10258__i < G__10258__a.length) {G__10258__a[G__10258__i] = arguments[G__10258__i + 3]; ++G__10258__i;}
G__10257 = new cljs.core.IndexedSeq(G__10258__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__10257);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__10261__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__10262 = ret;
var G__10263 = cljs.core.first(ks);
var G__10264 = cljs.core.next(ks);
coll = G__10262;
k = G__10263;
ks = G__10264;
continue;
} else {
return ret;
}
}
break;
}
};
var G__10261 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__10265__i = 0, G__10265__a = new Array(arguments.length -  2);
while (G__10265__i < G__10265__a.length) {G__10265__a[G__10265__i] = arguments[G__10265__i + 2]; ++G__10265__i;}
  ks = new cljs.core.IndexedSeq(G__10265__a,0);
} 
return G__10261__delegate.call(this,coll,k,ks);};
G__10261.cljs$lang$maxFixedArity = 2;
G__10261.cljs$lang$applyTo = (function (arglist__10266){
var coll = cljs.core.first(arglist__10266);
arglist__10266 = cljs.core.next(arglist__10266);
var k = cljs.core.first(arglist__10266);
var ks = cljs.core.rest(arglist__10266);
return G__10261__delegate(coll,k,ks);
});
G__10261.cljs$core$IFn$_invoke$arity$variadic = G__10261__delegate;
return G__10261;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__10267 = null;
if (arguments.length > 2) {
var G__10268__i = 0, G__10268__a = new Array(arguments.length -  2);
while (G__10268__i < G__10268__a.length) {G__10268__a[G__10268__i] = arguments[G__10268__i + 2]; ++G__10268__i;}
G__10267 = new cljs.core.IndexedSeq(G__10268__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__10267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3553__auto__ = (function (){var G__10273 = f;
return goog.isFunction(G__10273);
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__10274 = f;
if(G__10274){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto____$1 = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
return G__10274.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__10274.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10274);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10274);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__10740 = null;
var G__10740__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__10740__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10276 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10276) : self__.afn.call(null,G__10276));
});
var G__10740__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10277 = a;
var G__10278 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10277,G__10278) : self__.afn.call(null,G__10277,G__10278));
});
var G__10740__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10279 = a;
var G__10280 = b;
var G__10281 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10279,G__10280,G__10281) : self__.afn.call(null,G__10279,G__10280,G__10281));
});
var G__10740__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10282 = a;
var G__10283 = b;
var G__10284 = c;
var G__10285 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10282,G__10283,G__10284,G__10285) : self__.afn.call(null,G__10282,G__10283,G__10284,G__10285));
});
var G__10740__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10286 = a;
var G__10287 = b;
var G__10288 = c;
var G__10289 = d;
var G__10290 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10286,G__10287,G__10288,G__10289,G__10290) : self__.afn.call(null,G__10286,G__10287,G__10288,G__10289,G__10290));
});
var G__10740__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10291 = a;
var G__10292 = b;
var G__10293 = c;
var G__10294 = d;
var G__10295 = e;
var G__10296 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10291,G__10292,G__10293,G__10294,G__10295,G__10296) : self__.afn.call(null,G__10291,G__10292,G__10293,G__10294,G__10295,G__10296));
});
var G__10740__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10297 = a;
var G__10298 = b;
var G__10299 = c;
var G__10300 = d;
var G__10301 = e;
var G__10302 = f;
var G__10303 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303) : self__.afn.call(null,G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303));
});
var G__10740__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10304 = a;
var G__10305 = b;
var G__10306 = c;
var G__10307 = d;
var G__10308 = e;
var G__10309 = f;
var G__10310 = g;
var G__10311 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10304,G__10305,G__10306,G__10307,G__10308,G__10309,G__10310,G__10311) : self__.afn.call(null,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309,G__10310,G__10311));
});
var G__10740__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10312 = a;
var G__10313 = b;
var G__10314 = c;
var G__10315 = d;
var G__10316 = e;
var G__10317 = f;
var G__10318 = g;
var G__10319 = h;
var G__10320 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10312,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318,G__10319,G__10320) : self__.afn.call(null,G__10312,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318,G__10319,G__10320));
});
var G__10740__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10321 = a;
var G__10322 = b;
var G__10323 = c;
var G__10324 = d;
var G__10325 = e;
var G__10326 = f;
var G__10327 = g;
var G__10328 = h;
var G__10329 = i;
var G__10330 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10321,G__10322,G__10323,G__10324,G__10325,G__10326,G__10327,G__10328,G__10329,G__10330) : self__.afn.call(null,G__10321,G__10322,G__10323,G__10324,G__10325,G__10326,G__10327,G__10328,G__10329,G__10330));
});
var G__10740__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10331 = a;
var G__10332 = b;
var G__10333 = c;
var G__10334 = d;
var G__10335 = e;
var G__10336 = f;
var G__10337 = g;
var G__10338 = h;
var G__10339 = i;
var G__10340 = j;
var G__10341 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10331,G__10332,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338,G__10339,G__10340,G__10341) : self__.afn.call(null,G__10331,G__10332,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338,G__10339,G__10340,G__10341));
});
var G__10740__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10342 = a;
var G__10343 = b;
var G__10344 = c;
var G__10345 = d;
var G__10346 = e;
var G__10347 = f;
var G__10348 = g;
var G__10349 = h;
var G__10350 = i;
var G__10351 = j;
var G__10352 = k;
var G__10353 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352,G__10353) : self__.afn.call(null,G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352,G__10353));
});
var G__10740__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10354 = a;
var G__10355 = b;
var G__10356 = c;
var G__10357 = d;
var G__10358 = e;
var G__10359 = f;
var G__10360 = g;
var G__10361 = h;
var G__10362 = i;
var G__10363 = j;
var G__10364 = k;
var G__10365 = l;
var G__10366 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10354,G__10355,G__10356,G__10357,G__10358,G__10359,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365,G__10366) : self__.afn.call(null,G__10354,G__10355,G__10356,G__10357,G__10358,G__10359,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365,G__10366));
});
var G__10740__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10367 = a;
var G__10368 = b;
var G__10369 = c;
var G__10370 = d;
var G__10371 = e;
var G__10372 = f;
var G__10373 = g;
var G__10374 = h;
var G__10375 = i;
var G__10376 = j;
var G__10377 = k;
var G__10378 = l;
var G__10379 = m;
var G__10380 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10367,G__10368,G__10369,G__10370,G__10371,G__10372,G__10373,G__10374,G__10375,G__10376,G__10377,G__10378,G__10379,G__10380) : self__.afn.call(null,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372,G__10373,G__10374,G__10375,G__10376,G__10377,G__10378,G__10379,G__10380));
});
var G__10740__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10381 = a;
var G__10382 = b;
var G__10383 = c;
var G__10384 = d;
var G__10385 = e;
var G__10386 = f;
var G__10387 = g;
var G__10388 = h;
var G__10389 = i;
var G__10390 = j;
var G__10391 = k;
var G__10392 = l;
var G__10393 = m;
var G__10394 = n;
var G__10395 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10381,G__10382,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395) : self__.afn.call(null,G__10381,G__10382,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395));
});
var G__10740__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10396 = a;
var G__10397 = b;
var G__10398 = c;
var G__10399 = d;
var G__10400 = e;
var G__10401 = f;
var G__10402 = g;
var G__10403 = h;
var G__10404 = i;
var G__10405 = j;
var G__10406 = k;
var G__10407 = l;
var G__10408 = m;
var G__10409 = n;
var G__10410 = o;
var G__10411 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10396,G__10397,G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409,G__10410,G__10411) : self__.afn.call(null,G__10396,G__10397,G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409,G__10410,G__10411));
});
var G__10740__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10412 = a;
var G__10413 = b;
var G__10414 = c;
var G__10415 = d;
var G__10416 = e;
var G__10417 = f;
var G__10418 = g;
var G__10419 = h;
var G__10420 = i;
var G__10421 = j;
var G__10422 = k;
var G__10423 = l;
var G__10424 = m;
var G__10425 = n;
var G__10426 = o;
var G__10427 = p;
var G__10428 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10412,G__10413,G__10414,G__10415,G__10416,G__10417,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426,G__10427,G__10428) : self__.afn.call(null,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426,G__10427,G__10428));
});
var G__10740__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10429 = a;
var G__10430 = b;
var G__10431 = c;
var G__10432 = d;
var G__10433 = e;
var G__10434 = f;
var G__10435 = g;
var G__10436 = h;
var G__10437 = i;
var G__10438 = j;
var G__10439 = k;
var G__10440 = l;
var G__10441 = m;
var G__10442 = n;
var G__10443 = o;
var G__10444 = p;
var G__10445 = q;
var G__10446 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437,G__10438,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446) : self__.afn.call(null,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437,G__10438,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446));
});
var G__10740__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10447 = a;
var G__10448 = b;
var G__10449 = c;
var G__10450 = d;
var G__10451 = e;
var G__10452 = f;
var G__10453 = g;
var G__10454 = h;
var G__10455 = i;
var G__10456 = j;
var G__10457 = k;
var G__10458 = l;
var G__10459 = m;
var G__10460 = n;
var G__10461 = o;
var G__10462 = p;
var G__10463 = q;
var G__10464 = r;
var G__10465 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10447,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465) : self__.afn.call(null,G__10447,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465));
});
var G__10740__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10466 = a;
var G__10467 = b;
var G__10468 = c;
var G__10469 = d;
var G__10470 = e;
var G__10471 = f;
var G__10472 = g;
var G__10473 = h;
var G__10474 = i;
var G__10475 = j;
var G__10476 = k;
var G__10477 = l;
var G__10478 = m;
var G__10479 = n;
var G__10480 = o;
var G__10481 = p;
var G__10482 = q;
var G__10483 = r;
var G__10484 = s;
var G__10485 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485) : self__.afn.call(null,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485));
});
var G__10740__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10486 = self__.afn;
var G__10487 = a;
var G__10488 = b;
var G__10489 = c;
var G__10490 = d;
var G__10491 = e;
var G__10492 = f;
var G__10493 = g;
var G__10494 = h;
var G__10495 = i;
var G__10496 = j;
var G__10497 = k;
var G__10498 = l;
var G__10499 = m;
var G__10500 = n;
var G__10501 = o;
var G__10502 = p;
var G__10503 = q;
var G__10504 = r;
var G__10505 = s;
var G__10506 = t;
var G__10507 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507) : cljs.core.apply.call(null,G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507));
});
G__10740 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__10740__1.call(this,self__);
case 2:
return G__10740__2.call(this,self__,a);
case 3:
return G__10740__3.call(this,self__,a,b);
case 4:
return G__10740__4.call(this,self__,a,b,c);
case 5:
return G__10740__5.call(this,self__,a,b,c,d);
case 6:
return G__10740__6.call(this,self__,a,b,c,d,e);
case 7:
return G__10740__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__10740__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__10740__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__10740__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__10740__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__10740__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__10740__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__10740__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__10740__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__10740__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__10740__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__10740__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__10740__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__10740__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__10740__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__10740__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10740.cljs$core$IFn$_invoke$arity$1 = G__10740__1;
G__10740.cljs$core$IFn$_invoke$arity$2 = G__10740__2;
G__10740.cljs$core$IFn$_invoke$arity$3 = G__10740__3;
G__10740.cljs$core$IFn$_invoke$arity$4 = G__10740__4;
G__10740.cljs$core$IFn$_invoke$arity$5 = G__10740__5;
G__10740.cljs$core$IFn$_invoke$arity$6 = G__10740__6;
G__10740.cljs$core$IFn$_invoke$arity$7 = G__10740__7;
G__10740.cljs$core$IFn$_invoke$arity$8 = G__10740__8;
G__10740.cljs$core$IFn$_invoke$arity$9 = G__10740__9;
G__10740.cljs$core$IFn$_invoke$arity$10 = G__10740__10;
G__10740.cljs$core$IFn$_invoke$arity$11 = G__10740__11;
G__10740.cljs$core$IFn$_invoke$arity$12 = G__10740__12;
G__10740.cljs$core$IFn$_invoke$arity$13 = G__10740__13;
G__10740.cljs$core$IFn$_invoke$arity$14 = G__10740__14;
G__10740.cljs$core$IFn$_invoke$arity$15 = G__10740__15;
G__10740.cljs$core$IFn$_invoke$arity$16 = G__10740__16;
G__10740.cljs$core$IFn$_invoke$arity$17 = G__10740__17;
G__10740.cljs$core$IFn$_invoke$arity$18 = G__10740__18;
G__10740.cljs$core$IFn$_invoke$arity$19 = G__10740__19;
G__10740.cljs$core$IFn$_invoke$arity$20 = G__10740__20;
G__10740.cljs$core$IFn$_invoke$arity$21 = G__10740__21;
G__10740.cljs$core$IFn$_invoke$arity$22 = G__10740__22;
return G__10740;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args10275){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10275)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__10508 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10508) : self__.afn.call(null,G__10508));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__10509 = a;
var G__10510 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10509,G__10510) : self__.afn.call(null,G__10509,G__10510));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__10511 = a;
var G__10512 = b;
var G__10513 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10511,G__10512,G__10513) : self__.afn.call(null,G__10511,G__10512,G__10513));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__10514 = a;
var G__10515 = b;
var G__10516 = c;
var G__10517 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10514,G__10515,G__10516,G__10517) : self__.afn.call(null,G__10514,G__10515,G__10516,G__10517));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__10518 = a;
var G__10519 = b;
var G__10520 = c;
var G__10521 = d;
var G__10522 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10518,G__10519,G__10520,G__10521,G__10522) : self__.afn.call(null,G__10518,G__10519,G__10520,G__10521,G__10522));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__10523 = a;
var G__10524 = b;
var G__10525 = c;
var G__10526 = d;
var G__10527 = e;
var G__10528 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10523,G__10524,G__10525,G__10526,G__10527,G__10528) : self__.afn.call(null,G__10523,G__10524,G__10525,G__10526,G__10527,G__10528));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__10529 = a;
var G__10530 = b;
var G__10531 = c;
var G__10532 = d;
var G__10533 = e;
var G__10534 = f;
var G__10535 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535) : self__.afn.call(null,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__10536 = a;
var G__10537 = b;
var G__10538 = c;
var G__10539 = d;
var G__10540 = e;
var G__10541 = f;
var G__10542 = g;
var G__10543 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543) : self__.afn.call(null,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__10544 = a;
var G__10545 = b;
var G__10546 = c;
var G__10547 = d;
var G__10548 = e;
var G__10549 = f;
var G__10550 = g;
var G__10551 = h;
var G__10552 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552) : self__.afn.call(null,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__10553 = a;
var G__10554 = b;
var G__10555 = c;
var G__10556 = d;
var G__10557 = e;
var G__10558 = f;
var G__10559 = g;
var G__10560 = h;
var G__10561 = i;
var G__10562 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10553,G__10554,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562) : self__.afn.call(null,G__10553,G__10554,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__10563 = a;
var G__10564 = b;
var G__10565 = c;
var G__10566 = d;
var G__10567 = e;
var G__10568 = f;
var G__10569 = g;
var G__10570 = h;
var G__10571 = i;
var G__10572 = j;
var G__10573 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570,G__10571,G__10572,G__10573) : self__.afn.call(null,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570,G__10571,G__10572,G__10573));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__10574 = a;
var G__10575 = b;
var G__10576 = c;
var G__10577 = d;
var G__10578 = e;
var G__10579 = f;
var G__10580 = g;
var G__10581 = h;
var G__10582 = i;
var G__10583 = j;
var G__10584 = k;
var G__10585 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585) : self__.afn.call(null,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__10586 = a;
var G__10587 = b;
var G__10588 = c;
var G__10589 = d;
var G__10590 = e;
var G__10591 = f;
var G__10592 = g;
var G__10593 = h;
var G__10594 = i;
var G__10595 = j;
var G__10596 = k;
var G__10597 = l;
var G__10598 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10586,G__10587,G__10588,G__10589,G__10590,G__10591,G__10592,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598) : self__.afn.call(null,G__10586,G__10587,G__10588,G__10589,G__10590,G__10591,G__10592,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__10599 = a;
var G__10600 = b;
var G__10601 = c;
var G__10602 = d;
var G__10603 = e;
var G__10604 = f;
var G__10605 = g;
var G__10606 = h;
var G__10607 = i;
var G__10608 = j;
var G__10609 = k;
var G__10610 = l;
var G__10611 = m;
var G__10612 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606,G__10607,G__10608,G__10609,G__10610,G__10611,G__10612) : self__.afn.call(null,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606,G__10607,G__10608,G__10609,G__10610,G__10611,G__10612));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__10613 = a;
var G__10614 = b;
var G__10615 = c;
var G__10616 = d;
var G__10617 = e;
var G__10618 = f;
var G__10619 = g;
var G__10620 = h;
var G__10621 = i;
var G__10622 = j;
var G__10623 = k;
var G__10624 = l;
var G__10625 = m;
var G__10626 = n;
var G__10627 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626,G__10627) : self__.afn.call(null,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626,G__10627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__10628 = a;
var G__10629 = b;
var G__10630 = c;
var G__10631 = d;
var G__10632 = e;
var G__10633 = f;
var G__10634 = g;
var G__10635 = h;
var G__10636 = i;
var G__10637 = j;
var G__10638 = k;
var G__10639 = l;
var G__10640 = m;
var G__10641 = n;
var G__10642 = o;
var G__10643 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643) : self__.afn.call(null,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__10644 = a;
var G__10645 = b;
var G__10646 = c;
var G__10647 = d;
var G__10648 = e;
var G__10649 = f;
var G__10650 = g;
var G__10651 = h;
var G__10652 = i;
var G__10653 = j;
var G__10654 = k;
var G__10655 = l;
var G__10656 = m;
var G__10657 = n;
var G__10658 = o;
var G__10659 = p;
var G__10660 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660) : self__.afn.call(null,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__10661 = a;
var G__10662 = b;
var G__10663 = c;
var G__10664 = d;
var G__10665 = e;
var G__10666 = f;
var G__10667 = g;
var G__10668 = h;
var G__10669 = i;
var G__10670 = j;
var G__10671 = k;
var G__10672 = l;
var G__10673 = m;
var G__10674 = n;
var G__10675 = o;
var G__10676 = p;
var G__10677 = q;
var G__10678 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10661,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678) : self__.afn.call(null,G__10661,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__10679 = a;
var G__10680 = b;
var G__10681 = c;
var G__10682 = d;
var G__10683 = e;
var G__10684 = f;
var G__10685 = g;
var G__10686 = h;
var G__10687 = i;
var G__10688 = j;
var G__10689 = k;
var G__10690 = l;
var G__10691 = m;
var G__10692 = n;
var G__10693 = o;
var G__10694 = p;
var G__10695 = q;
var G__10696 = r;
var G__10697 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697) : self__.afn.call(null,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__10698 = a;
var G__10699 = b;
var G__10700 = c;
var G__10701 = d;
var G__10702 = e;
var G__10703 = f;
var G__10704 = g;
var G__10705 = h;
var G__10706 = i;
var G__10707 = j;
var G__10708 = k;
var G__10709 = l;
var G__10710 = m;
var G__10711 = n;
var G__10712 = o;
var G__10713 = p;
var G__10714 = q;
var G__10715 = r;
var G__10716 = s;
var G__10717 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717) : self__.afn.call(null,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__10718 = self__.afn;
var G__10719 = a;
var G__10720 = b;
var G__10721 = c;
var G__10722 = d;
var G__10723 = e;
var G__10724 = f;
var G__10725 = g;
var G__10726 = h;
var G__10727 = i;
var G__10728 = j;
var G__10729 = k;
var G__10730 = l;
var G__10731 = m;
var G__10732 = n;
var G__10733 = o;
var G__10734 = p;
var G__10735 = q;
var G__10736 = r;
var G__10737 = s;
var G__10738 = t;
var G__10739 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10718,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739) : cljs.core.apply.call(null,G__10718,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__10744 = o;
if(G__10744){
var bit__4234__auto__ = (G__10744.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4234__auto__) || (G__10744.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__10744.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__10744);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__10744);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3541__auto__ = !((o == null));
if(and__3541__auto__){
var G__10748 = o;
if(G__10748){
var bit__4234__auto__ = (G__10748.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4234__auto__) || (G__10748.cljs$core$IMeta$)){
return true;
} else {
if((!G__10748.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10748);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10748);
}
} else {
return and__3541__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__10751__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__10752 = ret;
var G__10753 = cljs.core.first(ks);
var G__10754 = cljs.core.next(ks);
coll = G__10752;
k = G__10753;
ks = G__10754;
continue;
} else {
return ret;
}
}
break;
}
};
var G__10751 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__10755__i = 0, G__10755__a = new Array(arguments.length -  2);
while (G__10755__i < G__10755__a.length) {G__10755__a[G__10755__i] = arguments[G__10755__i + 2]; ++G__10755__i;}
  ks = new cljs.core.IndexedSeq(G__10755__a,0);
} 
return G__10751__delegate.call(this,coll,k,ks);};
G__10751.cljs$lang$maxFixedArity = 2;
G__10751.cljs$lang$applyTo = (function (arglist__10756){
var coll = cljs.core.first(arglist__10756);
arglist__10756 = cljs.core.next(arglist__10756);
var k = cljs.core.first(arglist__10756);
var ks = cljs.core.rest(arglist__10756);
return G__10751__delegate(coll,k,ks);
});
G__10751.cljs$core$IFn$_invoke$arity$variadic = G__10751__delegate;
return G__10751;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__10757 = null;
if (arguments.length > 2) {
var G__10758__i = 0, G__10758__a = new Array(arguments.length -  2);
while (G__10758__i < G__10758__a.length) {G__10758__a[G__10758__i] = arguments[G__10758__i + 2]; ++G__10758__i;}
G__10757 = new cljs.core.IndexedSeq(G__10758__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__10757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__10760 = x;
if(G__10760){
var bit__4234__auto__ = (G__10760.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4234__auto__) || (G__10760.cljs$core$ICollection$)){
return true;
} else {
if((!G__10760.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__10760);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__10760);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__10762 = x;
if(G__10762){
var bit__4234__auto__ = (G__10762.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4234__auto__) || (G__10762.cljs$core$ISet$)){
return true;
} else {
if((!G__10762.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__10762);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__10762);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__10764 = x;
if(G__10764){
var bit__4234__auto__ = (G__10764.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4234__auto__) || (G__10764.cljs$core$IAssociative$)){
return true;
} else {
if((!G__10764.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__10764);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__10764);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__10766 = x;
if(G__10766){
var bit__4234__auto__ = (G__10766.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4234__auto__) || (G__10766.cljs$core$ISequential$)){
return true;
} else {
if((!G__10766.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__10766);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__10766);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__10768 = x;
if(G__10768){
var bit__4234__auto__ = (G__10768.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4234__auto__) || (G__10768.cljs$core$ISorted$)){
return true;
} else {
if((!G__10768.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__10768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__10768);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__10770 = x;
if(G__10770){
var bit__4234__auto__ = (G__10770.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4234__auto__) || (G__10770.cljs$core$IReduce$)){
return true;
} else {
if((!G__10770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__10770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__10770);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__10772 = x;
if(G__10772){
var bit__4234__auto__ = (G__10772.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4234__auto__) || (G__10772.cljs$core$IMap$)){
return true;
} else {
if((!G__10772.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__10772);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__10772);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__10774 = x;
if(G__10774){
var bit__4234__auto__ = (G__10774.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4234__auto__) || (G__10774.cljs$core$IVector$)){
return true;
} else {
if((!G__10774.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__10774);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__10774);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__10776 = x;
if(G__10776){
var bit__4227__auto__ = (G__10776.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4227__auto__) || (G__10776.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj10782 = {};
return obj10782;
});
var js_obj__1 = (function() { 
var G__10785__delegate = function (keyvals){
var G__10783 = goog.object.create;
var G__10784 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__10783,G__10784) : cljs.core.apply.call(null,G__10783,G__10784));
};
var G__10785 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10786__i = 0, G__10786__a = new Array(arguments.length -  0);
while (G__10786__i < G__10786__a.length) {G__10786__a[G__10786__i] = arguments[G__10786__i + 0]; ++G__10786__i;}
  keyvals = new cljs.core.IndexedSeq(G__10786__a,0);
} 
return G__10785__delegate.call(this,keyvals);};
G__10785.cljs$lang$maxFixedArity = 0;
G__10785.cljs$lang$applyTo = (function (arglist__10787){
var keyvals = cljs.core.seq(arglist__10787);
return G__10785__delegate(keyvals);
});
G__10785.cljs$core$IFn$_invoke$arity$variadic = G__10785__delegate;
return G__10785;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__10788 = null;
if (arguments.length > 0) {
var G__10789__i = 0, G__10789__a = new Array(arguments.length -  0);
while (G__10789__i < G__10789__a.length) {G__10789__a[G__10789__i] = arguments[G__10789__i + 0]; ++G__10789__i;}
G__10788 = new cljs.core.IndexedSeq(G__10789__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__10788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__10792_10794 = obj;
var G__10793_10795 = ((function (G__10792_10794,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__10792_10794,keys))
;
goog.object.forEach(G__10792_10794,G__10793_10795);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__10796 = (i__$1 + (1));
var G__10797 = (j__$1 + (1));
var G__10798 = (len__$1 - (1));
i__$1 = G__10796;
j__$1 = G__10797;
len__$1 = G__10798;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__10799 = (i__$1 - (1));
var G__10800 = (j__$1 - (1));
var G__10801 = (len__$1 - (1));
i__$1 = G__10799;
j__$1 = G__10800;
len__$1 = G__10801;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj10803 = {};
return obj10803;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__10805 = s;
if(G__10805){
var bit__4234__auto__ = (G__10805.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4234__auto__) || (G__10805.cljs$core$ISeq$)){
return true;
} else {
if((!G__10805.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10805);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10805);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__10807 = s;
if(G__10807){
var bit__4234__auto__ = (G__10807.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4234__auto__) || (G__10807.cljs$core$ISeqable$)){
return true;
} else {
if((!G__10807.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__10807);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__10807);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3553__auto__ = cljs.core.fn_QMARK_(f);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var G__10811 = f;
if(G__10811){
var bit__4234__auto__ = (G__10811.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4234__auto__) || (G__10811.cljs$core$IFn$)){
return true;
} else {
if((!G__10811.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__10811);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__10811);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__10824 = n;
return isNaN(G__10824);
})())) && (!((n === Infinity))) && (((function (){var G__10825 = n;
return parseFloat(G__10825);
})() === (function (){var G__10826 = n;
var G__10827 = (10);
return parseInt(G__10826,G__10827);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__10828__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__10829 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__10830 = etc;
s = G__10829;
xs = G__10830;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__10828 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10831__i = 0, G__10831__a = new Array(arguments.length -  2);
while (G__10831__i < G__10831__a.length) {G__10831__a[G__10831__i] = arguments[G__10831__i + 2]; ++G__10831__i;}
  more = new cljs.core.IndexedSeq(G__10831__a,0);
} 
return G__10828__delegate.call(this,x,y,more);};
G__10828.cljs$lang$maxFixedArity = 2;
G__10828.cljs$lang$applyTo = (function (arglist__10832){
var x = cljs.core.first(arglist__10832);
arglist__10832 = cljs.core.next(arglist__10832);
var y = cljs.core.first(arglist__10832);
var more = cljs.core.rest(arglist__10832);
return G__10828__delegate(x,y,more);
});
G__10828.cljs$core$IFn$_invoke$arity$variadic = G__10828__delegate;
return G__10828;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__10833 = null;
if (arguments.length > 2) {
var G__10834__i = 0, G__10834__a = new Array(arguments.length -  2);
while (G__10834__i < G__10834__a.length) {G__10834__a[G__10834__i] = arguments[G__10834__i + 2]; ++G__10834__i;}
G__10833 = new cljs.core.IndexedSeq(G__10834__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__10838 = x;
if(G__10838){
var bit__4227__auto__ = (G__10838.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4227__auto__) || (G__10838.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__10839 = x;
var G__10840 = y;
return goog.array.defaultCompare(G__10839,G__10840);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__10845 = xs;
var G__10846 = ys;
var G__10847 = len;
var G__10848 = (n + (1));
xs = G__10845;
ys = G__10846;
len = G__10847;
n = G__10848;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__10853 = x;
var G__10854 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10853,G__10854) : f.call(null,G__10853,G__10854));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__10855 = y;
var G__10856 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10855,G__10856) : f.call(null,G__10855,G__10856));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__10862 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10862) : cljs.core.to_array.call(null,G__10862));
})();
var G__10863_10865 = a;
var G__10864_10866 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__10863_10865,G__10864_10866);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__10872 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10872) : keyfn.call(null,G__10872));
})(),(function (){var G__10873 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10873) : keyfn.call(null,G__10873));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__10879 = f;
var G__10880 = cljs.core.first(s);
var G__10881 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__10879,G__10880,G__10881) : cljs.core.reduce.call(null,G__10879,G__10880,G__10881));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__10882 = val__$1;
var G__10883 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10882,G__10883) : f.call(null,G__10882,G__10883));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10884 = nval;
var G__10885 = cljs.core.next(coll__$1);
val__$1 = G__10884;
coll__$1 = G__10885;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__10889 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10889) : cljs.core.to_array.call(null,G__10889));
})();
var G__10890_10892 = a;
goog.array.shuffle(G__10890_10892);

var G__10891 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__10891) : cljs.core.vec.call(null,G__10891));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__10895 = coll;
if(G__10895){
var bit__4227__auto__ = (G__10895.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4227__auto__) || (G__10895.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__10896 = coll;
if(G__10896){
var bit__4227__auto__ = (G__10896.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4227__auto__) || (G__10896.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__10905 = null;
var G__10905__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__10905__1 = (function (x){
var G__10902 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__10902) : cf.call(null,G__10902));
});
var G__10905__2 = (function (x,y){
var G__10903 = x;
var G__10904 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10903,G__10904) : f.call(null,G__10903,G__10904));
});
G__10905 = function(x,y){
switch(arguments.length){
case 0:
return G__10905__0.call(this);
case 1:
return G__10905__1.call(this,x);
case 2:
return G__10905__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10905.cljs$core$IFn$_invoke$arity$0 = G__10905__0;
G__10905.cljs$core$IFn$_invoke$arity$1 = G__10905__1;
G__10905.cljs$core$IFn$_invoke$arity$2 = G__10905__2;
return G__10905;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__10912 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__10912) : xform.call(null,G__10912));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__10913 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__10913) : f__$1.call(null,G__10913));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__10914__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__10914 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10915__i = 0, G__10915__a = new Array(arguments.length -  2);
while (G__10915__i < G__10915__a.length) {G__10915__a[G__10915__i] = arguments[G__10915__i + 2]; ++G__10915__i;}
  more = new cljs.core.IndexedSeq(G__10915__a,0);
} 
return G__10914__delegate.call(this,x,y,more);};
G__10914.cljs$lang$maxFixedArity = 2;
G__10914.cljs$lang$applyTo = (function (arglist__10916){
var x = cljs.core.first(arglist__10916);
arglist__10916 = cljs.core.next(arglist__10916);
var y = cljs.core.first(arglist__10916);
var more = cljs.core.rest(arglist__10916);
return G__10914__delegate(x,y,more);
});
G__10914.cljs$core$IFn$_invoke$arity$variadic = G__10914__delegate;
return G__10914;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__10917 = null;
if (arguments.length > 2) {
var G__10918__i = 0, G__10918__a = new Array(arguments.length -  2);
while (G__10918__i < G__10918__a.length) {G__10918__a[G__10918__i] = arguments[G__10918__i + 2]; ++G__10918__i;}
G__10917 = new cljs.core.IndexedSeq(G__10918__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__10919__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__10919 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10920__i = 0, G__10920__a = new Array(arguments.length -  2);
while (G__10920__i < G__10920__a.length) {G__10920__a[G__10920__i] = arguments[G__10920__i + 2]; ++G__10920__i;}
  more = new cljs.core.IndexedSeq(G__10920__a,0);
} 
return G__10919__delegate.call(this,x,y,more);};
G__10919.cljs$lang$maxFixedArity = 2;
G__10919.cljs$lang$applyTo = (function (arglist__10921){
var x = cljs.core.first(arglist__10921);
arglist__10921 = cljs.core.next(arglist__10921);
var y = cljs.core.first(arglist__10921);
var more = cljs.core.rest(arglist__10921);
return G__10919__delegate(x,y,more);
});
G__10919.cljs$core$IFn$_invoke$arity$variadic = G__10919__delegate;
return G__10919;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__10922 = null;
if (arguments.length > 2) {
var G__10923__i = 0, G__10923__a = new Array(arguments.length -  2);
while (G__10923__i < G__10923__a.length) {G__10923__a[G__10923__i] = arguments[G__10923__i + 2]; ++G__10923__i;}
G__10922 = new cljs.core.IndexedSeq(G__10923__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__10924__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__10924 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10925__i = 0, G__10925__a = new Array(arguments.length -  2);
while (G__10925__i < G__10925__a.length) {G__10925__a[G__10925__i] = arguments[G__10925__i + 2]; ++G__10925__i;}
  more = new cljs.core.IndexedSeq(G__10925__a,0);
} 
return G__10924__delegate.call(this,x,y,more);};
G__10924.cljs$lang$maxFixedArity = 2;
G__10924.cljs$lang$applyTo = (function (arglist__10926){
var x = cljs.core.first(arglist__10926);
arglist__10926 = cljs.core.next(arglist__10926);
var y = cljs.core.first(arglist__10926);
var more = cljs.core.rest(arglist__10926);
return G__10924__delegate(x,y,more);
});
G__10924.cljs$core$IFn$_invoke$arity$variadic = G__10924__delegate;
return G__10924;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__10927 = null;
if (arguments.length > 2) {
var G__10928__i = 0, G__10928__a = new Array(arguments.length -  2);
while (G__10928__i < G__10928__a.length) {G__10928__a[G__10928__i] = arguments[G__10928__i + 2]; ++G__10928__i;}
G__10927 = new cljs.core.IndexedSeq(G__10928__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__10933__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__10933 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10934__i = 0, G__10934__a = new Array(arguments.length -  2);
while (G__10934__i < G__10934__a.length) {G__10934__a[G__10934__i] = arguments[G__10934__i + 2]; ++G__10934__i;}
  more = new cljs.core.IndexedSeq(G__10934__a,0);
} 
return G__10933__delegate.call(this,x,y,more);};
G__10933.cljs$lang$maxFixedArity = 2;
G__10933.cljs$lang$applyTo = (function (arglist__10935){
var x = cljs.core.first(arglist__10935);
arglist__10935 = cljs.core.next(arglist__10935);
var y = cljs.core.first(arglist__10935);
var more = cljs.core.rest(arglist__10935);
return G__10933__delegate(x,y,more);
});
G__10933.cljs$core$IFn$_invoke$arity$variadic = G__10933__delegate;
return G__10933;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__10936 = null;
if (arguments.length > 2) {
var G__10937__i = 0, G__10937__a = new Array(arguments.length -  2);
while (G__10937__i < G__10937__a.length) {G__10937__a[G__10937__i] = arguments[G__10937__i + 2]; ++G__10937__i;}
G__10936 = new cljs.core.IndexedSeq(G__10937__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__10938__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__10939 = y;
var G__10940 = cljs.core.first(more);
var G__10941 = cljs.core.next(more);
x = G__10939;
y = G__10940;
more = G__10941;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10938 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10942__i = 0, G__10942__a = new Array(arguments.length -  2);
while (G__10942__i < G__10942__a.length) {G__10942__a[G__10942__i] = arguments[G__10942__i + 2]; ++G__10942__i;}
  more = new cljs.core.IndexedSeq(G__10942__a,0);
} 
return G__10938__delegate.call(this,x,y,more);};
G__10938.cljs$lang$maxFixedArity = 2;
G__10938.cljs$lang$applyTo = (function (arglist__10943){
var x = cljs.core.first(arglist__10943);
arglist__10943 = cljs.core.next(arglist__10943);
var y = cljs.core.first(arglist__10943);
var more = cljs.core.rest(arglist__10943);
return G__10938__delegate(x,y,more);
});
G__10938.cljs$core$IFn$_invoke$arity$variadic = G__10938__delegate;
return G__10938;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__10944 = null;
if (arguments.length > 2) {
var G__10945__i = 0, G__10945__a = new Array(arguments.length -  2);
while (G__10945__i < G__10945__a.length) {G__10945__a[G__10945__i] = arguments[G__10945__i + 2]; ++G__10945__i;}
G__10944 = new cljs.core.IndexedSeq(G__10945__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__10946__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__10947 = y;
var G__10948 = cljs.core.first(more);
var G__10949 = cljs.core.next(more);
x = G__10947;
y = G__10948;
more = G__10949;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10946 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10950__i = 0, G__10950__a = new Array(arguments.length -  2);
while (G__10950__i < G__10950__a.length) {G__10950__a[G__10950__i] = arguments[G__10950__i + 2]; ++G__10950__i;}
  more = new cljs.core.IndexedSeq(G__10950__a,0);
} 
return G__10946__delegate.call(this,x,y,more);};
G__10946.cljs$lang$maxFixedArity = 2;
G__10946.cljs$lang$applyTo = (function (arglist__10951){
var x = cljs.core.first(arglist__10951);
arglist__10951 = cljs.core.next(arglist__10951);
var y = cljs.core.first(arglist__10951);
var more = cljs.core.rest(arglist__10951);
return G__10946__delegate(x,y,more);
});
G__10946.cljs$core$IFn$_invoke$arity$variadic = G__10946__delegate;
return G__10946;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__10952 = null;
if (arguments.length > 2) {
var G__10953__i = 0, G__10953__a = new Array(arguments.length -  2);
while (G__10953__i < G__10953__a.length) {G__10953__a[G__10953__i] = arguments[G__10953__i + 2]; ++G__10953__i;}
G__10952 = new cljs.core.IndexedSeq(G__10953__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__10954__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__10955 = y;
var G__10956 = cljs.core.first(more);
var G__10957 = cljs.core.next(more);
x = G__10955;
y = G__10956;
more = G__10957;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10954 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10958__i = 0, G__10958__a = new Array(arguments.length -  2);
while (G__10958__i < G__10958__a.length) {G__10958__a[G__10958__i] = arguments[G__10958__i + 2]; ++G__10958__i;}
  more = new cljs.core.IndexedSeq(G__10958__a,0);
} 
return G__10954__delegate.call(this,x,y,more);};
G__10954.cljs$lang$maxFixedArity = 2;
G__10954.cljs$lang$applyTo = (function (arglist__10959){
var x = cljs.core.first(arglist__10959);
arglist__10959 = cljs.core.next(arglist__10959);
var y = cljs.core.first(arglist__10959);
var more = cljs.core.rest(arglist__10959);
return G__10954__delegate(x,y,more);
});
G__10954.cljs$core$IFn$_invoke$arity$variadic = G__10954__delegate;
return G__10954;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__10960 = null;
if (arguments.length > 2) {
var G__10961__i = 0, G__10961__a = new Array(arguments.length -  2);
while (G__10961__i < G__10961__a.length) {G__10961__a[G__10961__i] = arguments[G__10961__i + 2]; ++G__10961__i;}
G__10960 = new cljs.core.IndexedSeq(G__10961__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__10962__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__10963 = y;
var G__10964 = cljs.core.first(more);
var G__10965 = cljs.core.next(more);
x = G__10963;
y = G__10964;
more = G__10965;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10962 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10966__i = 0, G__10966__a = new Array(arguments.length -  2);
while (G__10966__i < G__10966__a.length) {G__10966__a[G__10966__i] = arguments[G__10966__i + 2]; ++G__10966__i;}
  more = new cljs.core.IndexedSeq(G__10966__a,0);
} 
return G__10962__delegate.call(this,x,y,more);};
G__10962.cljs$lang$maxFixedArity = 2;
G__10962.cljs$lang$applyTo = (function (arglist__10967){
var x = cljs.core.first(arglist__10967);
arglist__10967 = cljs.core.next(arglist__10967);
var y = cljs.core.first(arglist__10967);
var more = cljs.core.rest(arglist__10967);
return G__10962__delegate(x,y,more);
});
G__10962.cljs$core$IFn$_invoke$arity$variadic = G__10962__delegate;
return G__10962;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__10968 = null;
if (arguments.length > 2) {
var G__10969__i = 0, G__10969__a = new Array(arguments.length -  2);
while (G__10969__i < G__10969__a.length) {G__10969__a[G__10969__i] = arguments[G__10969__i + 2]; ++G__10969__i;}
G__10968 = new cljs.core.IndexedSeq(G__10969__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3870__auto__ = x;
var y__3871__auto__ = y;
return ((x__3870__auto__ > y__3871__auto__) ? x__3870__auto__ : y__3871__auto__);
});
var max__3 = (function() { 
var G__10970__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3870__auto__ = x;
var y__3871__auto__ = y;
return ((x__3870__auto__ > y__3871__auto__) ? x__3870__auto__ : y__3871__auto__);
})(),more);
};
var G__10970 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10971__i = 0, G__10971__a = new Array(arguments.length -  2);
while (G__10971__i < G__10971__a.length) {G__10971__a[G__10971__i] = arguments[G__10971__i + 2]; ++G__10971__i;}
  more = new cljs.core.IndexedSeq(G__10971__a,0);
} 
return G__10970__delegate.call(this,x,y,more);};
G__10970.cljs$lang$maxFixedArity = 2;
G__10970.cljs$lang$applyTo = (function (arglist__10972){
var x = cljs.core.first(arglist__10972);
arglist__10972 = cljs.core.next(arglist__10972);
var y = cljs.core.first(arglist__10972);
var more = cljs.core.rest(arglist__10972);
return G__10970__delegate(x,y,more);
});
G__10970.cljs$core$IFn$_invoke$arity$variadic = G__10970__delegate;
return G__10970;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__10973 = null;
if (arguments.length > 2) {
var G__10974__i = 0, G__10974__a = new Array(arguments.length -  2);
while (G__10974__i < G__10974__a.length) {G__10974__a[G__10974__i] = arguments[G__10974__i + 2]; ++G__10974__i;}
G__10973 = new cljs.core.IndexedSeq(G__10974__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3877__auto__ = x;
var y__3878__auto__ = y;
return ((x__3877__auto__ < y__3878__auto__) ? x__3877__auto__ : y__3878__auto__);
});
var min__3 = (function() { 
var G__10975__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3877__auto__ = x;
var y__3878__auto__ = y;
return ((x__3877__auto__ < y__3878__auto__) ? x__3877__auto__ : y__3878__auto__);
})(),more);
};
var G__10975 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10976__i = 0, G__10976__a = new Array(arguments.length -  2);
while (G__10976__i < G__10976__a.length) {G__10976__a[G__10976__i] = arguments[G__10976__i + 2]; ++G__10976__i;}
  more = new cljs.core.IndexedSeq(G__10976__a,0);
} 
return G__10975__delegate.call(this,x,y,more);};
G__10975.cljs$lang$maxFixedArity = 2;
G__10975.cljs$lang$applyTo = (function (arglist__10977){
var x = cljs.core.first(arglist__10977);
arglist__10977 = cljs.core.next(arglist__10977);
var y = cljs.core.first(arglist__10977);
var more = cljs.core.rest(arglist__10977);
return G__10975__delegate(x,y,more);
});
G__10975.cljs$core$IFn$_invoke$arity$variadic = G__10975__delegate;
return G__10975;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__10978 = null;
if (arguments.length > 2) {
var G__10979__i = 0, G__10979__a = new Array(arguments.length -  2);
while (G__10979__i < G__10979__a.length) {G__10979__a[G__10979__i] = arguments[G__10979__i + 2]; ++G__10979__i;}
G__10978 = new cljs.core.IndexedSeq(G__10979__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__10980__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__10980 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10981__i = 0, G__10981__a = new Array(arguments.length -  2);
while (G__10981__i < G__10981__a.length) {G__10981__a[G__10981__i] = arguments[G__10981__i + 2]; ++G__10981__i;}
  more = new cljs.core.IndexedSeq(G__10981__a,0);
} 
return G__10980__delegate.call(this,x,y,more);};
G__10980.cljs$lang$maxFixedArity = 2;
G__10980.cljs$lang$applyTo = (function (arglist__10982){
var x = cljs.core.first(arglist__10982);
arglist__10982 = cljs.core.next(arglist__10982);
var y = cljs.core.first(arglist__10982);
var more = cljs.core.rest(arglist__10982);
return G__10980__delegate(x,y,more);
});
G__10980.cljs$core$IFn$_invoke$arity$variadic = G__10980__delegate;
return G__10980;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__10983 = null;
if (arguments.length > 2) {
var G__10984__i = 0, G__10984__a = new Array(arguments.length -  2);
while (G__10984__i < G__10984__a.length) {G__10984__a[G__10984__i] = arguments[G__10984__i + 2]; ++G__10984__i;}
G__10983 = new cljs.core.IndexedSeq(G__10984__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__10985__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__10985 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10986__i = 0, G__10986__a = new Array(arguments.length -  2);
while (G__10986__i < G__10986__a.length) {G__10986__a[G__10986__i] = arguments[G__10986__i + 2]; ++G__10986__i;}
  more = new cljs.core.IndexedSeq(G__10986__a,0);
} 
return G__10985__delegate.call(this,x,y,more);};
G__10985.cljs$lang$maxFixedArity = 2;
G__10985.cljs$lang$applyTo = (function (arglist__10987){
var x = cljs.core.first(arglist__10987);
arglist__10987 = cljs.core.next(arglist__10987);
var y = cljs.core.first(arglist__10987);
var more = cljs.core.rest(arglist__10987);
return G__10985__delegate(x,y,more);
});
G__10985.cljs$core$IFn$_invoke$arity$variadic = G__10985__delegate;
return G__10985;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__10988 = null;
if (arguments.length > 2) {
var G__10989__i = 0, G__10989__a = new Array(arguments.length -  2);
while (G__10989__i < G__10989__a.length) {G__10989__a[G__10989__i] = arguments[G__10989__i + 2]; ++G__10989__i;}
G__10988 = new cljs.core.IndexedSeq(G__10989__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__10994__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__10994 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10995__i = 0, G__10995__a = new Array(arguments.length -  2);
while (G__10995__i < G__10995__a.length) {G__10995__a[G__10995__i] = arguments[G__10995__i + 2]; ++G__10995__i;}
  more = new cljs.core.IndexedSeq(G__10995__a,0);
} 
return G__10994__delegate.call(this,x,y,more);};
G__10994.cljs$lang$maxFixedArity = 2;
G__10994.cljs$lang$applyTo = (function (arglist__10996){
var x = cljs.core.first(arglist__10996);
arglist__10996 = cljs.core.next(arglist__10996);
var y = cljs.core.first(arglist__10996);
var more = cljs.core.rest(arglist__10996);
return G__10994__delegate(x,y,more);
});
G__10994.cljs$core$IFn$_invoke$arity$variadic = G__10994__delegate;
return G__10994;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__10997 = null;
if (arguments.length > 2) {
var G__10998__i = 0, G__10998__a = new Array(arguments.length -  2);
while (G__10998__i < G__10998__a.length) {G__10998__a[G__10998__i] = arguments[G__10998__i + 2]; ++G__10998__i;}
G__10997 = new cljs.core.IndexedSeq(G__10998__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__10999__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__10999 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11000__i = 0, G__11000__a = new Array(arguments.length -  2);
while (G__11000__i < G__11000__a.length) {G__11000__a[G__11000__i] = arguments[G__11000__i + 2]; ++G__11000__i;}
  more = new cljs.core.IndexedSeq(G__11000__a,0);
} 
return G__10999__delegate.call(this,x,y,more);};
G__10999.cljs$lang$maxFixedArity = 2;
G__10999.cljs$lang$applyTo = (function (arglist__11001){
var x = cljs.core.first(arglist__11001);
arglist__11001 = cljs.core.next(arglist__11001);
var y = cljs.core.first(arglist__11001);
var more = cljs.core.rest(arglist__11001);
return G__10999__delegate(x,y,more);
});
G__10999.cljs$core$IFn$_invoke$arity$variadic = G__10999__delegate;
return G__10999;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__11002 = null;
if (arguments.length > 2) {
var G__11003__i = 0, G__11003__a = new Array(arguments.length -  2);
while (G__11003__i < G__11003__a.length) {G__11003__a[G__11003__i] = arguments[G__11003__i + 2]; ++G__11003__i;}
G__11002 = new cljs.core.IndexedSeq(G__11003__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__11004__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__11004 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11005__i = 0, G__11005__a = new Array(arguments.length -  2);
while (G__11005__i < G__11005__a.length) {G__11005__a[G__11005__i] = arguments[G__11005__i + 2]; ++G__11005__i;}
  more = new cljs.core.IndexedSeq(G__11005__a,0);
} 
return G__11004__delegate.call(this,x,y,more);};
G__11004.cljs$lang$maxFixedArity = 2;
G__11004.cljs$lang$applyTo = (function (arglist__11006){
var x = cljs.core.first(arglist__11006);
arglist__11006 = cljs.core.next(arglist__11006);
var y = cljs.core.first(arglist__11006);
var more = cljs.core.rest(arglist__11006);
return G__11004__delegate(x,y,more);
});
G__11004.cljs$core$IFn$_invoke$arity$variadic = G__11004__delegate;
return G__11004;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__11007 = null;
if (arguments.length > 2) {
var G__11008__i = 0, G__11008__a = new Array(arguments.length -  2);
while (G__11008__i < G__11008__a.length) {G__11008__a[G__11008__i] = arguments[G__11008__i + 2]; ++G__11008__i;}
G__11007 = new cljs.core.IndexedSeq(G__11008__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__11011 = x;
var G__11012 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11011,G__11012) : cljs.core.mod.call(null,G__11011,G__11012));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__11013__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__11013 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11014__i = 0, G__11014__a = new Array(arguments.length -  2);
while (G__11014__i < G__11014__a.length) {G__11014__a[G__11014__i] = arguments[G__11014__i + 2]; ++G__11014__i;}
  more = new cljs.core.IndexedSeq(G__11014__a,0);
} 
return G__11013__delegate.call(this,x,y,more);};
G__11013.cljs$lang$maxFixedArity = 2;
G__11013.cljs$lang$applyTo = (function (arglist__11015){
var x = cljs.core.first(arglist__11015);
arglist__11015 = cljs.core.next(arglist__11015);
var y = cljs.core.first(arglist__11015);
var more = cljs.core.rest(arglist__11015);
return G__11013__delegate(x,y,more);
});
G__11013.cljs$core$IFn$_invoke$arity$variadic = G__11013__delegate;
return G__11013;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__11016 = null;
if (arguments.length > 2) {
var G__11017__i = 0, G__11017__a = new Array(arguments.length -  2);
while (G__11017__i < G__11017__a.length) {G__11017__a[G__11017__i] = arguments[G__11017__i + 2]; ++G__11017__i;}
G__11016 = new cljs.core.IndexedSeq(G__11017__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__11018__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__11018 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11019__i = 0, G__11019__a = new Array(arguments.length -  2);
while (G__11019__i < G__11019__a.length) {G__11019__a[G__11019__i] = arguments[G__11019__i + 2]; ++G__11019__i;}
  more = new cljs.core.IndexedSeq(G__11019__a,0);
} 
return G__11018__delegate.call(this,x,y,more);};
G__11018.cljs$lang$maxFixedArity = 2;
G__11018.cljs$lang$applyTo = (function (arglist__11020){
var x = cljs.core.first(arglist__11020);
arglist__11020 = cljs.core.next(arglist__11020);
var y = cljs.core.first(arglist__11020);
var more = cljs.core.rest(arglist__11020);
return G__11018__delegate(x,y,more);
});
G__11018.cljs$core$IFn$_invoke$arity$variadic = G__11018__delegate;
return G__11018;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__11021 = null;
if (arguments.length > 2) {
var G__11022__i = 0, G__11022__a = new Array(arguments.length -  2);
while (G__11022__i < G__11022__a.length) {G__11022__a[G__11022__i] = arguments[G__11022__i + 2]; ++G__11022__i;}
G__11021 = new cljs.core.IndexedSeq(G__11022__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11021);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__11025 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11025) : Math.floor.call(null,G__11025));
} else {
var G__11026 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11026) : Math.ceil.call(null,G__11026));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__11027__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__11027 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11028__i = 0, G__11028__a = new Array(arguments.length -  2);
while (G__11028__i < G__11028__a.length) {G__11028__a[G__11028__i] = arguments[G__11028__i + 2]; ++G__11028__i;}
  more = new cljs.core.IndexedSeq(G__11028__a,0);
} 
return G__11027__delegate.call(this,x,y,more);};
G__11027.cljs$lang$maxFixedArity = 2;
G__11027.cljs$lang$applyTo = (function (arglist__11029){
var x = cljs.core.first(arglist__11029);
arglist__11029 = cljs.core.next(arglist__11029);
var y = cljs.core.first(arglist__11029);
var more = cljs.core.rest(arglist__11029);
return G__11027__delegate(x,y,more);
});
G__11027.cljs$core$IFn$_invoke$arity$variadic = G__11027__delegate;
return G__11027;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__11030 = null;
if (arguments.length > 2) {
var G__11031__i = 0, G__11031__a = new Array(arguments.length -  2);
while (G__11031__i < G__11031__a.length) {G__11031__a[G__11031__i] = arguments[G__11031__i + 2]; ++G__11031__i;}
G__11030 = new cljs.core.IndexedSeq(G__11031__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11030);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__11032__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__11032 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11033__i = 0, G__11033__a = new Array(arguments.length -  2);
while (G__11033__i < G__11033__a.length) {G__11033__a[G__11033__i] = arguments[G__11033__i + 2]; ++G__11033__i;}
  more = new cljs.core.IndexedSeq(G__11033__a,0);
} 
return G__11032__delegate.call(this,x,y,more);};
G__11032.cljs$lang$maxFixedArity = 2;
G__11032.cljs$lang$applyTo = (function (arglist__11034){
var x = cljs.core.first(arglist__11034);
arglist__11034 = cljs.core.next(arglist__11034);
var y = cljs.core.first(arglist__11034);
var more = cljs.core.rest(arglist__11034);
return G__11032__delegate(x,y,more);
});
G__11032.cljs$core$IFn$_invoke$arity$variadic = G__11032__delegate;
return G__11032;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__11035 = null;
if (arguments.length > 2) {
var G__11036__i = 0, G__11036__a = new Array(arguments.length -  2);
while (G__11036__i < G__11036__a.length) {G__11036__a[G__11036__i] = arguments[G__11036__i + 2]; ++G__11036__i;}
G__11035 = new cljs.core.IndexedSeq(G__11036__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__11037__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__11037 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11038__i = 0, G__11038__a = new Array(arguments.length -  2);
while (G__11038__i < G__11038__a.length) {G__11038__a[G__11038__i] = arguments[G__11038__i + 2]; ++G__11038__i;}
  more = new cljs.core.IndexedSeq(G__11038__a,0);
} 
return G__11037__delegate.call(this,x,y,more);};
G__11037.cljs$lang$maxFixedArity = 2;
G__11037.cljs$lang$applyTo = (function (arglist__11039){
var x = cljs.core.first(arglist__11039);
arglist__11039 = cljs.core.next(arglist__11039);
var y = cljs.core.first(arglist__11039);
var more = cljs.core.rest(arglist__11039);
return G__11037__delegate(x,y,more);
});
G__11037.cljs$core$IFn$_invoke$arity$variadic = G__11037__delegate;
return G__11037;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__11040 = null;
if (arguments.length > 2) {
var G__11041__i = 0, G__11041__a = new Array(arguments.length -  2);
while (G__11041__i < G__11041__a.length) {G__11041__a[G__11041__i] = arguments[G__11041__i + 2]; ++G__11041__i;}
G__11040 = new cljs.core.IndexedSeq(G__11041__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__11042__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__11042 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11043__i = 0, G__11043__a = new Array(arguments.length -  2);
while (G__11043__i < G__11043__a.length) {G__11043__a[G__11043__i] = arguments[G__11043__i + 2]; ++G__11043__i;}
  more = new cljs.core.IndexedSeq(G__11043__a,0);
} 
return G__11042__delegate.call(this,x,y,more);};
G__11042.cljs$lang$maxFixedArity = 2;
G__11042.cljs$lang$applyTo = (function (arglist__11044){
var x = cljs.core.first(arglist__11044);
arglist__11044 = cljs.core.next(arglist__11044);
var y = cljs.core.first(arglist__11044);
var more = cljs.core.rest(arglist__11044);
return G__11042__delegate(x,y,more);
});
G__11042.cljs$core$IFn$_invoke$arity$variadic = G__11042__delegate;
return G__11042;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__11045 = null;
if (arguments.length > 2) {
var G__11046__i = 0, G__11046__a = new Array(arguments.length -  2);
while (G__11046__i < G__11046__a.length) {G__11046__a[G__11046__i] = arguments[G__11046__i + 2]; ++G__11046__i;}
G__11045 = new cljs.core.IndexedSeq(G__11046__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11045);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__11051__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11052 = y;
var G__11053 = cljs.core.first(more);
var G__11054 = cljs.core.next(more);
x = G__11052;
y = G__11053;
more = G__11054;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11051 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11055__i = 0, G__11055__a = new Array(arguments.length -  2);
while (G__11055__i < G__11055__a.length) {G__11055__a[G__11055__i] = arguments[G__11055__i + 2]; ++G__11055__i;}
  more = new cljs.core.IndexedSeq(G__11055__a,0);
} 
return G__11051__delegate.call(this,x,y,more);};
G__11051.cljs$lang$maxFixedArity = 2;
G__11051.cljs$lang$applyTo = (function (arglist__11056){
var x = cljs.core.first(arglist__11056);
arglist__11056 = cljs.core.next(arglist__11056);
var y = cljs.core.first(arglist__11056);
var more = cljs.core.rest(arglist__11056);
return G__11051__delegate(x,y,more);
});
G__11051.cljs$core$IFn$_invoke$arity$variadic = G__11051__delegate;
return G__11051;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__11057 = null;
if (arguments.length > 2) {
var G__11058__i = 0, G__11058__a = new Array(arguments.length -  2);
while (G__11058__i < G__11058__a.length) {G__11058__a[G__11058__i] = arguments[G__11058__i + 2]; ++G__11058__i;}
G__11057 = new cljs.core.IndexedSeq(G__11058__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__11059 = (n__$1 - (1));
var G__11060 = cljs.core.next(xs);
n__$1 = G__11059;
xs = G__11060;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__11064 = x;
return goog.string.buildString(G__11064);
}
});
var str__2 = (function() { 
var G__11065__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__11066 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__11067 = cljs.core.next(more);
sb = G__11066;
more = G__11067;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__11065 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__11068__i = 0, G__11068__a = new Array(arguments.length -  1);
while (G__11068__i < G__11068__a.length) {G__11068__a[G__11068__i] = arguments[G__11068__i + 1]; ++G__11068__i;}
  ys = new cljs.core.IndexedSeq(G__11068__a,0);
} 
return G__11065__delegate.call(this,x,ys);};
G__11065.cljs$lang$maxFixedArity = 1;
G__11065.cljs$lang$applyTo = (function (arglist__11069){
var x = cljs.core.first(arglist__11069);
var ys = cljs.core.rest(arglist__11069);
return G__11065__delegate(x,ys);
});
G__11065.cljs$core$IFn$_invoke$arity$variadic = G__11065__delegate;
return G__11065;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__11070 = null;
if (arguments.length > 1) {
var G__11071__i = 0, G__11071__a = new Array(arguments.length -  1);
while (G__11071__i < G__11071__a.length) {G__11071__a[G__11071__i] = arguments[G__11071__i + 1]; ++G__11071__i;}
G__11070 = new cljs.core.IndexedSeq(G__11071__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__11072 = cljs.core.next(xs);
var G__11073 = cljs.core.next(ys);
xs = G__11072;
ys = G__11073;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__11074 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__11075 = cljs.core.next(s);
res = G__11074;
s = G__11075;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__11080 = ((h + (cljs.core.hash((function (){var G__11078 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11078) : cljs.core.key.call(null,G__11078));
})()) ^ cljs.core.hash((function (){var G__11079 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11079) : cljs.core.val.call(null,G__11079));
})()))) % (4503599627370496));
var G__11081 = cljs.core.next(s);
h = G__11080;
s = G__11081;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__11082 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__11083 = cljs.core.next(s__$1);
h = G__11082;
s__$1 = G__11083;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__11094_11104 = cljs.core.seq(fn_map);
var chunk__11095_11105 = null;
var count__11096_11106 = (0);
var i__11097_11107 = (0);
while(true){
if((i__11097_11107 < count__11096_11106)){
var vec__11098_11108 = chunk__11095_11105.cljs$core$IIndexed$_nth$arity$2(null,i__11097_11107);
var key_name_11109 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11098_11108,(0),null);
var f_11110 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11098_11108,(1),null);
var str_name_11111 = (function (){var G__11099 = key_name_11109;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11099) : cljs.core.name.call(null,G__11099));
})();
(obj[str_name_11111] = f_11110);

var G__11112 = seq__11094_11104;
var G__11113 = chunk__11095_11105;
var G__11114 = count__11096_11106;
var G__11115 = (i__11097_11107 + (1));
seq__11094_11104 = G__11112;
chunk__11095_11105 = G__11113;
count__11096_11106 = G__11114;
i__11097_11107 = G__11115;
continue;
} else {
var temp__4126__auto___11116 = cljs.core.seq(seq__11094_11104);
if(temp__4126__auto___11116){
var seq__11094_11117__$1 = temp__4126__auto___11116;
if(cljs.core.chunked_seq_QMARK_(seq__11094_11117__$1)){
var c__4340__auto___11118 = (function (){var G__11100 = seq__11094_11117__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__11100) : cljs.core.chunk_first.call(null,G__11100));
})();
var G__11119 = (function (){var G__11101 = seq__11094_11117__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__11101) : cljs.core.chunk_rest.call(null,G__11101));
})();
var G__11120 = c__4340__auto___11118;
var G__11121 = cljs.core.count(c__4340__auto___11118);
var G__11122 = (0);
seq__11094_11104 = G__11119;
chunk__11095_11105 = G__11120;
count__11096_11106 = G__11121;
i__11097_11107 = G__11122;
continue;
} else {
var vec__11102_11123 = cljs.core.first(seq__11094_11117__$1);
var key_name_11124 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11102_11123,(0),null);
var f_11125 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11102_11123,(1),null);
var str_name_11126 = (function (){var G__11103 = key_name_11124;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11103) : cljs.core.name.call(null,G__11103));
})();
(obj[str_name_11126] = f_11125);

var G__11127 = cljs.core.next(seq__11094_11117__$1);
var G__11128 = null;
var G__11129 = (0);
var G__11130 = (0);
seq__11094_11104 = G__11127;
chunk__11095_11105 = G__11128;
count__11096_11106 = G__11129;
i__11097_11107 = G__11130;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__11132 = coll;
if(G__11132){
var bit__4234__auto__ = (G__11132.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4234__auto__) || (G__11132.cljs$core$IReversible$)){
return true;
} else {
if((!G__11132.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__11132);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__11132);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__11133 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__11133;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__11134 = (i - (1));
var G__11135 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__11134;
r = G__11135;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__11136__i = 0, G__11136__a = new Array(arguments.length -  0);
while (G__11136__i < G__11136__a.length) {G__11136__a[G__11136__i] = arguments[G__11136__i + 0]; ++G__11136__i;}
  xs = new cljs.core.IndexedSeq(G__11136__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__11137){
var xs = cljs.core.seq(arglist__11137);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3553__auto__ = (coll == null);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var G__11141 = coll;
if(G__11141){
var bit__4227__auto__ = (G__11141.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4227__auto__) || (G__11141.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__11143 = x;
if(G__11143){
var bit__4234__auto__ = (G__11143.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4234__auto__) || (G__11143.cljs$core$IList$)){
return true;
} else {
if((!G__11143.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__11143);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__11143);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3541__auto__ = cljs.core.not(a.ns);
if(and__3541__auto__){
return b.ns;
} else {
return and__3541__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11150 = a.ns;
var G__11151 = b.ns;
return goog.array.defaultCompare(G__11150,G__11151);
})();
if(((0) === nsc)){
var G__11152 = a.name;
var G__11153 = b.name;
return goog.array.defaultCompare(G__11152,G__11153);
} else {
return nsc;
}
}
} else {
var G__11154 = a.name;
var G__11155 = b.name;
return goog.array.defaultCompare(G__11154,G__11155);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__3974__auto__ = self__._hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__11157 = null;
var G__11157__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__11157__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__11157 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11157__2.call(this,self__,coll);
case 3:
return G__11157__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11157.cljs$core$IFn$_invoke$arity$2 = G__11157__2;
G__11157.cljs$core$IFn$_invoke$arity$3 = G__11157__3;
return G__11157;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args11156){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11156)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__11159 = x;
if(G__11159){
var bit__4227__auto__ = (G__11159.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4227__auto__) || (G__11159.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__11161 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11161) : cljs.core.name.call(null,G__11161));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__11162 = ls.sval();
ls = G__11162;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__11164 = s;
if(G__11164){
var bit__4227__auto__ = (G__11164.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4227__auto__) || (G__11164.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__11165 = cljs.core.next(s__$1);
s__$1 = G__11165;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_11166 = (0);
var xs_11167 = cljs.core.seq(coll);
while(true){
if(xs_11167){
(ret[i_11166] = cljs.core.to_array(cljs.core.first(xs_11167)));

var G__11168 = (i_11166 + (1));
var G__11169 = cljs.core.next(xs_11167);
i_11166 = G__11168;
xs_11167 = G__11169;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11172 = (i + (1));
var G__11173 = cljs.core.next(s__$1);
i = G__11172;
s__$1 = G__11173;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___11174 = size;
var i_11175 = (0);
while(true){
if((i_11175 < n__4440__auto___11174)){
(a[i_11175] = init_val_or_seq);

var G__11176 = (i_11175 + (1));
i_11175 = G__11176;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11179 = (i + (1));
var G__11180 = cljs.core.next(s__$1);
i = G__11179;
s__$1 = G__11180;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___11181 = size;
var i_11182 = (0);
while(true){
if((i_11182 < n__4440__auto___11181)){
(a[i_11182] = init_val_or_seq);

var G__11183 = (i_11182 + (1));
i_11182 = G__11183;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11186 = (i + (1));
var G__11187 = cljs.core.next(s__$1);
i = G__11186;
s__$1 = G__11187;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___11188 = size;
var i_11189 = (0);
while(true){
if((i_11189 < n__4440__auto___11188)){
(a[i_11189] = init_val_or_seq);

var G__11190 = (i_11189 + (1));
i_11189 = G__11190;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11193 = (i + (1));
var G__11194 = cljs.core.next(s__$1);
i = G__11193;
s__$1 = G__11194;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___11195 = size;
var i_11196 = (0);
while(true){
if((i_11196 < n__4440__auto___11195)){
(a[i_11196] = init_val_or_seq);

var G__11197 = (i_11196 + (1));
i_11196 = G__11197;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__11198 = cljs.core.next(s__$1);
var G__11199 = (i - (1));
var G__11200 = (sum + (1));
s__$1 = G__11198;
i = G__11199;
sum = G__11200;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__11220__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__11220 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__11221__i = 0, G__11221__a = new Array(arguments.length -  2);
while (G__11221__i < G__11221__a.length) {G__11221__a[G__11221__i] = arguments[G__11221__i + 2]; ++G__11221__i;}
  zs = new cljs.core.IndexedSeq(G__11221__a,0);
} 
return G__11220__delegate.call(this,x,y,zs);};
G__11220.cljs$lang$maxFixedArity = 2;
G__11220.cljs$lang$applyTo = (function (arglist__11222){
var x = cljs.core.first(arglist__11222);
arglist__11222 = cljs.core.next(arglist__11222);
var y = cljs.core.first(arglist__11222);
var zs = cljs.core.rest(arglist__11222);
return G__11220__delegate(x,y,zs);
});
G__11220.cljs$core$IFn$_invoke$arity$variadic = G__11220__delegate;
return G__11220;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__11223 = null;
if (arguments.length > 2) {
var G__11224__i = 0, G__11224__a = new Array(arguments.length -  2);
while (G__11224__i < G__11224__a.length) {G__11224__a[G__11224__i] = arguments[G__11224__i + 2]; ++G__11224__i;}
G__11223 = new cljs.core.IndexedSeq(G__11224__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__11225__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__11225 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__11226__i = 0, G__11226__a = new Array(arguments.length -  4);
while (G__11226__i < G__11226__a.length) {G__11226__a[G__11226__i] = arguments[G__11226__i + 4]; ++G__11226__i;}
  more = new cljs.core.IndexedSeq(G__11226__a,0);
} 
return G__11225__delegate.call(this,a,b,c,d,more);};
G__11225.cljs$lang$maxFixedArity = 4;
G__11225.cljs$lang$applyTo = (function (arglist__11227){
var a = cljs.core.first(arglist__11227);
arglist__11227 = cljs.core.next(arglist__11227);
var b = cljs.core.first(arglist__11227);
arglist__11227 = cljs.core.next(arglist__11227);
var c = cljs.core.first(arglist__11227);
arglist__11227 = cljs.core.next(arglist__11227);
var d = cljs.core.first(arglist__11227);
var more = cljs.core.rest(arglist__11227);
return G__11225__delegate(a,b,c,d,more);
});
G__11225.cljs$core$IFn$_invoke$arity$variadic = G__11225__delegate;
return G__11225;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__11228 = null;
if (arguments.length > 4) {
var G__11229__i = 0, G__11229__a = new Array(arguments.length -  4);
while (G__11229__i < G__11229__a.length) {G__11229__a[G__11229__i] = arguments[G__11229__i + 4]; ++G__11229__i;}
G__11228 = new cljs.core.IndexedSeq(G__11229__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__11228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__11230__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11231 = ntcoll;
var G__11232 = cljs.core.first(vals);
var G__11233 = cljs.core.next(vals);
tcoll = G__11231;
val = G__11232;
vals = G__11233;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11230 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11234__i = 0, G__11234__a = new Array(arguments.length -  2);
while (G__11234__i < G__11234__a.length) {G__11234__a[G__11234__i] = arguments[G__11234__i + 2]; ++G__11234__i;}
  vals = new cljs.core.IndexedSeq(G__11234__a,0);
} 
return G__11230__delegate.call(this,tcoll,val,vals);};
G__11230.cljs$lang$maxFixedArity = 2;
G__11230.cljs$lang$applyTo = (function (arglist__11235){
var tcoll = cljs.core.first(arglist__11235);
arglist__11235 = cljs.core.next(arglist__11235);
var val = cljs.core.first(arglist__11235);
var vals = cljs.core.rest(arglist__11235);
return G__11230__delegate(tcoll,val,vals);
});
G__11230.cljs$core$IFn$_invoke$arity$variadic = G__11230__delegate;
return G__11230;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__11236 = null;
if (arguments.length > 2) {
var G__11237__i = 0, G__11237__a = new Array(arguments.length -  2);
while (G__11237__i < G__11237__a.length) {G__11237__a[G__11237__i] = arguments[G__11237__i + 2]; ++G__11237__i;}
G__11236 = new cljs.core.IndexedSeq(G__11237__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__11238__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__11239 = ntcoll;
var G__11240 = cljs.core.first(kvs);
var G__11241 = cljs.core.second(kvs);
var G__11242 = cljs.core.nnext(kvs);
tcoll = G__11239;
key = G__11240;
val = G__11241;
kvs = G__11242;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11238 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11243__i = 0, G__11243__a = new Array(arguments.length -  3);
while (G__11243__i < G__11243__a.length) {G__11243__a[G__11243__i] = arguments[G__11243__i + 3]; ++G__11243__i;}
  kvs = new cljs.core.IndexedSeq(G__11243__a,0);
} 
return G__11238__delegate.call(this,tcoll,key,val,kvs);};
G__11238.cljs$lang$maxFixedArity = 3;
G__11238.cljs$lang$applyTo = (function (arglist__11244){
var tcoll = cljs.core.first(arglist__11244);
arglist__11244 = cljs.core.next(arglist__11244);
var key = cljs.core.first(arglist__11244);
arglist__11244 = cljs.core.next(arglist__11244);
var val = cljs.core.first(arglist__11244);
var kvs = cljs.core.rest(arglist__11244);
return G__11238__delegate(tcoll,key,val,kvs);
});
G__11238.cljs$core$IFn$_invoke$arity$variadic = G__11238__delegate;
return G__11238;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__11245 = null;
if (arguments.length > 3) {
var G__11246__i = 0, G__11246__a = new Array(arguments.length -  3);
while (G__11246__i < G__11246__a.length) {G__11246__a[G__11246__i] = arguments[G__11246__i + 3]; ++G__11246__i;}
G__11245 = new cljs.core.IndexedSeq(G__11246__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__11245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__11247__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__11248 = ntcoll;
var G__11249 = cljs.core.first(ks);
var G__11250 = cljs.core.next(ks);
tcoll = G__11248;
key = G__11249;
ks = G__11250;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11247 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11251__i = 0, G__11251__a = new Array(arguments.length -  2);
while (G__11251__i < G__11251__a.length) {G__11251__a[G__11251__i] = arguments[G__11251__i + 2]; ++G__11251__i;}
  ks = new cljs.core.IndexedSeq(G__11251__a,0);
} 
return G__11247__delegate.call(this,tcoll,key,ks);};
G__11247.cljs$lang$maxFixedArity = 2;
G__11247.cljs$lang$applyTo = (function (arglist__11252){
var tcoll = cljs.core.first(arglist__11252);
arglist__11252 = cljs.core.next(arglist__11252);
var key = cljs.core.first(arglist__11252);
var ks = cljs.core.rest(arglist__11252);
return G__11247__delegate(tcoll,key,ks);
});
G__11247.cljs$core$IFn$_invoke$arity$variadic = G__11247__delegate;
return G__11247;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__11253 = null;
if (arguments.length > 2) {
var G__11254__i = 0, G__11254__a = new Array(arguments.length -  2);
while (G__11254__i < G__11254__a.length) {G__11254__a[G__11254__i] = arguments[G__11254__i + 2]; ++G__11254__i;}
G__11253 = new cljs.core.IndexedSeq(G__11254__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__11253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__11255__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11256 = ntcoll;
var G__11257 = cljs.core.first(vals);
var G__11258 = cljs.core.next(vals);
tcoll = G__11256;
val = G__11257;
vals = G__11258;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11255 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11259__i = 0, G__11259__a = new Array(arguments.length -  2);
while (G__11259__i < G__11259__a.length) {G__11259__a[G__11259__i] = arguments[G__11259__i + 2]; ++G__11259__i;}
  vals = new cljs.core.IndexedSeq(G__11259__a,0);
} 
return G__11255__delegate.call(this,tcoll,val,vals);};
G__11255.cljs$lang$maxFixedArity = 2;
G__11255.cljs$lang$applyTo = (function (arglist__11260){
var tcoll = cljs.core.first(arglist__11260);
arglist__11260 = cljs.core.next(arglist__11260);
var val = cljs.core.first(arglist__11260);
var vals = cljs.core.rest(arglist__11260);
return G__11255__delegate(tcoll,val,vals);
});
G__11255.cljs$core$IFn$_invoke$arity$variadic = G__11255__delegate;
return G__11255;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__11261 = null;
if (arguments.length > 2) {
var G__11262__i = 0, G__11262__a = new Array(arguments.length -  2);
while (G__11262__i < G__11262__a.length) {G__11262__a[G__11262__i] = arguments[G__11262__i + 2]; ++G__11262__i;}
G__11261 = new cljs.core.IndexedSeq(G__11262__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4484 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4484);
} else {
var G__11473 = a4484;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11473) : f.call(null,G__11473));
}
} else {
var b4485 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4484,b4485);
} else {
var G__11474 = a4484;
var G__11475 = b4485;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11474,G__11475) : f.call(null,G__11474,G__11475));
}
} else {
var c4486 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4484,b4485,c4486);
} else {
var G__11476 = a4484;
var G__11477 = b4485;
var G__11478 = c4486;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11476,G__11477,G__11478) : f.call(null,G__11476,G__11477,G__11478));
}
} else {
var d4487 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4484,b4485,c4486,d4487);
} else {
var G__11479 = a4484;
var G__11480 = b4485;
var G__11481 = c4486;
var G__11482 = d4487;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11479,G__11480,G__11481,G__11482) : f.call(null,G__11479,G__11480,G__11481,G__11482));
}
} else {
var e4488 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4484,b4485,c4486,d4487,e4488);
} else {
var G__11483 = a4484;
var G__11484 = b4485;
var G__11485 = c4486;
var G__11486 = d4487;
var G__11487 = e4488;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11483,G__11484,G__11485,G__11486,G__11487) : f.call(null,G__11483,G__11484,G__11485,G__11486,G__11487));
}
} else {
var f4489 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4484,b4485,c4486,d4487,e4488,f4489);
} else {
var G__11488 = a4484;
var G__11489 = b4485;
var G__11490 = c4486;
var G__11491 = d4487;
var G__11492 = e4488;
var G__11493 = f4489;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11488,G__11489,G__11490,G__11491,G__11492,G__11493) : f.call(null,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493));
}
} else {
var g4490 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4484,b4485,c4486,d4487,e4488,f4489,g4490);
} else {
var G__11494 = a4484;
var G__11495 = b4485;
var G__11496 = c4486;
var G__11497 = d4487;
var G__11498 = e4488;
var G__11499 = f4489;
var G__11500 = g4490;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500) : f.call(null,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500));
}
} else {
var h4491 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491);
} else {
var G__11501 = a4484;
var G__11502 = b4485;
var G__11503 = c4486;
var G__11504 = d4487;
var G__11505 = e4488;
var G__11506 = f4489;
var G__11507 = g4490;
var G__11508 = h4491;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508) : f.call(null,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508));
}
} else {
var i4492 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492);
} else {
var G__11509 = a4484;
var G__11510 = b4485;
var G__11511 = c4486;
var G__11512 = d4487;
var G__11513 = e4488;
var G__11514 = f4489;
var G__11515 = g4490;
var G__11516 = h4491;
var G__11517 = i4492;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517) : f.call(null,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517));
}
} else {
var j4493 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493);
} else {
var G__11518 = a4484;
var G__11519 = b4485;
var G__11520 = c4486;
var G__11521 = d4487;
var G__11522 = e4488;
var G__11523 = f4489;
var G__11524 = g4490;
var G__11525 = h4491;
var G__11526 = i4492;
var G__11527 = j4493;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527) : f.call(null,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527));
}
} else {
var k4494 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494);
} else {
var G__11528 = a4484;
var G__11529 = b4485;
var G__11530 = c4486;
var G__11531 = d4487;
var G__11532 = e4488;
var G__11533 = f4489;
var G__11534 = g4490;
var G__11535 = h4491;
var G__11536 = i4492;
var G__11537 = j4493;
var G__11538 = k4494;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538) : f.call(null,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538));
}
} else {
var l4495 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495);
} else {
var G__11539 = a4484;
var G__11540 = b4485;
var G__11541 = c4486;
var G__11542 = d4487;
var G__11543 = e4488;
var G__11544 = f4489;
var G__11545 = g4490;
var G__11546 = h4491;
var G__11547 = i4492;
var G__11548 = j4493;
var G__11549 = k4494;
var G__11550 = l4495;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550) : f.call(null,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550));
}
} else {
var m4496 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496);
} else {
var G__11551 = a4484;
var G__11552 = b4485;
var G__11553 = c4486;
var G__11554 = d4487;
var G__11555 = e4488;
var G__11556 = f4489;
var G__11557 = g4490;
var G__11558 = h4491;
var G__11559 = i4492;
var G__11560 = j4493;
var G__11561 = k4494;
var G__11562 = l4495;
var G__11563 = m4496;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563) : f.call(null,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563));
}
} else {
var n4497 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497);
} else {
var G__11564 = a4484;
var G__11565 = b4485;
var G__11566 = c4486;
var G__11567 = d4487;
var G__11568 = e4488;
var G__11569 = f4489;
var G__11570 = g4490;
var G__11571 = h4491;
var G__11572 = i4492;
var G__11573 = j4493;
var G__11574 = k4494;
var G__11575 = l4495;
var G__11576 = m4496;
var G__11577 = n4497;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577) : f.call(null,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577));
}
} else {
var o4498 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498);
} else {
var G__11578 = a4484;
var G__11579 = b4485;
var G__11580 = c4486;
var G__11581 = d4487;
var G__11582 = e4488;
var G__11583 = f4489;
var G__11584 = g4490;
var G__11585 = h4491;
var G__11586 = i4492;
var G__11587 = j4493;
var G__11588 = k4494;
var G__11589 = l4495;
var G__11590 = m4496;
var G__11591 = n4497;
var G__11592 = o4498;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592) : f.call(null,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592));
}
} else {
var p4499 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499);
} else {
var G__11593 = a4484;
var G__11594 = b4485;
var G__11595 = c4486;
var G__11596 = d4487;
var G__11597 = e4488;
var G__11598 = f4489;
var G__11599 = g4490;
var G__11600 = h4491;
var G__11601 = i4492;
var G__11602 = j4493;
var G__11603 = k4494;
var G__11604 = l4495;
var G__11605 = m4496;
var G__11606 = n4497;
var G__11607 = o4498;
var G__11608 = p4499;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608) : f.call(null,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608));
}
} else {
var q4500 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500);
} else {
var G__11609 = a4484;
var G__11610 = b4485;
var G__11611 = c4486;
var G__11612 = d4487;
var G__11613 = e4488;
var G__11614 = f4489;
var G__11615 = g4490;
var G__11616 = h4491;
var G__11617 = i4492;
var G__11618 = j4493;
var G__11619 = k4494;
var G__11620 = l4495;
var G__11621 = m4496;
var G__11622 = n4497;
var G__11623 = o4498;
var G__11624 = p4499;
var G__11625 = q4500;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625) : f.call(null,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625));
}
} else {
var r4501 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500,r4501);
} else {
var G__11626 = a4484;
var G__11627 = b4485;
var G__11628 = c4486;
var G__11629 = d4487;
var G__11630 = e4488;
var G__11631 = f4489;
var G__11632 = g4490;
var G__11633 = h4491;
var G__11634 = i4492;
var G__11635 = j4493;
var G__11636 = k4494;
var G__11637 = l4495;
var G__11638 = m4496;
var G__11639 = n4497;
var G__11640 = o4498;
var G__11641 = p4499;
var G__11642 = q4500;
var G__11643 = r4501;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643) : f.call(null,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643));
}
} else {
var s4502 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500,r4501,s4502);
} else {
var G__11644 = a4484;
var G__11645 = b4485;
var G__11646 = c4486;
var G__11647 = d4487;
var G__11648 = e4488;
var G__11649 = f4489;
var G__11650 = g4490;
var G__11651 = h4491;
var G__11652 = i4492;
var G__11653 = j4493;
var G__11654 = k4494;
var G__11655 = l4495;
var G__11656 = m4496;
var G__11657 = n4497;
var G__11658 = o4498;
var G__11659 = p4499;
var G__11660 = q4500;
var G__11661 = r4501;
var G__11662 = s4502;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662) : f.call(null,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662));
}
} else {
var t4503 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500,r4501,s4502,t4503);
} else {
var G__11663 = a4484;
var G__11664 = b4485;
var G__11665 = c4486;
var G__11666 = d4487;
var G__11667 = e4488;
var G__11668 = f4489;
var G__11669 = g4490;
var G__11670 = h4491;
var G__11671 = i4492;
var G__11672 = j4493;
var G__11673 = k4494;
var G__11674 = l4495;
var G__11675 = m4496;
var G__11676 = n4497;
var G__11677 = o4498;
var G__11678 = p4499;
var G__11679 = q4500;
var G__11680 = r4501;
var G__11681 = s4502;
var G__11682 = t4503;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682) : f.call(null,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__11683__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__11683 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__11684__i = 0, G__11684__a = new Array(arguments.length -  5);
while (G__11684__i < G__11684__a.length) {G__11684__a[G__11684__i] = arguments[G__11684__i + 5]; ++G__11684__i;}
  args = new cljs.core.IndexedSeq(G__11684__a,0);
} 
return G__11683__delegate.call(this,f,a,b,c,d,args);};
G__11683.cljs$lang$maxFixedArity = 5;
G__11683.cljs$lang$applyTo = (function (arglist__11685){
var f = cljs.core.first(arglist__11685);
arglist__11685 = cljs.core.next(arglist__11685);
var a = cljs.core.first(arglist__11685);
arglist__11685 = cljs.core.next(arglist__11685);
var b = cljs.core.first(arglist__11685);
arglist__11685 = cljs.core.next(arglist__11685);
var c = cljs.core.first(arglist__11685);
arglist__11685 = cljs.core.next(arglist__11685);
var d = cljs.core.first(arglist__11685);
var args = cljs.core.rest(arglist__11685);
return G__11683__delegate(f,a,b,c,d,args);
});
G__11683.cljs$core$IFn$_invoke$arity$variadic = G__11683__delegate;
return G__11683;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__11686 = null;
if (arguments.length > 5) {
var G__11687__i = 0, G__11687__a = new Array(arguments.length -  5);
while (G__11687__i < G__11687__a.length) {G__11687__a[G__11687__i] = arguments[G__11687__i + 5]; ++G__11687__i;}
G__11686 = new cljs.core.IndexedSeq(G__11687__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__11686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__11703 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11703) : f.call(null,G__11703));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__11704 = cljs.core.meta(obj);
var G__11705 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11704,G__11705) : f.call(null,G__11704,G__11705));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__11706 = cljs.core.meta(obj);
var G__11707 = a;
var G__11708 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11706,G__11707,G__11708) : f.call(null,G__11706,G__11707,G__11708));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__11709 = cljs.core.meta(obj);
var G__11710 = a;
var G__11711 = b;
var G__11712 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11709,G__11710,G__11711,G__11712) : f.call(null,G__11709,G__11710,G__11711,G__11712));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__11713 = cljs.core.meta(obj);
var G__11714 = a;
var G__11715 = b;
var G__11716 = c;
var G__11717 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11713,G__11714,G__11715,G__11716,G__11717) : f.call(null,G__11713,G__11714,G__11715,G__11716,G__11717));
})());
});
var vary_meta__7 = (function() { 
var G__11718__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__11718 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__11719__i = 0, G__11719__a = new Array(arguments.length -  6);
while (G__11719__i < G__11719__a.length) {G__11719__a[G__11719__i] = arguments[G__11719__i + 6]; ++G__11719__i;}
  args = new cljs.core.IndexedSeq(G__11719__a,0);
} 
return G__11718__delegate.call(this,obj,f,a,b,c,d,args);};
G__11718.cljs$lang$maxFixedArity = 6;
G__11718.cljs$lang$applyTo = (function (arglist__11720){
var obj = cljs.core.first(arglist__11720);
arglist__11720 = cljs.core.next(arglist__11720);
var f = cljs.core.first(arglist__11720);
arglist__11720 = cljs.core.next(arglist__11720);
var a = cljs.core.first(arglist__11720);
arglist__11720 = cljs.core.next(arglist__11720);
var b = cljs.core.first(arglist__11720);
arglist__11720 = cljs.core.next(arglist__11720);
var c = cljs.core.first(arglist__11720);
arglist__11720 = cljs.core.next(arglist__11720);
var d = cljs.core.first(arglist__11720);
var args = cljs.core.rest(arglist__11720);
return G__11718__delegate(obj,f,a,b,c,d,args);
});
G__11718.cljs$core$IFn$_invoke$arity$variadic = G__11718__delegate;
return G__11718;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__11721 = null;
if (arguments.length > 6) {
var G__11722__i = 0, G__11722__a = new Array(arguments.length -  6);
while (G__11722__i < G__11722__a.length) {G__11722__a[G__11722__i] = arguments[G__11722__i + 6]; ++G__11722__i;}
G__11721 = new cljs.core.IndexedSeq(G__11722__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__11721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__11723__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__11723 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11724__i = 0, G__11724__a = new Array(arguments.length -  2);
while (G__11724__i < G__11724__a.length) {G__11724__a[G__11724__i] = arguments[G__11724__i + 2]; ++G__11724__i;}
  more = new cljs.core.IndexedSeq(G__11724__a,0);
} 
return G__11723__delegate.call(this,x,y,more);};
G__11723.cljs$lang$maxFixedArity = 2;
G__11723.cljs$lang$applyTo = (function (arglist__11725){
var x = cljs.core.first(arglist__11725);
arglist__11725 = cljs.core.next(arglist__11725);
var y = cljs.core.first(arglist__11725);
var more = cljs.core.rest(arglist__11725);
return G__11723__delegate(x,y,more);
});
G__11723.cljs$core$IFn$_invoke$arity$variadic = G__11723__delegate;
return G__11723;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__11726 = null;
if (arguments.length > 2) {
var G__11727__i = 0, G__11727__a = new Array(arguments.length -  2);
while (G__11727__i < G__11727__a.length) {G__11727__a[G__11727__i] = arguments[G__11727__i + 2]; ++G__11727__i;}
G__11726 = new cljs.core.IndexedSeq(G__11727__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t11731 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t11731 = (function (nil_iter,meta11732){
this.nil_iter = nil_iter;
this.meta11732 = meta11732;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t11731.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t11731.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t11731.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t11731.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_11733){
var self__ = this;
var _11733__$1 = this;
return self__.meta11732;
});

cljs.core.t11731.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_11733,meta11732__$1){
var self__ = this;
var _11733__$1 = this;
return (new cljs.core.t11731(self__.nil_iter,meta11732__$1));
});

cljs.core.t11731.cljs$lang$type = true;

cljs.core.t11731.cljs$lang$ctorStr = "cljs.core/t11731";

cljs.core.t11731.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/t11731");
});

cljs.core.__GT_t11731 = (function __GT_t11731(nil_iter__$1,meta11732){
return (new cljs.core.t11731(nil_iter__$1,meta11732));
});

}

return (new cljs.core.t11731(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/john/.boot/tmp/home/john/reagent-test/42k/-ytkm87/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3541__auto__ = !((lt.stepper == null));
if(and__3541__auto__){
return self__.iter.hasNext();
} else {
return and__3541__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__11734 = lt;
var G__11735 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__11734,G__11735) : self__.xform.call(null,G__11734,G__11735));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__11736 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11736) : self__.xform.call(null,G__11736));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__11738 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11738) : xform.call(null,G__11738));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__11740 = cljs.core.next(iters__$1);
iters__$1 = G__11740;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4440__auto___11741 = self__.iters.length;
var i_11742 = (0);
while(true){
if((i_11742 < n__4440__auto___11741)){
(self__.nexts[i_11742] = (self__.iters[i_11742]).next());

var G__11743 = (i_11742 + (1));
i_11742 = G__11743;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3541__auto__ = !((lt.stepper == null));
if(and__3541__auto__){
return this$.hasNext();
} else {
return and__3541__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__11739 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11739) : self__.xform.call(null,G__11739));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__11748 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11748) : xform.call(null,G__11748));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__11749_11753 = cljs.core.seq(colls);
var chunk__11750_11754 = null;
var count__11751_11755 = (0);
var i__11752_11756 = (0);
while(true){
if((i__11752_11756 < count__11751_11755)){
var coll_11757 = chunk__11750_11754.cljs$core$IIndexed$_nth$arity$2(null,i__11752_11756);
iters.push(cljs.core.iter(coll_11757));

var G__11758 = seq__11749_11753;
var G__11759 = chunk__11750_11754;
var G__11760 = count__11751_11755;
var G__11761 = (i__11752_11756 + (1));
seq__11749_11753 = G__11758;
chunk__11750_11754 = G__11759;
count__11751_11755 = G__11760;
i__11752_11756 = G__11761;
continue;
} else {
var temp__4126__auto___11762 = cljs.core.seq(seq__11749_11753);
if(temp__4126__auto___11762){
var seq__11749_11763__$1 = temp__4126__auto___11762;
if(cljs.core.chunked_seq_QMARK_(seq__11749_11763__$1)){
var c__4340__auto___11764 = cljs.core.chunk_first(seq__11749_11763__$1);
var G__11765 = cljs.core.chunk_rest(seq__11749_11763__$1);
var G__11766 = c__4340__auto___11764;
var G__11767 = cljs.core.count(c__4340__auto___11764);
var G__11768 = (0);
seq__11749_11753 = G__11765;
chunk__11750_11754 = G__11766;
count__11751_11755 = G__11767;
i__11752_11756 = G__11768;
continue;
} else {
var coll_11769 = cljs.core.first(seq__11749_11763__$1);
iters.push(cljs.core.iter(coll_11769));

var G__11770 = cljs.core.next(seq__11749_11763__$1);
var G__11771 = null;
var G__11772 = (0);
var G__11773 = (0);
seq__11749_11753 = G__11770;
chunk__11750_11754 = G__11771;
count__11751_11755 = G__11772;
i__11752_11756 = G__11773;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3553__auto__ = cljs.core.seq(coll);
if(or__3553__auto__){
return or__3553__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__11774__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__11774 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__11775__i = 0, G__11775__a = new Array(arguments.length -  2);
while (G__11775__i < G__11775__a.length) {G__11775__a[G__11775__i] = arguments[G__11775__i + 2]; ++G__11775__i;}
  colls = new cljs.core.IndexedSeq(G__11775__a,0);
} 
return G__11774__delegate.call(this,xform,coll,colls);};
G__11774.cljs$lang$maxFixedArity = 2;
G__11774.cljs$lang$applyTo = (function (arglist__11776){
var xform = cljs.core.first(arglist__11776);
arglist__11776 = cljs.core.next(arglist__11776);
var coll = cljs.core.first(arglist__11776);
var colls = cljs.core.rest(arglist__11776);
return G__11774__delegate(xform,coll,colls);
});
G__11774.cljs$core$IFn$_invoke$arity$variadic = G__11774__delegate;
return G__11774;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__11777 = null;
if (arguments.length > 2) {
var G__11778__i = 0, G__11778__a = new Array(arguments.length -  2);
while (G__11778__i < G__11778__a.length) {G__11778__a[G__11778__i] = arguments[G__11778__i + 2]; ++G__11778__i;}
G__11777 = new cljs.core.IndexedSeq(G__11778__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__11777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__11780 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11780) : pred.call(null,G__11780));
})())){
var G__11781 = pred;
var G__11782 = cljs.core.next(coll);
pred = G__11781;
coll = G__11782;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3553__auto__ = (function (){var G__11786 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11786) : pred.call(null,G__11786));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__11787 = pred;
var G__11788 = cljs.core.next(coll);
pred = G__11787;
coll = G__11788;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__11795 = null;
var G__11795__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__11795__1 = (function (x){
return cljs.core.not((function (){var G__11792 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11792) : f.call(null,G__11792));
})());
});
var G__11795__2 = (function (x,y){
return cljs.core.not((function (){var G__11793 = x;
var G__11794 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11793,G__11794) : f.call(null,G__11793,G__11794));
})());
});
var G__11795__3 = (function() { 
var G__11796__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__11796 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__11797__i = 0, G__11797__a = new Array(arguments.length -  2);
while (G__11797__i < G__11797__a.length) {G__11797__a[G__11797__i] = arguments[G__11797__i + 2]; ++G__11797__i;}
  zs = new cljs.core.IndexedSeq(G__11797__a,0);
} 
return G__11796__delegate.call(this,x,y,zs);};
G__11796.cljs$lang$maxFixedArity = 2;
G__11796.cljs$lang$applyTo = (function (arglist__11798){
var x = cljs.core.first(arglist__11798);
arglist__11798 = cljs.core.next(arglist__11798);
var y = cljs.core.first(arglist__11798);
var zs = cljs.core.rest(arglist__11798);
return G__11796__delegate(x,y,zs);
});
G__11796.cljs$core$IFn$_invoke$arity$variadic = G__11796__delegate;
return G__11796;
})()
;
G__11795 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__11795__0.call(this);
case 1:
return G__11795__1.call(this,x);
case 2:
return G__11795__2.call(this,x,y);
default:
var G__11799 = null;
if (arguments.length > 2) {
var G__11800__i = 0, G__11800__a = new Array(arguments.length -  2);
while (G__11800__i < G__11800__a.length) {G__11800__a[G__11800__i] = arguments[G__11800__i + 2]; ++G__11800__i;}
G__11799 = new cljs.core.IndexedSeq(G__11800__a,0);
}
return G__11795__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11795.cljs$lang$maxFixedArity = 2;
G__11795.cljs$lang$applyTo = G__11795__3.cljs$lang$applyTo;
G__11795.cljs$core$IFn$_invoke$arity$0 = G__11795__0;
G__11795.cljs$core$IFn$_invoke$arity$1 = G__11795__1;
G__11795.cljs$core$IFn$_invoke$arity$2 = G__11795__2;
G__11795.cljs$core$IFn$_invoke$arity$variadic = G__11795__3.cljs$core$IFn$_invoke$arity$variadic;
return G__11795;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__11801__delegate = function (args){
return x;
};
var G__11801 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11802__i = 0, G__11802__a = new Array(arguments.length -  0);
while (G__11802__i < G__11802__a.length) {G__11802__a[G__11802__i] = arguments[G__11802__i + 0]; ++G__11802__i;}
  args = new cljs.core.IndexedSeq(G__11802__a,0);
} 
return G__11801__delegate.call(this,args);};
G__11801.cljs$lang$maxFixedArity = 0;
G__11801.cljs$lang$applyTo = (function (arglist__11803){
var args = cljs.core.seq(arglist__11803);
return G__11801__delegate(args);
});
G__11801.cljs$core$IFn$_invoke$arity$variadic = G__11801__delegate;
return G__11801;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__11858 = null;
var G__11858__0 = (function (){
var G__11831 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11831) : f.call(null,G__11831));
});
var G__11858__1 = (function (x){
var G__11832 = (function (){var G__11833 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11833) : g.call(null,G__11833));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11832) : f.call(null,G__11832));
});
var G__11858__2 = (function (x,y){
var G__11834 = (function (){var G__11835 = x;
var G__11836 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11835,G__11836) : g.call(null,G__11835,G__11836));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11834) : f.call(null,G__11834));
});
var G__11858__3 = (function (x,y,z){
var G__11837 = (function (){var G__11838 = x;
var G__11839 = y;
var G__11840 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11838,G__11839,G__11840) : g.call(null,G__11838,G__11839,G__11840));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11837) : f.call(null,G__11837));
});
var G__11858__4 = (function() { 
var G__11859__delegate = function (x,y,z,args){
var G__11841 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11841) : f.call(null,G__11841));
};
var G__11859 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11860__i = 0, G__11860__a = new Array(arguments.length -  3);
while (G__11860__i < G__11860__a.length) {G__11860__a[G__11860__i] = arguments[G__11860__i + 3]; ++G__11860__i;}
  args = new cljs.core.IndexedSeq(G__11860__a,0);
} 
return G__11859__delegate.call(this,x,y,z,args);};
G__11859.cljs$lang$maxFixedArity = 3;
G__11859.cljs$lang$applyTo = (function (arglist__11861){
var x = cljs.core.first(arglist__11861);
arglist__11861 = cljs.core.next(arglist__11861);
var y = cljs.core.first(arglist__11861);
arglist__11861 = cljs.core.next(arglist__11861);
var z = cljs.core.first(arglist__11861);
var args = cljs.core.rest(arglist__11861);
return G__11859__delegate(x,y,z,args);
});
G__11859.cljs$core$IFn$_invoke$arity$variadic = G__11859__delegate;
return G__11859;
})()
;
G__11858 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11858__0.call(this);
case 1:
return G__11858__1.call(this,x);
case 2:
return G__11858__2.call(this,x,y);
case 3:
return G__11858__3.call(this,x,y,z);
default:
var G__11862 = null;
if (arguments.length > 3) {
var G__11863__i = 0, G__11863__a = new Array(arguments.length -  3);
while (G__11863__i < G__11863__a.length) {G__11863__a[G__11863__i] = arguments[G__11863__i + 3]; ++G__11863__i;}
G__11862 = new cljs.core.IndexedSeq(G__11863__a,0);
}
return G__11858__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11858.cljs$lang$maxFixedArity = 3;
G__11858.cljs$lang$applyTo = G__11858__4.cljs$lang$applyTo;
G__11858.cljs$core$IFn$_invoke$arity$0 = G__11858__0;
G__11858.cljs$core$IFn$_invoke$arity$1 = G__11858__1;
G__11858.cljs$core$IFn$_invoke$arity$2 = G__11858__2;
G__11858.cljs$core$IFn$_invoke$arity$3 = G__11858__3;
G__11858.cljs$core$IFn$_invoke$arity$variadic = G__11858__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11858;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__11864 = null;
var G__11864__0 = (function (){
var G__11842 = (function (){var G__11843 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11843) : g.call(null,G__11843));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11842) : f.call(null,G__11842));
});
var G__11864__1 = (function (x){
var G__11844 = (function (){var G__11845 = (function (){var G__11846 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11846) : h.call(null,G__11846));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11845) : g.call(null,G__11845));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11844) : f.call(null,G__11844));
});
var G__11864__2 = (function (x,y){
var G__11847 = (function (){var G__11848 = (function (){var G__11849 = x;
var G__11850 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11849,G__11850) : h.call(null,G__11849,G__11850));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11848) : g.call(null,G__11848));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11847) : f.call(null,G__11847));
});
var G__11864__3 = (function (x,y,z){
var G__11851 = (function (){var G__11852 = (function (){var G__11853 = x;
var G__11854 = y;
var G__11855 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11853,G__11854,G__11855) : h.call(null,G__11853,G__11854,G__11855));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11852) : g.call(null,G__11852));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11851) : f.call(null,G__11851));
});
var G__11864__4 = (function() { 
var G__11865__delegate = function (x,y,z,args){
var G__11856 = (function (){var G__11857 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11857) : g.call(null,G__11857));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11856) : f.call(null,G__11856));
};
var G__11865 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11866__i = 0, G__11866__a = new Array(arguments.length -  3);
while (G__11866__i < G__11866__a.length) {G__11866__a[G__11866__i] = arguments[G__11866__i + 3]; ++G__11866__i;}
  args = new cljs.core.IndexedSeq(G__11866__a,0);
} 
return G__11865__delegate.call(this,x,y,z,args);};
G__11865.cljs$lang$maxFixedArity = 3;
G__11865.cljs$lang$applyTo = (function (arglist__11867){
var x = cljs.core.first(arglist__11867);
arglist__11867 = cljs.core.next(arglist__11867);
var y = cljs.core.first(arglist__11867);
arglist__11867 = cljs.core.next(arglist__11867);
var z = cljs.core.first(arglist__11867);
var args = cljs.core.rest(arglist__11867);
return G__11865__delegate(x,y,z,args);
});
G__11865.cljs$core$IFn$_invoke$arity$variadic = G__11865__delegate;
return G__11865;
})()
;
G__11864 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11864__0.call(this);
case 1:
return G__11864__1.call(this,x);
case 2:
return G__11864__2.call(this,x,y);
case 3:
return G__11864__3.call(this,x,y,z);
default:
var G__11868 = null;
if (arguments.length > 3) {
var G__11869__i = 0, G__11869__a = new Array(arguments.length -  3);
while (G__11869__i < G__11869__a.length) {G__11869__a[G__11869__i] = arguments[G__11869__i + 3]; ++G__11869__i;}
G__11868 = new cljs.core.IndexedSeq(G__11869__a,0);
}
return G__11864__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11864.cljs$lang$maxFixedArity = 3;
G__11864.cljs$lang$applyTo = G__11864__4.cljs$lang$applyTo;
G__11864.cljs$core$IFn$_invoke$arity$0 = G__11864__0;
G__11864.cljs$core$IFn$_invoke$arity$1 = G__11864__1;
G__11864.cljs$core$IFn$_invoke$arity$2 = G__11864__2;
G__11864.cljs$core$IFn$_invoke$arity$3 = G__11864__3;
G__11864.cljs$core$IFn$_invoke$arity$variadic = G__11864__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11864;
})()
});
var comp__4 = (function() { 
var G__11870__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__11871__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__11872 = cljs.core.first(fs__$2).call(null,ret);
var G__11873 = cljs.core.next(fs__$2);
ret = G__11872;
fs__$2 = G__11873;
continue;
} else {
return ret;
}
break;
}
};
var G__11871 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11874__i = 0, G__11874__a = new Array(arguments.length -  0);
while (G__11874__i < G__11874__a.length) {G__11874__a[G__11874__i] = arguments[G__11874__i + 0]; ++G__11874__i;}
  args = new cljs.core.IndexedSeq(G__11874__a,0);
} 
return G__11871__delegate.call(this,args);};
G__11871.cljs$lang$maxFixedArity = 0;
G__11871.cljs$lang$applyTo = (function (arglist__11875){
var args = cljs.core.seq(arglist__11875);
return G__11871__delegate(args);
});
G__11871.cljs$core$IFn$_invoke$arity$variadic = G__11871__delegate;
return G__11871;
})()
;
;})(fs__$1))
};
var G__11870 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11876__i = 0, G__11876__a = new Array(arguments.length -  3);
while (G__11876__i < G__11876__a.length) {G__11876__a[G__11876__i] = arguments[G__11876__i + 3]; ++G__11876__i;}
  fs = new cljs.core.IndexedSeq(G__11876__a,0);
} 
return G__11870__delegate.call(this,f1,f2,f3,fs);};
G__11870.cljs$lang$maxFixedArity = 3;
G__11870.cljs$lang$applyTo = (function (arglist__11877){
var f1 = cljs.core.first(arglist__11877);
arglist__11877 = cljs.core.next(arglist__11877);
var f2 = cljs.core.first(arglist__11877);
arglist__11877 = cljs.core.next(arglist__11877);
var f3 = cljs.core.first(arglist__11877);
var fs = cljs.core.rest(arglist__11877);
return G__11870__delegate(f1,f2,f3,fs);
});
G__11870.cljs$core$IFn$_invoke$arity$variadic = G__11870__delegate;
return G__11870;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__11878 = null;
if (arguments.length > 3) {
var G__11879__i = 0, G__11879__a = new Array(arguments.length -  3);
while (G__11879__i < G__11879__a.length) {G__11879__a[G__11879__i] = arguments[G__11879__i + 3]; ++G__11879__i;}
G__11878 = new cljs.core.IndexedSeq(G__11879__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__11878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__11964 = null;
var G__11964__0 = (function (){
var G__11922 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11922) : f.call(null,G__11922));
});
var G__11964__1 = (function (x){
var G__11923 = arg1;
var G__11924 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11923,G__11924) : f.call(null,G__11923,G__11924));
});
var G__11964__2 = (function (x,y){
var G__11925 = arg1;
var G__11926 = x;
var G__11927 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11925,G__11926,G__11927) : f.call(null,G__11925,G__11926,G__11927));
});
var G__11964__3 = (function (x,y,z){
var G__11928 = arg1;
var G__11929 = x;
var G__11930 = y;
var G__11931 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11928,G__11929,G__11930,G__11931) : f.call(null,G__11928,G__11929,G__11930,G__11931));
});
var G__11964__4 = (function() { 
var G__11965__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__11965 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11966__i = 0, G__11966__a = new Array(arguments.length -  3);
while (G__11966__i < G__11966__a.length) {G__11966__a[G__11966__i] = arguments[G__11966__i + 3]; ++G__11966__i;}
  args = new cljs.core.IndexedSeq(G__11966__a,0);
} 
return G__11965__delegate.call(this,x,y,z,args);};
G__11965.cljs$lang$maxFixedArity = 3;
G__11965.cljs$lang$applyTo = (function (arglist__11967){
var x = cljs.core.first(arglist__11967);
arglist__11967 = cljs.core.next(arglist__11967);
var y = cljs.core.first(arglist__11967);
arglist__11967 = cljs.core.next(arglist__11967);
var z = cljs.core.first(arglist__11967);
var args = cljs.core.rest(arglist__11967);
return G__11965__delegate(x,y,z,args);
});
G__11965.cljs$core$IFn$_invoke$arity$variadic = G__11965__delegate;
return G__11965;
})()
;
G__11964 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11964__0.call(this);
case 1:
return G__11964__1.call(this,x);
case 2:
return G__11964__2.call(this,x,y);
case 3:
return G__11964__3.call(this,x,y,z);
default:
var G__11968 = null;
if (arguments.length > 3) {
var G__11969__i = 0, G__11969__a = new Array(arguments.length -  3);
while (G__11969__i < G__11969__a.length) {G__11969__a[G__11969__i] = arguments[G__11969__i + 3]; ++G__11969__i;}
G__11968 = new cljs.core.IndexedSeq(G__11969__a,0);
}
return G__11964__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11964.cljs$lang$maxFixedArity = 3;
G__11964.cljs$lang$applyTo = G__11964__4.cljs$lang$applyTo;
G__11964.cljs$core$IFn$_invoke$arity$0 = G__11964__0;
G__11964.cljs$core$IFn$_invoke$arity$1 = G__11964__1;
G__11964.cljs$core$IFn$_invoke$arity$2 = G__11964__2;
G__11964.cljs$core$IFn$_invoke$arity$3 = G__11964__3;
G__11964.cljs$core$IFn$_invoke$arity$variadic = G__11964__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11964;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__11970 = null;
var G__11970__0 = (function (){
var G__11932 = arg1;
var G__11933 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11932,G__11933) : f.call(null,G__11932,G__11933));
});
var G__11970__1 = (function (x){
var G__11934 = arg1;
var G__11935 = arg2;
var G__11936 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11934,G__11935,G__11936) : f.call(null,G__11934,G__11935,G__11936));
});
var G__11970__2 = (function (x,y){
var G__11937 = arg1;
var G__11938 = arg2;
var G__11939 = x;
var G__11940 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11937,G__11938,G__11939,G__11940) : f.call(null,G__11937,G__11938,G__11939,G__11940));
});
var G__11970__3 = (function (x,y,z){
var G__11941 = arg1;
var G__11942 = arg2;
var G__11943 = x;
var G__11944 = y;
var G__11945 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11941,G__11942,G__11943,G__11944,G__11945) : f.call(null,G__11941,G__11942,G__11943,G__11944,G__11945));
});
var G__11970__4 = (function() { 
var G__11971__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__11971 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11972__i = 0, G__11972__a = new Array(arguments.length -  3);
while (G__11972__i < G__11972__a.length) {G__11972__a[G__11972__i] = arguments[G__11972__i + 3]; ++G__11972__i;}
  args = new cljs.core.IndexedSeq(G__11972__a,0);
} 
return G__11971__delegate.call(this,x,y,z,args);};
G__11971.cljs$lang$maxFixedArity = 3;
G__11971.cljs$lang$applyTo = (function (arglist__11973){
var x = cljs.core.first(arglist__11973);
arglist__11973 = cljs.core.next(arglist__11973);
var y = cljs.core.first(arglist__11973);
arglist__11973 = cljs.core.next(arglist__11973);
var z = cljs.core.first(arglist__11973);
var args = cljs.core.rest(arglist__11973);
return G__11971__delegate(x,y,z,args);
});
G__11971.cljs$core$IFn$_invoke$arity$variadic = G__11971__delegate;
return G__11971;
})()
;
G__11970 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11970__0.call(this);
case 1:
return G__11970__1.call(this,x);
case 2:
return G__11970__2.call(this,x,y);
case 3:
return G__11970__3.call(this,x,y,z);
default:
var G__11974 = null;
if (arguments.length > 3) {
var G__11975__i = 0, G__11975__a = new Array(arguments.length -  3);
while (G__11975__i < G__11975__a.length) {G__11975__a[G__11975__i] = arguments[G__11975__i + 3]; ++G__11975__i;}
G__11974 = new cljs.core.IndexedSeq(G__11975__a,0);
}
return G__11970__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11970.cljs$lang$maxFixedArity = 3;
G__11970.cljs$lang$applyTo = G__11970__4.cljs$lang$applyTo;
G__11970.cljs$core$IFn$_invoke$arity$0 = G__11970__0;
G__11970.cljs$core$IFn$_invoke$arity$1 = G__11970__1;
G__11970.cljs$core$IFn$_invoke$arity$2 = G__11970__2;
G__11970.cljs$core$IFn$_invoke$arity$3 = G__11970__3;
G__11970.cljs$core$IFn$_invoke$arity$variadic = G__11970__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11970;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__11976 = null;
var G__11976__0 = (function (){
var G__11946 = arg1;
var G__11947 = arg2;
var G__11948 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11946,G__11947,G__11948) : f.call(null,G__11946,G__11947,G__11948));
});
var G__11976__1 = (function (x){
var G__11949 = arg1;
var G__11950 = arg2;
var G__11951 = arg3;
var G__11952 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11949,G__11950,G__11951,G__11952) : f.call(null,G__11949,G__11950,G__11951,G__11952));
});
var G__11976__2 = (function (x,y){
var G__11953 = arg1;
var G__11954 = arg2;
var G__11955 = arg3;
var G__11956 = x;
var G__11957 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11953,G__11954,G__11955,G__11956,G__11957) : f.call(null,G__11953,G__11954,G__11955,G__11956,G__11957));
});
var G__11976__3 = (function (x,y,z){
var G__11958 = arg1;
var G__11959 = arg2;
var G__11960 = arg3;
var G__11961 = x;
var G__11962 = y;
var G__11963 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11958,G__11959,G__11960,G__11961,G__11962,G__11963) : f.call(null,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963));
});
var G__11976__4 = (function() { 
var G__11977__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__11977 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11978__i = 0, G__11978__a = new Array(arguments.length -  3);
while (G__11978__i < G__11978__a.length) {G__11978__a[G__11978__i] = arguments[G__11978__i + 3]; ++G__11978__i;}
  args = new cljs.core.IndexedSeq(G__11978__a,0);
} 
return G__11977__delegate.call(this,x,y,z,args);};
G__11977.cljs$lang$maxFixedArity = 3;
G__11977.cljs$lang$applyTo = (function (arglist__11979){
var x = cljs.core.first(arglist__11979);
arglist__11979 = cljs.core.next(arglist__11979);
var y = cljs.core.first(arglist__11979);
arglist__11979 = cljs.core.next(arglist__11979);
var z = cljs.core.first(arglist__11979);
var args = cljs.core.rest(arglist__11979);
return G__11977__delegate(x,y,z,args);
});
G__11977.cljs$core$IFn$_invoke$arity$variadic = G__11977__delegate;
return G__11977;
})()
;
G__11976 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11976__0.call(this);
case 1:
return G__11976__1.call(this,x);
case 2:
return G__11976__2.call(this,x,y);
case 3:
return G__11976__3.call(this,x,y,z);
default:
var G__11980 = null;
if (arguments.length > 3) {
var G__11981__i = 0, G__11981__a = new Array(arguments.length -  3);
while (G__11981__i < G__11981__a.length) {G__11981__a[G__11981__i] = arguments[G__11981__i + 3]; ++G__11981__i;}
G__11980 = new cljs.core.IndexedSeq(G__11981__a,0);
}
return G__11976__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11976.cljs$lang$maxFixedArity = 3;
G__11976.cljs$lang$applyTo = G__11976__4.cljs$lang$applyTo;
G__11976.cljs$core$IFn$_invoke$arity$0 = G__11976__0;
G__11976.cljs$core$IFn$_invoke$arity$1 = G__11976__1;
G__11976.cljs$core$IFn$_invoke$arity$2 = G__11976__2;
G__11976.cljs$core$IFn$_invoke$arity$3 = G__11976__3;
G__11976.cljs$core$IFn$_invoke$arity$variadic = G__11976__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11976;
})()
});
var partial__5 = (function() { 
var G__11982__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__11983__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__11983 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11984__i = 0, G__11984__a = new Array(arguments.length -  0);
while (G__11984__i < G__11984__a.length) {G__11984__a[G__11984__i] = arguments[G__11984__i + 0]; ++G__11984__i;}
  args = new cljs.core.IndexedSeq(G__11984__a,0);
} 
return G__11983__delegate.call(this,args);};
G__11983.cljs$lang$maxFixedArity = 0;
G__11983.cljs$lang$applyTo = (function (arglist__11985){
var args = cljs.core.seq(arglist__11985);
return G__11983__delegate(args);
});
G__11983.cljs$core$IFn$_invoke$arity$variadic = G__11983__delegate;
return G__11983;
})()
;
};
var G__11982 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__11986__i = 0, G__11986__a = new Array(arguments.length -  4);
while (G__11986__i < G__11986__a.length) {G__11986__a[G__11986__i] = arguments[G__11986__i + 4]; ++G__11986__i;}
  more = new cljs.core.IndexedSeq(G__11986__a,0);
} 
return G__11982__delegate.call(this,f,arg1,arg2,arg3,more);};
G__11982.cljs$lang$maxFixedArity = 4;
G__11982.cljs$lang$applyTo = (function (arglist__11987){
var f = cljs.core.first(arglist__11987);
arglist__11987 = cljs.core.next(arglist__11987);
var arg1 = cljs.core.first(arglist__11987);
arglist__11987 = cljs.core.next(arglist__11987);
var arg2 = cljs.core.first(arglist__11987);
arglist__11987 = cljs.core.next(arglist__11987);
var arg3 = cljs.core.first(arglist__11987);
var more = cljs.core.rest(arglist__11987);
return G__11982__delegate(f,arg1,arg2,arg3,more);
});
G__11982.cljs$core$IFn$_invoke$arity$variadic = G__11982__delegate;
return G__11982;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__11988 = null;
if (arguments.length > 4) {
var G__11989__i = 0, G__11989__a = new Array(arguments.length -  4);
while (G__11989__i < G__11989__a.length) {G__11989__a[G__11989__i] = arguments[G__11989__i + 4]; ++G__11989__i;}
G__11988 = new cljs.core.IndexedSeq(G__11989__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__11988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__12022 = null;
var G__12022__1 = (function (a){
var G__12006 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12006) : f.call(null,G__12006));
});
var G__12022__2 = (function (a,b){
var G__12007 = (((a == null))?x:a);
var G__12008 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12007,G__12008) : f.call(null,G__12007,G__12008));
});
var G__12022__3 = (function (a,b,c){
var G__12009 = (((a == null))?x:a);
var G__12010 = b;
var G__12011 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12009,G__12010,G__12011) : f.call(null,G__12009,G__12010,G__12011));
});
var G__12022__4 = (function() { 
var G__12023__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__12023 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12024__i = 0, G__12024__a = new Array(arguments.length -  3);
while (G__12024__i < G__12024__a.length) {G__12024__a[G__12024__i] = arguments[G__12024__i + 3]; ++G__12024__i;}
  ds = new cljs.core.IndexedSeq(G__12024__a,0);
} 
return G__12023__delegate.call(this,a,b,c,ds);};
G__12023.cljs$lang$maxFixedArity = 3;
G__12023.cljs$lang$applyTo = (function (arglist__12025){
var a = cljs.core.first(arglist__12025);
arglist__12025 = cljs.core.next(arglist__12025);
var b = cljs.core.first(arglist__12025);
arglist__12025 = cljs.core.next(arglist__12025);
var c = cljs.core.first(arglist__12025);
var ds = cljs.core.rest(arglist__12025);
return G__12023__delegate(a,b,c,ds);
});
G__12023.cljs$core$IFn$_invoke$arity$variadic = G__12023__delegate;
return G__12023;
})()
;
G__12022 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__12022__1.call(this,a);
case 2:
return G__12022__2.call(this,a,b);
case 3:
return G__12022__3.call(this,a,b,c);
default:
var G__12026 = null;
if (arguments.length > 3) {
var G__12027__i = 0, G__12027__a = new Array(arguments.length -  3);
while (G__12027__i < G__12027__a.length) {G__12027__a[G__12027__i] = arguments[G__12027__i + 3]; ++G__12027__i;}
G__12026 = new cljs.core.IndexedSeq(G__12027__a,0);
}
return G__12022__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12022.cljs$lang$maxFixedArity = 3;
G__12022.cljs$lang$applyTo = G__12022__4.cljs$lang$applyTo;
G__12022.cljs$core$IFn$_invoke$arity$1 = G__12022__1;
G__12022.cljs$core$IFn$_invoke$arity$2 = G__12022__2;
G__12022.cljs$core$IFn$_invoke$arity$3 = G__12022__3;
G__12022.cljs$core$IFn$_invoke$arity$variadic = G__12022__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12022;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__12028 = null;
var G__12028__2 = (function (a,b){
var G__12012 = (((a == null))?x:a);
var G__12013 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12012,G__12013) : f.call(null,G__12012,G__12013));
});
var G__12028__3 = (function (a,b,c){
var G__12014 = (((a == null))?x:a);
var G__12015 = (((b == null))?y:b);
var G__12016 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12014,G__12015,G__12016) : f.call(null,G__12014,G__12015,G__12016));
});
var G__12028__4 = (function() { 
var G__12029__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__12029 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12030__i = 0, G__12030__a = new Array(arguments.length -  3);
while (G__12030__i < G__12030__a.length) {G__12030__a[G__12030__i] = arguments[G__12030__i + 3]; ++G__12030__i;}
  ds = new cljs.core.IndexedSeq(G__12030__a,0);
} 
return G__12029__delegate.call(this,a,b,c,ds);};
G__12029.cljs$lang$maxFixedArity = 3;
G__12029.cljs$lang$applyTo = (function (arglist__12031){
var a = cljs.core.first(arglist__12031);
arglist__12031 = cljs.core.next(arglist__12031);
var b = cljs.core.first(arglist__12031);
arglist__12031 = cljs.core.next(arglist__12031);
var c = cljs.core.first(arglist__12031);
var ds = cljs.core.rest(arglist__12031);
return G__12029__delegate(a,b,c,ds);
});
G__12029.cljs$core$IFn$_invoke$arity$variadic = G__12029__delegate;
return G__12029;
})()
;
G__12028 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12028__2.call(this,a,b);
case 3:
return G__12028__3.call(this,a,b,c);
default:
var G__12032 = null;
if (arguments.length > 3) {
var G__12033__i = 0, G__12033__a = new Array(arguments.length -  3);
while (G__12033__i < G__12033__a.length) {G__12033__a[G__12033__i] = arguments[G__12033__i + 3]; ++G__12033__i;}
G__12032 = new cljs.core.IndexedSeq(G__12033__a,0);
}
return G__12028__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12032);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12028.cljs$lang$maxFixedArity = 3;
G__12028.cljs$lang$applyTo = G__12028__4.cljs$lang$applyTo;
G__12028.cljs$core$IFn$_invoke$arity$2 = G__12028__2;
G__12028.cljs$core$IFn$_invoke$arity$3 = G__12028__3;
G__12028.cljs$core$IFn$_invoke$arity$variadic = G__12028__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12028;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__12034 = null;
var G__12034__2 = (function (a,b){
var G__12017 = (((a == null))?x:a);
var G__12018 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12017,G__12018) : f.call(null,G__12017,G__12018));
});
var G__12034__3 = (function (a,b,c){
var G__12019 = (((a == null))?x:a);
var G__12020 = (((b == null))?y:b);
var G__12021 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12019,G__12020,G__12021) : f.call(null,G__12019,G__12020,G__12021));
});
var G__12034__4 = (function() { 
var G__12035__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__12035 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12036__i = 0, G__12036__a = new Array(arguments.length -  3);
while (G__12036__i < G__12036__a.length) {G__12036__a[G__12036__i] = arguments[G__12036__i + 3]; ++G__12036__i;}
  ds = new cljs.core.IndexedSeq(G__12036__a,0);
} 
return G__12035__delegate.call(this,a,b,c,ds);};
G__12035.cljs$lang$maxFixedArity = 3;
G__12035.cljs$lang$applyTo = (function (arglist__12037){
var a = cljs.core.first(arglist__12037);
arglist__12037 = cljs.core.next(arglist__12037);
var b = cljs.core.first(arglist__12037);
arglist__12037 = cljs.core.next(arglist__12037);
var c = cljs.core.first(arglist__12037);
var ds = cljs.core.rest(arglist__12037);
return G__12035__delegate(a,b,c,ds);
});
G__12035.cljs$core$IFn$_invoke$arity$variadic = G__12035__delegate;
return G__12035;
})()
;
G__12034 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12034__2.call(this,a,b);
case 3:
return G__12034__3.call(this,a,b,c);
default:
var G__12038 = null;
if (arguments.length > 3) {
var G__12039__i = 0, G__12039__a = new Array(arguments.length -  3);
while (G__12039__i < G__12039__a.length) {G__12039__a[G__12039__i] = arguments[G__12039__i + 3]; ++G__12039__i;}
G__12038 = new cljs.core.IndexedSeq(G__12039__a,0);
}
return G__12034__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12034.cljs$lang$maxFixedArity = 3;
G__12034.cljs$lang$applyTo = G__12034__4.cljs$lang$applyTo;
G__12034.cljs$core$IFn$_invoke$arity$2 = G__12034__2;
G__12034.cljs$core$IFn$_invoke$arity$3 = G__12034__3;
G__12034.cljs$core$IFn$_invoke$arity$variadic = G__12034__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12034;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__12070 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__12070) : cljs.core.volatile_BANG_.call(null,G__12070));
})();
return ((function (i){
return (function() {
var G__12100 = null;
var G__12100__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12100__1 = (function (result){
var G__12071 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12071) : rf.call(null,G__12071));
});
var G__12100__2 = (function (result,input){
var G__12072 = result;
var G__12073 = (function (){var G__12074 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__12075 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12074,G__12075) : f.call(null,G__12074,G__12075));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12072,G__12073) : rf.call(null,G__12072,G__12073));
});
G__12100 = function(result,input){
switch(arguments.length){
case 0:
return G__12100__0.call(this);
case 1:
return G__12100__1.call(this,result);
case 2:
return G__12100__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12100.cljs$core$IFn$_invoke$arity$0 = G__12100__0;
G__12100.cljs$core$IFn$_invoke$arity$1 = G__12100__1;
G__12100.cljs$core$IFn$_invoke$arity$2 = G__12100__2;
return G__12100;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___12101 = size;
var i_12102 = (0);
while(true){
if((i_12102 < n__4440__auto___12101)){
cljs.core.chunk_append(b,(function (){var G__12096 = (idx + i_12102);
var G__12097 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12102);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12096,G__12097) : f.call(null,G__12096,G__12097));
})());

var G__12103 = (i_12102 + (1));
i_12102 = G__12103;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__12098 = idx;
var G__12099 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12098,G__12099) : f.call(null,G__12098,G__12099));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__12122 = null;
var G__12122__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12122__1 = (function (result){
var G__12116 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12116) : rf.call(null,G__12116));
});
var G__12122__2 = (function (result,input){
var v = (function (){var G__12117 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12117) : f.call(null,G__12117));
})();
if((v == null)){
return result;
} else {
var G__12118 = result;
var G__12119 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12118,G__12119) : rf.call(null,G__12118,G__12119));
}
});
G__12122 = function(result,input){
switch(arguments.length){
case 0:
return G__12122__0.call(this);
case 1:
return G__12122__1.call(this,result);
case 2:
return G__12122__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12122.cljs$core$IFn$_invoke$arity$0 = G__12122__0;
G__12122.cljs$core$IFn$_invoke$arity$1 = G__12122__1;
G__12122.cljs$core$IFn$_invoke$arity$2 = G__12122__2;
return G__12122;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___12123 = size;
var i_12124 = (0);
while(true){
if((i_12124 < n__4440__auto___12123)){
var x_12125 = (function (){var G__12120 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12124);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12120) : f.call(null,G__12120));
})();
if((x_12125 == null)){
} else {
cljs.core.chunk_append(b,x_12125);
}

var G__12126 = (i_12124 + (1));
i_12124 = G__12126;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12121 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12121) : f.call(null,G__12121));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12127 = this$__$1;
return goog.getUid(G__12127);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__12128 = cljs.core.seq(self__.watches);
var chunk__12129 = null;
var count__12130 = (0);
var i__12131 = (0);
while(true){
if((i__12131 < count__12130)){
var vec__12132 = chunk__12129.cljs$core$IIndexed$_nth$arity$2(null,i__12131);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12132,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12132,(1),null);
var G__12133_12142 = key;
var G__12134_12143 = this$__$1;
var G__12135_12144 = oldval;
var G__12136_12145 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12133_12142,G__12134_12143,G__12135_12144,G__12136_12145) : f.call(null,G__12133_12142,G__12134_12143,G__12135_12144,G__12136_12145));

var G__12146 = seq__12128;
var G__12147 = chunk__12129;
var G__12148 = count__12130;
var G__12149 = (i__12131 + (1));
seq__12128 = G__12146;
chunk__12129 = G__12147;
count__12130 = G__12148;
i__12131 = G__12149;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12128);
if(temp__4126__auto__){
var seq__12128__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12128__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__12128__$1);
var G__12150 = cljs.core.chunk_rest(seq__12128__$1);
var G__12151 = c__4340__auto__;
var G__12152 = cljs.core.count(c__4340__auto__);
var G__12153 = (0);
seq__12128 = G__12150;
chunk__12129 = G__12151;
count__12130 = G__12152;
i__12131 = G__12153;
continue;
} else {
var vec__12137 = cljs.core.first(seq__12128__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12137,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12137,(1),null);
var G__12138_12154 = key;
var G__12139_12155 = this$__$1;
var G__12140_12156 = oldval;
var G__12141_12157 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12138_12154,G__12139_12155,G__12140_12156,G__12141_12157) : f.call(null,G__12138_12154,G__12139_12155,G__12140_12156,G__12141_12157));

var G__12158 = cljs.core.next(seq__12128__$1);
var G__12159 = null;
var G__12160 = (0);
var G__12161 = (0);
seq__12128 = G__12158;
chunk__12129 = G__12159;
count__12130 = G__12160;
i__12131 = G__12161;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__12165__delegate = function (x,p__12162){
var map__12164 = p__12162;
var map__12164__$1 = ((cljs.core.seq_QMARK_(map__12164))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12164):map__12164);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12164__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12164__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__12165 = function (x,var_args){
var p__12162 = null;
if (arguments.length > 1) {
var G__12166__i = 0, G__12166__a = new Array(arguments.length -  1);
while (G__12166__i < G__12166__a.length) {G__12166__a[G__12166__i] = arguments[G__12166__i + 1]; ++G__12166__i;}
  p__12162 = new cljs.core.IndexedSeq(G__12166__a,0);
} 
return G__12165__delegate.call(this,x,p__12162);};
G__12165.cljs$lang$maxFixedArity = 1;
G__12165.cljs$lang$applyTo = (function (arglist__12167){
var x = cljs.core.first(arglist__12167);
var p__12162 = cljs.core.rest(arglist__12167);
return G__12165__delegate(x,p__12162);
});
G__12165.cljs$core$IFn$_invoke$arity$variadic = G__12165__delegate;
return G__12165;
})()
;
atom = function(x,var_args){
var p__12162 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__12168 = null;
if (arguments.length > 1) {
var G__12169__i = 0, G__12169__a = new Array(arguments.length -  1);
while (G__12169__i < G__12169__a.length) {G__12169__a[G__12169__i] = arguments[G__12169__i + 1]; ++G__12169__i;}
G__12168 = new cljs.core.IndexedSeq(G__12169__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12168);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__12172 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12172) : validate.call(null,G__12172));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__12173 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12173) : cljs.core.pr_str.call(null,G__12173));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12180 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12180) : f.call(null,G__12180));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12181 = a.state;
var G__12182 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12181,G__12182) : f.call(null,G__12181,G__12182));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12183 = a.state;
var G__12184 = x;
var G__12185 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12183,G__12184,G__12185) : f.call(null,G__12183,G__12184,G__12185));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__12186__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__12186 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__12187__i = 0, G__12187__a = new Array(arguments.length -  4);
while (G__12187__i < G__12187__a.length) {G__12187__a[G__12187__i] = arguments[G__12187__i + 4]; ++G__12187__i;}
  more = new cljs.core.IndexedSeq(G__12187__a,0);
} 
return G__12186__delegate.call(this,a,f,x,y,more);};
G__12186.cljs$lang$maxFixedArity = 4;
G__12186.cljs$lang$applyTo = (function (arglist__12188){
var a = cljs.core.first(arglist__12188);
arglist__12188 = cljs.core.next(arglist__12188);
var f = cljs.core.first(arglist__12188);
arglist__12188 = cljs.core.next(arglist__12188);
var x = cljs.core.first(arglist__12188);
arglist__12188 = cljs.core.next(arglist__12188);
var y = cljs.core.first(arglist__12188);
var more = cljs.core.rest(arglist__12188);
return G__12186__delegate(a,f,x,y,more);
});
G__12186.cljs$core$IFn$_invoke$arity$variadic = G__12186__delegate;
return G__12186;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__12189 = null;
if (arguments.length > 4) {
var G__12190__i = 0, G__12190__a = new Array(arguments.length -  4);
while (G__12190__i < G__12190__a.length) {G__12190__a[G__12190__i] = arguments[G__12190__i + 4]; ++G__12190__i;}
G__12189 = new cljs.core.IndexedSeq(G__12190__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__12189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12257 = null;
var G__12257__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12257__1 = (function (result){
var G__12224 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12224) : rf.call(null,G__12224));
});
var G__12257__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__12225 = i;
var G__12226 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12225,G__12226) : f.call(null,G__12225,G__12226));
})();
if((v == null)){
return result;
} else {
var G__12227 = result;
var G__12228 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12227,G__12228) : rf.call(null,G__12227,G__12228));
}
});
G__12257 = function(result,input){
switch(arguments.length){
case 0:
return G__12257__0.call(this);
case 1:
return G__12257__1.call(this,result);
case 2:
return G__12257__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12257.cljs$core$IFn$_invoke$arity$0 = G__12257__0;
G__12257.cljs$core$IFn$_invoke$arity$1 = G__12257__1;
G__12257.cljs$core$IFn$_invoke$arity$2 = G__12257__2;
return G__12257;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___12258 = size;
var i_12259 = (0);
while(true){
if((i_12259 < n__4440__auto___12258)){
var x_12260 = (function (){var G__12253 = (idx + i_12259);
var G__12254 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12259);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12253,G__12254) : f.call(null,G__12253,G__12254));
})();
if((x_12260 == null)){
} else {
cljs.core.chunk_append(b,x_12260);
}

var G__12261 = (i_12259 + (1));
i_12259 = G__12261;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12255 = idx;
var G__12256 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12255,G__12256) : f.call(null,G__12255,G__12256));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__12475 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12475) : p.call(null,G__12475));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12477 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12477) : p.call(null,G__12477));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__12478 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12478) : p.call(null,G__12478));
} else {
return and__3541__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12480 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12480) : p.call(null,G__12480));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12482 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12482) : p.call(null,G__12482));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__12483 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12483) : p.call(null,G__12483));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__12652__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__12652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12653__i = 0, G__12653__a = new Array(arguments.length -  3);
while (G__12653__i < G__12653__a.length) {G__12653__a[G__12653__i] = arguments[G__12653__i + 3]; ++G__12653__i;}
  args = new cljs.core.IndexedSeq(G__12653__a,0);
} 
return G__12652__delegate.call(this,x,y,z,args);};
G__12652.cljs$lang$maxFixedArity = 3;
G__12652.cljs$lang$applyTo = (function (arglist__12654){
var x = cljs.core.first(arglist__12654);
arglist__12654 = cljs.core.next(arglist__12654);
var y = cljs.core.first(arglist__12654);
arglist__12654 = cljs.core.next(arglist__12654);
var z = cljs.core.first(arglist__12654);
var args = cljs.core.rest(arglist__12654);
return G__12652__delegate(x,y,z,args);
});
G__12652.cljs$core$IFn$_invoke$arity$variadic = G__12652__delegate;
return G__12652;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__12655 = null;
if (arguments.length > 3) {
var G__12656__i = 0, G__12656__a = new Array(arguments.length -  3);
while (G__12656__i < G__12656__a.length) {G__12656__a[G__12656__i] = arguments[G__12656__i + 3]; ++G__12656__i;}
G__12655 = new cljs.core.IndexedSeq(G__12656__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12515 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12515) : p1.call(null,G__12515));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__12516 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12516) : p2.call(null,G__12516));
} else {
return and__3541__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12518 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12518) : p1.call(null,G__12518));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12520 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12520) : p1.call(null,G__12520));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__12522 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12522) : p2.call(null,G__12522));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var G__12523 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12523) : p2.call(null,G__12523));
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12525 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12525) : p1.call(null,G__12525));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12527 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12527) : p1.call(null,G__12527));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__12529 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12529) : p1.call(null,G__12529));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var and__3541__auto____$3 = (function (){var G__12531 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12531) : p2.call(null,G__12531));
})();
if(cljs.core.truth_(and__3541__auto____$3)){
var and__3541__auto____$4 = (function (){var G__12533 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12533) : p2.call(null,G__12533));
})();
if(cljs.core.truth_(and__3541__auto____$4)){
var G__12534 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12534) : p2.call(null,G__12534));
} else {
return and__3541__auto____$4;
}
} else {
return and__3541__auto____$3;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__12657__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12262_SHARP_){
var and__3541__auto__ = (function (){var G__12539 = p1__12262_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12539) : p1.call(null,G__12539));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__12540 = p1__12262_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12540) : p2.call(null,G__12540));
} else {
return and__3541__auto__;
}
}),args)));
};
var G__12657 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12658__i = 0, G__12658__a = new Array(arguments.length -  3);
while (G__12658__i < G__12658__a.length) {G__12658__a[G__12658__i] = arguments[G__12658__i + 3]; ++G__12658__i;}
  args = new cljs.core.IndexedSeq(G__12658__a,0);
} 
return G__12657__delegate.call(this,x,y,z,args);};
G__12657.cljs$lang$maxFixedArity = 3;
G__12657.cljs$lang$applyTo = (function (arglist__12659){
var x = cljs.core.first(arglist__12659);
arglist__12659 = cljs.core.next(arglist__12659);
var y = cljs.core.first(arglist__12659);
arglist__12659 = cljs.core.next(arglist__12659);
var z = cljs.core.first(arglist__12659);
var args = cljs.core.rest(arglist__12659);
return G__12657__delegate(x,y,z,args);
});
G__12657.cljs$core$IFn$_invoke$arity$variadic = G__12657__delegate;
return G__12657;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__12660 = null;
if (arguments.length > 3) {
var G__12661__i = 0, G__12661__a = new Array(arguments.length -  3);
while (G__12661__i < G__12661__a.length) {G__12661__a[G__12661__i] = arguments[G__12661__i + 3]; ++G__12661__i;}
G__12660 = new cljs.core.IndexedSeq(G__12661__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12586) : p1.call(null,G__12586));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12588 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12588) : p2.call(null,G__12588));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__12589 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12589) : p3.call(null,G__12589));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12591 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12591) : p1.call(null,G__12591));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12593 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12593) : p2.call(null,G__12593));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__12595 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12595) : p3.call(null,G__12595));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var and__3541__auto____$3 = (function (){var G__12597 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12597) : p1.call(null,G__12597));
})();
if(cljs.core.truth_(and__3541__auto____$3)){
var and__3541__auto____$4 = (function (){var G__12599 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12599) : p2.call(null,G__12599));
})();
if(cljs.core.truth_(and__3541__auto____$4)){
var G__12600 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12600) : p3.call(null,G__12600));
} else {
return and__3541__auto____$4;
}
} else {
return and__3541__auto____$3;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__12602 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12602) : p1.call(null,G__12602));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12604 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12604) : p2.call(null,G__12604));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__12606 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12606) : p3.call(null,G__12606));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var and__3541__auto____$3 = (function (){var G__12608 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12608) : p1.call(null,G__12608));
})();
if(cljs.core.truth_(and__3541__auto____$3)){
var and__3541__auto____$4 = (function (){var G__12610 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12610) : p2.call(null,G__12610));
})();
if(cljs.core.truth_(and__3541__auto____$4)){
var and__3541__auto____$5 = (function (){var G__12612 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12612) : p3.call(null,G__12612));
})();
if(cljs.core.truth_(and__3541__auto____$5)){
var and__3541__auto____$6 = (function (){var G__12614 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12614) : p1.call(null,G__12614));
})();
if(cljs.core.truth_(and__3541__auto____$6)){
var and__3541__auto____$7 = (function (){var G__12616 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12616) : p2.call(null,G__12616));
})();
if(cljs.core.truth_(and__3541__auto____$7)){
var G__12617 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12617) : p3.call(null,G__12617));
} else {
return and__3541__auto____$7;
}
} else {
return and__3541__auto____$6;
}
} else {
return and__3541__auto____$5;
}
} else {
return and__3541__auto____$4;
}
} else {
return and__3541__auto____$3;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__12662__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12263_SHARP_){
var and__3541__auto__ = (function (){var G__12624 = p1__12263_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12624) : p1.call(null,G__12624));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12626 = p1__12263_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12626) : p2.call(null,G__12626));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__12627 = p1__12263_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12627) : p3.call(null,G__12627));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
}),args)));
};
var G__12662 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12663__i = 0, G__12663__a = new Array(arguments.length -  3);
while (G__12663__i < G__12663__a.length) {G__12663__a[G__12663__i] = arguments[G__12663__i + 3]; ++G__12663__i;}
  args = new cljs.core.IndexedSeq(G__12663__a,0);
} 
return G__12662__delegate.call(this,x,y,z,args);};
G__12662.cljs$lang$maxFixedArity = 3;
G__12662.cljs$lang$applyTo = (function (arglist__12664){
var x = cljs.core.first(arglist__12664);
arglist__12664 = cljs.core.next(arglist__12664);
var y = cljs.core.first(arglist__12664);
arglist__12664 = cljs.core.next(arglist__12664);
var z = cljs.core.first(arglist__12664);
var args = cljs.core.rest(arglist__12664);
return G__12662__delegate(x,y,z,args);
});
G__12662.cljs$core$IFn$_invoke$arity$variadic = G__12662__delegate;
return G__12662;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__12665 = null;
if (arguments.length > 3) {
var G__12666__i = 0, G__12666__a = new Array(arguments.length -  3);
while (G__12666__i < G__12666__a.length) {G__12666__a[G__12666__i] = arguments[G__12666__i + 3]; ++G__12666__i;}
G__12665 = new cljs.core.IndexedSeq(G__12666__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__12667__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12264_SHARP_){
var G__12643 = x;
return (p1__12264_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12264_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12643) : p1__12264_SHARP_.call(null,G__12643));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12265_SHARP_){
var and__3541__auto__ = (function (){var G__12645 = x;
return (p1__12265_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12265_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12645) : p1__12265_SHARP_.call(null,G__12645));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__12646 = y;
return (p1__12265_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12265_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12646) : p1__12265_SHARP_.call(null,G__12646));
} else {
return and__3541__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12266_SHARP_){
var and__3541__auto__ = (function (){var G__12648 = x;
return (p1__12266_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12266_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12648) : p1__12266_SHARP_.call(null,G__12648));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__12650 = y;
return (p1__12266_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12266_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12650) : p1__12266_SHARP_.call(null,G__12650));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__12651 = z;
return (p1__12266_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12266_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12651) : p1__12266_SHARP_.call(null,G__12651));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__12668__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12267_SHARP_){
return cljs.core.every_QMARK_(p1__12267_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__12668 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12669__i = 0, G__12669__a = new Array(arguments.length -  3);
while (G__12669__i < G__12669__a.length) {G__12669__a[G__12669__i] = arguments[G__12669__i + 3]; ++G__12669__i;}
  args = new cljs.core.IndexedSeq(G__12669__a,0);
} 
return G__12668__delegate.call(this,x,y,z,args);};
G__12668.cljs$lang$maxFixedArity = 3;
G__12668.cljs$lang$applyTo = (function (arglist__12670){
var x = cljs.core.first(arglist__12670);
arglist__12670 = cljs.core.next(arglist__12670);
var y = cljs.core.first(arglist__12670);
arglist__12670 = cljs.core.next(arglist__12670);
var z = cljs.core.first(arglist__12670);
var args = cljs.core.rest(arglist__12670);
return G__12668__delegate(x,y,z,args);
});
G__12668.cljs$core$IFn$_invoke$arity$variadic = G__12668__delegate;
return G__12668;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__12671 = null;
if (arguments.length > 3) {
var G__12672__i = 0, G__12672__a = new Array(arguments.length -  3);
while (G__12672__i < G__12672__a.length) {G__12672__a[G__12672__i] = arguments[G__12672__i + 3]; ++G__12672__i;}
G__12671 = new cljs.core.IndexedSeq(G__12672__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__12667 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__12673__i = 0, G__12673__a = new Array(arguments.length -  3);
while (G__12673__i < G__12673__a.length) {G__12673__a[G__12673__i] = arguments[G__12673__i + 3]; ++G__12673__i;}
  ps = new cljs.core.IndexedSeq(G__12673__a,0);
} 
return G__12667__delegate.call(this,p1,p2,p3,ps);};
G__12667.cljs$lang$maxFixedArity = 3;
G__12667.cljs$lang$applyTo = (function (arglist__12674){
var p1 = cljs.core.first(arglist__12674);
arglist__12674 = cljs.core.next(arglist__12674);
var p2 = cljs.core.first(arglist__12674);
arglist__12674 = cljs.core.next(arglist__12674);
var p3 = cljs.core.first(arglist__12674);
var ps = cljs.core.rest(arglist__12674);
return G__12667__delegate(p1,p2,p3,ps);
});
G__12667.cljs$core$IFn$_invoke$arity$variadic = G__12667__delegate;
return G__12667;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__12675 = null;
if (arguments.length > 3) {
var G__12676__i = 0, G__12676__a = new Array(arguments.length -  3);
while (G__12676__i < G__12676__a.length) {G__12676__a[G__12676__i] = arguments[G__12676__i + 3]; ++G__12676__i;}
G__12675 = new cljs.core.IndexedSeq(G__12676__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__12675);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__12882 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12882) : p.call(null,G__12882));
});
var sp1__2 = (function (x,y){
var or__3553__auto__ = (function (){var G__12884 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12884) : p.call(null,G__12884));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__12885 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12885) : p.call(null,G__12885));
}
});
var sp1__3 = (function (x,y,z){
var or__3553__auto__ = (function (){var G__12887 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12887) : p.call(null,G__12887));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__12889 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12889) : p.call(null,G__12889));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__12890 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12890) : p.call(null,G__12890));
}
}
});
var sp1__4 = (function() { 
var G__13051__delegate = function (x,y,z,args){
var or__3553__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__13051 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13052__i = 0, G__13052__a = new Array(arguments.length -  3);
while (G__13052__i < G__13052__a.length) {G__13052__a[G__13052__i] = arguments[G__13052__i + 3]; ++G__13052__i;}
  args = new cljs.core.IndexedSeq(G__13052__a,0);
} 
return G__13051__delegate.call(this,x,y,z,args);};
G__13051.cljs$lang$maxFixedArity = 3;
G__13051.cljs$lang$applyTo = (function (arglist__13053){
var x = cljs.core.first(arglist__13053);
arglist__13053 = cljs.core.next(arglist__13053);
var y = cljs.core.first(arglist__13053);
arglist__13053 = cljs.core.next(arglist__13053);
var z = cljs.core.first(arglist__13053);
var args = cljs.core.rest(arglist__13053);
return G__13051__delegate(x,y,z,args);
});
G__13051.cljs$core$IFn$_invoke$arity$variadic = G__13051__delegate;
return G__13051;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__13054 = null;
if (arguments.length > 3) {
var G__13055__i = 0, G__13055__a = new Array(arguments.length -  3);
while (G__13055__i < G__13055__a.length) {G__13055__a[G__13055__i] = arguments[G__13055__i + 3]; ++G__13055__i;}
G__13054 = new cljs.core.IndexedSeq(G__13055__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3553__auto__ = (function (){var G__12922 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12922) : p1.call(null,G__12922));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__12923 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12923) : p2.call(null,G__12923));
}
});
var sp2__2 = (function (x,y){
var or__3553__auto__ = (function (){var G__12925 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12925) : p1.call(null,G__12925));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__12927 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12927) : p1.call(null,G__12927));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__12929 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12929) : p2.call(null,G__12929));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var G__12930 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12930) : p2.call(null,G__12930));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3553__auto__ = (function (){var G__12932 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12932) : p1.call(null,G__12932));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__12934 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12934) : p1.call(null,G__12934));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__12936 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12936) : p1.call(null,G__12936));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var or__3553__auto____$3 = (function (){var G__12938 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12938) : p2.call(null,G__12938));
})();
if(cljs.core.truth_(or__3553__auto____$3)){
return or__3553__auto____$3;
} else {
var or__3553__auto____$4 = (function (){var G__12940 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12940) : p2.call(null,G__12940));
})();
if(cljs.core.truth_(or__3553__auto____$4)){
return or__3553__auto____$4;
} else {
var G__12941 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12941) : p2.call(null,G__12941));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__13056__delegate = function (x,y,z,args){
var or__3553__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(((function (or__3553__auto__){
return (function (p1__12677_SHARP_){
var or__3553__auto____$1 = (function (){var G__12943 = p1__12677_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12943) : p1.call(null,G__12943));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__12944 = p1__12677_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12944) : p2.call(null,G__12944));
}
});})(or__3553__auto__))
,args);
}
};
var G__13056 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13057__i = 0, G__13057__a = new Array(arguments.length -  3);
while (G__13057__i < G__13057__a.length) {G__13057__a[G__13057__i] = arguments[G__13057__i + 3]; ++G__13057__i;}
  args = new cljs.core.IndexedSeq(G__13057__a,0);
} 
return G__13056__delegate.call(this,x,y,z,args);};
G__13056.cljs$lang$maxFixedArity = 3;
G__13056.cljs$lang$applyTo = (function (arglist__13058){
var x = cljs.core.first(arglist__13058);
arglist__13058 = cljs.core.next(arglist__13058);
var y = cljs.core.first(arglist__13058);
arglist__13058 = cljs.core.next(arglist__13058);
var z = cljs.core.first(arglist__13058);
var args = cljs.core.rest(arglist__13058);
return G__13056__delegate(x,y,z,args);
});
G__13056.cljs$core$IFn$_invoke$arity$variadic = G__13056__delegate;
return G__13056;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__13059 = null;
if (arguments.length > 3) {
var G__13060__i = 0, G__13060__a = new Array(arguments.length -  3);
while (G__13060__i < G__13060__a.length) {G__13060__a[G__13060__i] = arguments[G__13060__i + 3]; ++G__13060__i;}
G__13059 = new cljs.core.IndexedSeq(G__13060__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13059);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3553__auto__ = (function (){var G__12990 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12990) : p1.call(null,G__12990));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__12992 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12992) : p2.call(null,G__12992));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__12993 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12993) : p3.call(null,G__12993));
}
}
});
var sp3__2 = (function (x,y){
var or__3553__auto__ = (function (){var G__12995 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12995) : p1.call(null,G__12995));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__12997 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12997) : p2.call(null,G__12997));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__12999 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12999) : p3.call(null,G__12999));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var or__3553__auto____$3 = (function (){var G__13001 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13001) : p1.call(null,G__13001));
})();
if(cljs.core.truth_(or__3553__auto____$3)){
return or__3553__auto____$3;
} else {
var or__3553__auto____$4 = (function (){var G__13003 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13003) : p2.call(null,G__13003));
})();
if(cljs.core.truth_(or__3553__auto____$4)){
return or__3553__auto____$4;
} else {
var G__13004 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13004) : p3.call(null,G__13004));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3553__auto__ = (function (){var G__13006 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13006) : p1.call(null,G__13006));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__13008 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13008) : p2.call(null,G__13008));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__13010 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13010) : p3.call(null,G__13010));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var or__3553__auto____$3 = (function (){var G__13012 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13012) : p1.call(null,G__13012));
})();
if(cljs.core.truth_(or__3553__auto____$3)){
return or__3553__auto____$3;
} else {
var or__3553__auto____$4 = (function (){var G__13014 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13014) : p2.call(null,G__13014));
})();
if(cljs.core.truth_(or__3553__auto____$4)){
return or__3553__auto____$4;
} else {
var or__3553__auto____$5 = (function (){var G__13016 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13016) : p3.call(null,G__13016));
})();
if(cljs.core.truth_(or__3553__auto____$5)){
return or__3553__auto____$5;
} else {
var or__3553__auto____$6 = (function (){var G__13018 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13018) : p1.call(null,G__13018));
})();
if(cljs.core.truth_(or__3553__auto____$6)){
return or__3553__auto____$6;
} else {
var or__3553__auto____$7 = (function (){var G__13020 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13020) : p2.call(null,G__13020));
})();
if(cljs.core.truth_(or__3553__auto____$7)){
return or__3553__auto____$7;
} else {
var G__13021 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13021) : p3.call(null,G__13021));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__13061__delegate = function (x,y,z,args){
var or__3553__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(((function (or__3553__auto__){
return (function (p1__12678_SHARP_){
var or__3553__auto____$1 = (function (){var G__13023 = p1__12678_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13023) : p1.call(null,G__13023));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__13025 = p1__12678_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13025) : p2.call(null,G__13025));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var G__13026 = p1__12678_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13026) : p3.call(null,G__13026));
}
}
});})(or__3553__auto__))
,args);
}
};
var G__13061 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13062__i = 0, G__13062__a = new Array(arguments.length -  3);
while (G__13062__i < G__13062__a.length) {G__13062__a[G__13062__i] = arguments[G__13062__i + 3]; ++G__13062__i;}
  args = new cljs.core.IndexedSeq(G__13062__a,0);
} 
return G__13061__delegate.call(this,x,y,z,args);};
G__13061.cljs$lang$maxFixedArity = 3;
G__13061.cljs$lang$applyTo = (function (arglist__13063){
var x = cljs.core.first(arglist__13063);
arglist__13063 = cljs.core.next(arglist__13063);
var y = cljs.core.first(arglist__13063);
arglist__13063 = cljs.core.next(arglist__13063);
var z = cljs.core.first(arglist__13063);
var args = cljs.core.rest(arglist__13063);
return G__13061__delegate(x,y,z,args);
});
G__13061.cljs$core$IFn$_invoke$arity$variadic = G__13061__delegate;
return G__13061;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__13064 = null;
if (arguments.length > 3) {
var G__13065__i = 0, G__13065__a = new Array(arguments.length -  3);
while (G__13065__i < G__13065__a.length) {G__13065__a[G__13065__i] = arguments[G__13065__i + 3]; ++G__13065__i;}
G__13064 = new cljs.core.IndexedSeq(G__13065__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13064);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__13066__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__12679_SHARP_){
var G__13042 = x;
return (p1__12679_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12679_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13042) : p1__12679_SHARP_.call(null,G__13042));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__12680_SHARP_){
var or__3553__auto__ = (function (){var G__13044 = x;
return (p1__12680_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12680_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13044) : p1__12680_SHARP_.call(null,G__13044));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__13045 = y;
return (p1__12680_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12680_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13045) : p1__12680_SHARP_.call(null,G__13045));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__12681_SHARP_){
var or__3553__auto__ = (function (){var G__13047 = x;
return (p1__12681_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12681_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13047) : p1__12681_SHARP_.call(null,G__13047));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__13049 = y;
return (p1__12681_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12681_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13049) : p1__12681_SHARP_.call(null,G__13049));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__13050 = z;
return (p1__12681_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12681_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13050) : p1__12681_SHARP_.call(null,G__13050));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__13067__delegate = function (x,y,z,args){
var or__3553__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(((function (or__3553__auto__,ps__$1){
return (function (p1__12682_SHARP_){
return cljs.core.some(p1__12682_SHARP_,args);
});})(or__3553__auto__,ps__$1))
,ps__$1);
}
};
var G__13067 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13068__i = 0, G__13068__a = new Array(arguments.length -  3);
while (G__13068__i < G__13068__a.length) {G__13068__a[G__13068__i] = arguments[G__13068__i + 3]; ++G__13068__i;}
  args = new cljs.core.IndexedSeq(G__13068__a,0);
} 
return G__13067__delegate.call(this,x,y,z,args);};
G__13067.cljs$lang$maxFixedArity = 3;
G__13067.cljs$lang$applyTo = (function (arglist__13069){
var x = cljs.core.first(arglist__13069);
arglist__13069 = cljs.core.next(arglist__13069);
var y = cljs.core.first(arglist__13069);
arglist__13069 = cljs.core.next(arglist__13069);
var z = cljs.core.first(arglist__13069);
var args = cljs.core.rest(arglist__13069);
return G__13067__delegate(x,y,z,args);
});
G__13067.cljs$core$IFn$_invoke$arity$variadic = G__13067__delegate;
return G__13067;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__13070 = null;
if (arguments.length > 3) {
var G__13071__i = 0, G__13071__a = new Array(arguments.length -  3);
while (G__13071__i < G__13071__a.length) {G__13071__a[G__13071__i] = arguments[G__13071__i + 3]; ++G__13071__i;}
G__13070 = new cljs.core.IndexedSeq(G__13071__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__13066 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13072__i = 0, G__13072__a = new Array(arguments.length -  3);
while (G__13072__i < G__13072__a.length) {G__13072__a[G__13072__i] = arguments[G__13072__i + 3]; ++G__13072__i;}
  ps = new cljs.core.IndexedSeq(G__13072__a,0);
} 
return G__13066__delegate.call(this,p1,p2,p3,ps);};
G__13066.cljs$lang$maxFixedArity = 3;
G__13066.cljs$lang$applyTo = (function (arglist__13073){
var p1 = cljs.core.first(arglist__13073);
arglist__13073 = cljs.core.next(arglist__13073);
var p2 = cljs.core.first(arglist__13073);
arglist__13073 = cljs.core.next(arglist__13073);
var p3 = cljs.core.first(arglist__13073);
var ps = cljs.core.rest(arglist__13073);
return G__13066__delegate(p1,p2,p3,ps);
});
G__13066.cljs$core$IFn$_invoke$arity$variadic = G__13066__delegate;
return G__13066;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__13074 = null;
if (arguments.length > 3) {
var G__13075__i = 0, G__13075__a = new Array(arguments.length -  3);
while (G__13075__i < G__13075__a.length) {G__13075__a[G__13075__i] = arguments[G__13075__i + 3]; ++G__13075__i;}
G__13074 = new cljs.core.IndexedSeq(G__13075__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13074);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__13130 = null;
var G__13130__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13130__1 = (function (result){
var G__13116 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13116) : rf.call(null,G__13116));
});
var G__13130__2 = (function (result,input){
var G__13117 = result;
var G__13118 = (function (){var G__13119 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13119) : f.call(null,G__13119));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13117,G__13118) : rf.call(null,G__13117,G__13118));
});
var G__13130__3 = (function() { 
var G__13131__delegate = function (result,input,inputs){
var G__13120 = result;
var G__13121 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13120,G__13121) : rf.call(null,G__13120,G__13121));
};
var G__13131 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__13132__i = 0, G__13132__a = new Array(arguments.length -  2);
while (G__13132__i < G__13132__a.length) {G__13132__a[G__13132__i] = arguments[G__13132__i + 2]; ++G__13132__i;}
  inputs = new cljs.core.IndexedSeq(G__13132__a,0);
} 
return G__13131__delegate.call(this,result,input,inputs);};
G__13131.cljs$lang$maxFixedArity = 2;
G__13131.cljs$lang$applyTo = (function (arglist__13133){
var result = cljs.core.first(arglist__13133);
arglist__13133 = cljs.core.next(arglist__13133);
var input = cljs.core.first(arglist__13133);
var inputs = cljs.core.rest(arglist__13133);
return G__13131__delegate(result,input,inputs);
});
G__13131.cljs$core$IFn$_invoke$arity$variadic = G__13131__delegate;
return G__13131;
})()
;
G__13130 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__13130__0.call(this);
case 1:
return G__13130__1.call(this,result);
case 2:
return G__13130__2.call(this,result,input);
default:
var G__13134 = null;
if (arguments.length > 2) {
var G__13135__i = 0, G__13135__a = new Array(arguments.length -  2);
while (G__13135__i < G__13135__a.length) {G__13135__a[G__13135__i] = arguments[G__13135__i + 2]; ++G__13135__i;}
G__13134 = new cljs.core.IndexedSeq(G__13135__a,0);
}
return G__13130__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__13134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13130.cljs$lang$maxFixedArity = 2;
G__13130.cljs$lang$applyTo = G__13130__3.cljs$lang$applyTo;
G__13130.cljs$core$IFn$_invoke$arity$0 = G__13130__0;
G__13130.cljs$core$IFn$_invoke$arity$1 = G__13130__1;
G__13130.cljs$core$IFn$_invoke$arity$2 = G__13130__2;
G__13130.cljs$core$IFn$_invoke$arity$variadic = G__13130__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13130;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___13136 = size;
var i_13137 = (0);
while(true){
if((i_13137 < n__4440__auto___13136)){
cljs.core.chunk_append(b,(function (){var G__13122 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13137);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13122) : f.call(null,G__13122));
})());

var G__13138 = (i_13137 + (1));
i_13137 = G__13138;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13123 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13123) : f.call(null,G__13123));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__13124 = cljs.core.first(s1);
var G__13125 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13124,G__13125) : f.call(null,G__13124,G__13125));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__13126 = cljs.core.first(s1);
var G__13127 = cljs.core.first(s2);
var G__13128 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13126,G__13127,G__13128) : f.call(null,G__13126,G__13127,G__13128));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__13139__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__13076_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__13076_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__13139 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13140__i = 0, G__13140__a = new Array(arguments.length -  4);
while (G__13140__i < G__13140__a.length) {G__13140__a[G__13140__i] = arguments[G__13140__i + 4]; ++G__13140__i;}
  colls = new cljs.core.IndexedSeq(G__13140__a,0);
} 
return G__13139__delegate.call(this,f,c1,c2,c3,colls);};
G__13139.cljs$lang$maxFixedArity = 4;
G__13139.cljs$lang$applyTo = (function (arglist__13141){
var f = cljs.core.first(arglist__13141);
arglist__13141 = cljs.core.next(arglist__13141);
var c1 = cljs.core.first(arglist__13141);
arglist__13141 = cljs.core.next(arglist__13141);
var c2 = cljs.core.first(arglist__13141);
arglist__13141 = cljs.core.next(arglist__13141);
var c3 = cljs.core.first(arglist__13141);
var colls = cljs.core.rest(arglist__13141);
return G__13139__delegate(f,c1,c2,c3,colls);
});
G__13139.cljs$core$IFn$_invoke$arity$variadic = G__13139__delegate;
return G__13139;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__13142 = null;
if (arguments.length > 4) {
var G__13143__i = 0, G__13143__a = new Array(arguments.length -  4);
while (G__13143__i < G__13143__a.length) {G__13143__a[G__13143__i] = arguments[G__13143__i + 4]; ++G__13143__i;}
G__13142 = new cljs.core.IndexedSeq(G__13143__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13152 = null;
var G__13152__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13152__1 = (function (result){
var G__13149 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13149) : rf.call(null,G__13149));
});
var G__13152__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__13150 = result;
var G__13151 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13150,G__13151) : rf.call(null,G__13150,G__13151));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__13152 = function(result,input){
switch(arguments.length){
case 0:
return G__13152__0.call(this);
case 1:
return G__13152__1.call(this,result);
case 2:
return G__13152__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13152.cljs$core$IFn$_invoke$arity$0 = G__13152__0;
G__13152.cljs$core$IFn$_invoke$arity$1 = G__13152__1;
G__13152.cljs$core$IFn$_invoke$arity$2 = G__13152__2;
return G__13152;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13159 = null;
var G__13159__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13159__1 = (function (result){
var G__13156 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13156) : rf.call(null,G__13156));
});
var G__13159__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__13157 = result;
var G__13158 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13157,G__13158) : rf.call(null,G__13157,G__13158));
}
});
G__13159 = function(result,input){
switch(arguments.length){
case 0:
return G__13159__0.call(this);
case 1:
return G__13159__1.call(this,result);
case 2:
return G__13159__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13159.cljs$core$IFn$_invoke$arity$0 = G__13159__0;
G__13159.cljs$core$IFn$_invoke$arity$1 = G__13159__1;
G__13159.cljs$core$IFn$_invoke$arity$2 = G__13159__2;
return G__13159;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__13160 = (n__$1 - (1));
var G__13161 = cljs.core.rest(s);
n__$1 = G__13160;
coll__$1 = G__13161;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__13164 = cljs.core.next(s);
var G__13165 = cljs.core.next(lead);
s = G__13164;
lead = G__13165;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__13178 = null;
var G__13178__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13178__1 = (function (result){
var G__13172 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13172) : rf.call(null,G__13172));
});
var G__13178__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3541__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3541__auto__)){
var G__13173 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13173) : pred.call(null,G__13173));
} else {
return and__3541__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__13174 = result;
var G__13175 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13174,G__13175) : rf.call(null,G__13174,G__13175));
}
});
G__13178 = function(result,input){
switch(arguments.length){
case 0:
return G__13178__0.call(this);
case 1:
return G__13178__1.call(this,result);
case 2:
return G__13178__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13178.cljs$core$IFn$_invoke$arity$0 = G__13178__0;
G__13178.cljs$core$IFn$_invoke$arity$1 = G__13178__1;
G__13178.cljs$core$IFn$_invoke$arity$2 = G__13178__2;
return G__13178;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3541__auto__ = s;
if(and__3541__auto__){
var G__13177 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13177) : pred__$1.call(null,G__13177));
} else {
return and__3541__auto__;
}
})())){
var G__13179 = pred__$1;
var G__13180 = cljs.core.rest(s);
pred__$1 = G__13179;
coll__$1 = G__13180;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__13189 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13189) : f.call(null,G__13189));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__13192__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__13192 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13193__i = 0, G__13193__a = new Array(arguments.length -  2);
while (G__13193__i < G__13193__a.length) {G__13193__a[G__13193__i] = arguments[G__13193__i + 2]; ++G__13193__i;}
  colls = new cljs.core.IndexedSeq(G__13193__a,0);
} 
return G__13192__delegate.call(this,c1,c2,colls);};
G__13192.cljs$lang$maxFixedArity = 2;
G__13192.cljs$lang$applyTo = (function (arglist__13194){
var c1 = cljs.core.first(arglist__13194);
arglist__13194 = cljs.core.next(arglist__13194);
var c2 = cljs.core.first(arglist__13194);
var colls = cljs.core.rest(arglist__13194);
return G__13192__delegate(c1,c2,colls);
});
G__13192.cljs$core$IFn$_invoke$arity$variadic = G__13192__delegate;
return G__13192;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__13195 = null;
if (arguments.length > 2) {
var G__13196__i = 0, G__13196__a = new Array(arguments.length -  2);
while (G__13196__i < G__13196__a.length) {G__13196__a[G__13196__i] = arguments[G__13196__i + 2]; ++G__13196__i;}
G__13195 = new cljs.core.IndexedSeq(G__13196__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__13195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__13211 = null;
var G__13211__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13211__1 = (function (result){
var G__13204 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13204) : rf.call(null,G__13204));
});
var G__13211__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__13205 = result;
var G__13206 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13205,G__13206) : rf.call(null,G__13205,G__13206));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__13207 = sepr;
var G__13208 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13207,G__13208) : rf.call(null,G__13207,G__13208));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__13209 = result;
var G__13210 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13209,G__13210) : rf.call(null,G__13209,G__13210));
}
});
G__13211 = function(result,input){
switch(arguments.length){
case 0:
return G__13211__0.call(this);
case 1:
return G__13211__1.call(this,result);
case 2:
return G__13211__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13211.cljs$core$IFn$_invoke$arity$0 = G__13211__0;
G__13211.cljs$core$IFn$_invoke$arity$1 = G__13211__1;
G__13211.cljs$core$IFn$_invoke$arity$2 = G__13211__2;
return G__13211;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__13220__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__13220 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__13221__i = 0, G__13221__a = new Array(arguments.length -  1);
while (G__13221__i < G__13221__a.length) {G__13221__a[G__13221__i] = arguments[G__13221__i + 1]; ++G__13221__i;}
  colls = new cljs.core.IndexedSeq(G__13221__a,0);
} 
return G__13220__delegate.call(this,f,colls);};
G__13220.cljs$lang$maxFixedArity = 1;
G__13220.cljs$lang$applyTo = (function (arglist__13222){
var f = cljs.core.first(arglist__13222);
var colls = cljs.core.rest(arglist__13222);
return G__13220__delegate(f,colls);
});
G__13220.cljs$core$IFn$_invoke$arity$variadic = G__13220__delegate;
return G__13220;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__13223 = null;
if (arguments.length > 1) {
var G__13224__i = 0, G__13224__a = new Array(arguments.length -  1);
while (G__13224__i < G__13224__a.length) {G__13224__a[G__13224__i] = arguments[G__13224__i + 1]; ++G__13224__i;}
G__13223 = new cljs.core.IndexedSeq(G__13224__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__13243 = null;
var G__13243__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13243__1 = (function (result){
var G__13237 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13237) : rf.call(null,G__13237));
});
var G__13243__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__13238 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13238) : pred.call(null,G__13238));
})())){
var G__13239 = result;
var G__13240 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13239,G__13240) : rf.call(null,G__13239,G__13240));
} else {
return result;
}
});
G__13243 = function(result,input){
switch(arguments.length){
case 0:
return G__13243__0.call(this);
case 1:
return G__13243__1.call(this,result);
case 2:
return G__13243__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13243.cljs$core$IFn$_invoke$arity$0 = G__13243__0;
G__13243.cljs$core$IFn$_invoke$arity$1 = G__13243__1;
G__13243.cljs$core$IFn$_invoke$arity$2 = G__13243__2;
return G__13243;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___13244 = size;
var i_13245 = (0);
while(true){
if((i_13245 < n__4440__auto___13244)){
if(cljs.core.truth_((function (){var G__13241 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13245);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13241) : pred.call(null,G__13241));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13245));
} else {
}

var G__13246 = (i_13245 + (1));
i_13245 = G__13246;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__13242 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13242) : pred.call(null,G__13242));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__13253 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__13253) : branch_QMARK_.call(null,G__13253));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__13254 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__13254) : children.call(null,G__13254));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__13255_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__13255_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__13258 = to;
if(G__13258){
var bit__4227__auto__ = (G__13258.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4227__auto__) || (G__13258.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__13259 = to;
if(G__13259){
var bit__4227__auto__ = (G__13259.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4227__auto__) || (G__13259.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__13261 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13261) : f.call(null,G__13261));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__13262__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__13262 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13263__i = 0, G__13263__a = new Array(arguments.length -  4);
while (G__13263__i < G__13263__a.length) {G__13263__a[G__13263__i] = arguments[G__13263__i + 4]; ++G__13263__i;}
  colls = new cljs.core.IndexedSeq(G__13263__a,0);
} 
return G__13262__delegate.call(this,f,c1,c2,c3,colls);};
G__13262.cljs$lang$maxFixedArity = 4;
G__13262.cljs$lang$applyTo = (function (arglist__13264){
var f = cljs.core.first(arglist__13264);
arglist__13264 = cljs.core.next(arglist__13264);
var c1 = cljs.core.first(arglist__13264);
arglist__13264 = cljs.core.next(arglist__13264);
var c2 = cljs.core.first(arglist__13264);
arglist__13264 = cljs.core.next(arglist__13264);
var c3 = cljs.core.first(arglist__13264);
var colls = cljs.core.rest(arglist__13264);
return G__13262__delegate(f,c1,c2,c3,colls);
});
G__13262.cljs$core$IFn$_invoke$arity$variadic = G__13262__delegate;
return G__13262;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__13265 = null;
if (arguments.length > 4) {
var G__13266__i = 0, G__13266__a = new Array(arguments.length -  4);
while (G__13266__i < G__13266__a.length) {G__13266__a[G__13266__i] = arguments[G__13266__i + 4]; ++G__13266__i;}
G__13265 = new cljs.core.IndexedSeq(G__13266__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__13268 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13268) : pred.call(null,G__13268));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__13283 = m__$1;
if(G__13283){
var bit__4234__auto__ = (G__13283.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4234__auto__) || (G__13283.cljs$core$ILookup$)){
return true;
} else {
if((!G__13283.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13283);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13283);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__13284 = sentinel;
var G__13285 = m__$2;
var G__13286 = cljs.core.next(ks__$1);
sentinel = G__13284;
m__$1 = G__13285;
ks__$1 = G__13286;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__13287,v){
var vec__13292 = p__13287;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13292,(0),null);
var ks = cljs.core.nthnext(vec__13292,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__13293,f){
var vec__13331 = p__13293;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13331,(0),null);
var ks = cljs.core.nthnext(vec__13331,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13332 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13332) : f.call(null,G__13332));
})());
}
});
var update_in__4 = (function (m,p__13294,f,a){
var vec__13333 = p__13294;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13333,(0),null);
var ks = cljs.core.nthnext(vec__13333,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13334 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13335 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13334,G__13335) : f.call(null,G__13334,G__13335));
})());
}
});
var update_in__5 = (function (m,p__13295,f,a,b){
var vec__13336 = p__13295;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13336,(0),null);
var ks = cljs.core.nthnext(vec__13336,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13337 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13338 = a;
var G__13339 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13337,G__13338,G__13339) : f.call(null,G__13337,G__13338,G__13339));
})());
}
});
var update_in__6 = (function (m,p__13296,f,a,b,c){
var vec__13340 = p__13296;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13340,(0),null);
var ks = cljs.core.nthnext(vec__13340,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13341 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13342 = a;
var G__13343 = b;
var G__13344 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13341,G__13342,G__13343,G__13344) : f.call(null,G__13341,G__13342,G__13343,G__13344));
})());
}
});
var update_in__7 = (function() { 
var G__13346__delegate = function (m,p__13297,f,a,b,c,args){
var vec__13345 = p__13297;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13345,(0),null);
var ks = cljs.core.nthnext(vec__13345,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__13346 = function (m,p__13297,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__13347__i = 0, G__13347__a = new Array(arguments.length -  6);
while (G__13347__i < G__13347__a.length) {G__13347__a[G__13347__i] = arguments[G__13347__i + 6]; ++G__13347__i;}
  args = new cljs.core.IndexedSeq(G__13347__a,0);
} 
return G__13346__delegate.call(this,m,p__13297,f,a,b,c,args);};
G__13346.cljs$lang$maxFixedArity = 6;
G__13346.cljs$lang$applyTo = (function (arglist__13348){
var m = cljs.core.first(arglist__13348);
arglist__13348 = cljs.core.next(arglist__13348);
var p__13297 = cljs.core.first(arglist__13348);
arglist__13348 = cljs.core.next(arglist__13348);
var f = cljs.core.first(arglist__13348);
arglist__13348 = cljs.core.next(arglist__13348);
var a = cljs.core.first(arglist__13348);
arglist__13348 = cljs.core.next(arglist__13348);
var b = cljs.core.first(arglist__13348);
arglist__13348 = cljs.core.next(arglist__13348);
var c = cljs.core.first(arglist__13348);
var args = cljs.core.rest(arglist__13348);
return G__13346__delegate(m,p__13297,f,a,b,c,args);
});
G__13346.cljs$core$IFn$_invoke$arity$variadic = G__13346__delegate;
return G__13346;
})()
;
update_in = function(m,p__13297,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__13297,f);
case 4:
return update_in__4.call(this,m,p__13297,f,a);
case 5:
return update_in__5.call(this,m,p__13297,f,a,b);
case 6:
return update_in__6.call(this,m,p__13297,f,a,b,c);
default:
var G__13349 = null;
if (arguments.length > 6) {
var G__13350__i = 0, G__13350__a = new Array(arguments.length -  6);
while (G__13350__i < G__13350__a.length) {G__13350__a[G__13350__i] = arguments[G__13350__i + 6]; ++G__13350__i;}
G__13349 = new cljs.core.IndexedSeq(G__13350__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__13297,f,a,b,c, G__13349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13361 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13361) : f.call(null,G__13361));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13362 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13363 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13362,G__13363) : f.call(null,G__13362,G__13363));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13364 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13365 = x;
var G__13366 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13364,G__13365,G__13366) : f.call(null,G__13364,G__13365,G__13366));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13367 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13368 = x;
var G__13369 = y;
var G__13370 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13367,G__13368,G__13369,G__13370) : f.call(null,G__13367,G__13368,G__13369,G__13370));
})());
});
var update__7 = (function() { 
var G__13371__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__13371 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__13372__i = 0, G__13372__a = new Array(arguments.length -  6);
while (G__13372__i < G__13372__a.length) {G__13372__a[G__13372__i] = arguments[G__13372__i + 6]; ++G__13372__i;}
  more = new cljs.core.IndexedSeq(G__13372__a,0);
} 
return G__13371__delegate.call(this,m,k,f,x,y,z,more);};
G__13371.cljs$lang$maxFixedArity = 6;
G__13371.cljs$lang$applyTo = (function (arglist__13373){
var m = cljs.core.first(arglist__13373);
arglist__13373 = cljs.core.next(arglist__13373);
var k = cljs.core.first(arglist__13373);
arglist__13373 = cljs.core.next(arglist__13373);
var f = cljs.core.first(arglist__13373);
arglist__13373 = cljs.core.next(arglist__13373);
var x = cljs.core.first(arglist__13373);
arglist__13373 = cljs.core.next(arglist__13373);
var y = cljs.core.first(arglist__13373);
arglist__13373 = cljs.core.next(arglist__13373);
var z = cljs.core.first(arglist__13373);
var more = cljs.core.rest(arglist__13373);
return G__13371__delegate(m,k,f,x,y,z,more);
});
G__13371.cljs$core$IFn$_invoke$arity$variadic = G__13371__delegate;
return G__13371;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__13374 = null;
if (arguments.length > 6) {
var G__13375__i = 0, G__13375__a = new Array(arguments.length -  6);
while (G__13375__i < G__13375__a.length) {G__13375__a[G__13375__i] = arguments[G__13375__i + 6]; ++G__13375__i;}
G__13374 = new cljs.core.IndexedSeq(G__13375__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__13374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__13376 = (ll - (5));
var G__13377 = r;
ll = G__13376;
ret = G__13377;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13382 = cljs.core.pv_aget(node,(0));
var G__13383 = (level - (5));
node = G__13382;
level = G__13383;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13384 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__13385 = (level - (5));
node = G__13384;
level = G__13385;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13395 = init__$2;
var G__13396 = (j + i);
var G__13397 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13395,G__13396,G__13397) : f.call(null,G__13395,G__13396,G__13397));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13408 = (j + (1));
var G__13409 = init__$3;
j = G__13408;
init__$2 = G__13409;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13398 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13398) : cljs.core.deref.call(null,G__13398));
} else {
var G__13410 = (i + len);
var G__13411 = init__$2;
i = G__13410;
init__$1 = G__13411;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__13399 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__13399) : cljs.core.tv_editable_root.call(null,G__13399));
})(),(function (){var G__13400 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__13400) : cljs.core.tv_editable_tail.call(null,G__13400));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13401 = init__$2;
var G__13402 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13401,G__13402) : f.call(null,G__13401,G__13402));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13412 = (j + (1));
var G__13413 = init__$3;
j = G__13412;
init__$2 = G__13413;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13403 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13403) : cljs.core.deref.call(null,G__13403));
} else {
var G__13414 = (i + len);
var G__13415 = init__$2;
i = G__13414;
init__$1 = G__13415;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__13404 = coll__$1;
var G__13405 = cljs.core.first_array_for_longvec(coll__$1);
var G__13406 = (0);
var G__13407 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13404,G__13405,G__13406,G__13407) : cljs.core.chunked_seq.call(null,G__13404,G__13405,G__13406,G__13407));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4440__auto___13416 = len;
var i_13417 = (0);
while(true){
if((i_13417 < n__4440__auto___13416)){
(new_tail[i_13417] = (self__.tail[i_13417]));

var G__13418 = (i_13417 + (1));
i_13417 = G__13418;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__13419 = null;
var G__13419__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13419__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13419 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13419__2.call(this,self__,k);
case 3:
return G__13419__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13419.cljs$core$IFn$_invoke$arity$2 = G__13419__2;
G__13419.cljs$core$IFn$_invoke$arity$3 = G__13419__3;
return G__13419;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args13394){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13394)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__13420 = (i + (1));
var G__13421 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__13420;
out = G__13421;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13422__i = 0, G__13422__a = new Array(arguments.length -  0);
while (G__13422__i < G__13422__a.length) {G__13422__a[G__13422__i] = arguments[G__13422__i + 0]; ++G__13422__i;}
  args = new cljs.core.IndexedSeq(G__13422__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__13423){
var args = cljs.core.seq(arglist__13423);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13424 = self__.vec;
var G__13425 = self__.node;
var G__13426 = self__.i;
var G__13427 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13424,G__13425,G__13426,G__13427) : cljs.core.chunked_seq.call(null,G__13424,G__13425,G__13426,G__13427));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__13428 = self__.vec;
var G__13429 = (self__.i + self__.off);
var G__13430 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13428,G__13429,G__13430) : cljs.core.subvec.call(null,G__13428,G__13429,G__13430));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__13431 = self__.vec;
var G__13432 = (self__.i + self__.off);
var G__13433 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13431,G__13432,G__13433) : cljs.core.subvec.call(null,G__13431,G__13432,G__13433));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13434 = self__.vec;
var G__13435 = self__.node;
var G__13436 = self__.i;
var G__13437 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13434,G__13435,G__13436,G__13437) : cljs.core.chunked_seq.call(null,G__13434,G__13435,G__13436,G__13437));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13438 = self__.vec;
var G__13439 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13440 = end;
var G__13441 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13438,G__13439,G__13440,G__13441) : cljs.core.chunked_seq.call(null,G__13438,G__13439,G__13440,G__13441));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__13442 = self__.vec;
var G__13443 = self__.node;
var G__13444 = self__.i;
var G__13445 = self__.off;
var G__13446 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__13442,G__13443,G__13444,G__13445,G__13446) : cljs.core.chunked_seq.call(null,G__13442,G__13443,G__13444,G__13445,G__13446));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13447 = self__.vec;
var G__13448 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13449 = end;
var G__13450 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13447,G__13448,G__13449,G__13450) : cljs.core.chunked_seq.call(null,G__13447,G__13448,G__13449,G__13450));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__13452 = self__.meta;
var G__13453 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__13454 = self__.start;
var G__13455 = (function (){var x__3870__auto__ = self__.end;
var y__3871__auto__ = (v_pos + (1));
return ((x__3870__auto__ > y__3871__auto__) ? x__3870__auto__ : y__3871__auto__);
})();
var G__13456 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13452,G__13453,G__13454,G__13455,G__13456) : cljs.core.build_subvec.call(null,G__13452,G__13453,G__13454,G__13455,G__13456));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__13457 = self__.meta;
var G__13458 = self__.v;
var G__13459 = self__.start;
var G__13460 = (self__.end - (1));
var G__13461 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13457,G__13458,G__13459,G__13460,G__13461) : cljs.core.build_subvec.call(null,G__13457,G__13458,G__13459,G__13460,G__13461));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__13463 = meta__$1;
var G__13464 = self__.v;
var G__13465 = self__.start;
var G__13466 = self__.end;
var G__13467 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13463,G__13464,G__13465,G__13466,G__13467) : cljs.core.build_subvec.call(null,G__13463,G__13464,G__13465,G__13466,G__13467));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13468 = self__.meta;
var G__13469 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__13470 = self__.start;
var G__13471 = (self__.end + (1));
var G__13472 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13468,G__13469,G__13470,G__13471,G__13472) : cljs.core.build_subvec.call(null,G__13468,G__13469,G__13470,G__13471,G__13472));
});

cljs.core.Subvec.prototype.call = (function() {
var G__13473 = null;
var G__13473__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13473__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13473 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13473__2.call(this,self__,k);
case 3:
return G__13473__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13473.cljs$core$IFn$_invoke$arity$2 = G__13473__2;
G__13473.cljs$core$IFn$_invoke$arity$3 = G__13473__3;
return G__13473;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args13451){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13451)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__13474 = meta;
var G__13475 = v.v;
var G__13476 = (v.start + start);
var G__13477 = (v.start + end);
var G__13478 = __hash;
meta = G__13474;
v = G__13475;
start = G__13476;
end = G__13477;
__hash = G__13478;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj13485 = {};
return obj13485;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__13493 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__13494 = (level - (5));
node = G__13493;
level = G__13494;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__13498 = null;
var G__13498__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13498__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13498 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13498__2.call(this,self__,k);
case 3:
return G__13498__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13498.cljs$core$IFn$_invoke$arity$2 = G__13498__2;
G__13498.cljs$core$IFn$_invoke$arity$3 = G__13498__3;
return G__13498;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args13495){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13495)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3553__auto__ = self__.front;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3553__auto__ = self__.rear;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__13499 = (i + incr);
i = G__13499;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__13500 = (i + (1));
var G__13501 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__13500;
out = G__13501;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj13505 = {};
return obj13505;
})();
var l = ks.length;
var i_13506 = (0);
while(true){
if((i_13506 < l)){
var k_13507 = (ks[i_13506]);
(new_obj[k_13507] = (obj[k_13507]));

var G__13508 = (i_13506 + (1));
i_13506 = G__13508;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3541__auto__ = (function (){var G__13512 = k;
return goog.isString(G__13512);
})();
if(cljs.core.truth_(and__3541__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3541__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__13513 = init__$1;
var G__13514 = k;
var G__13515 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13513,G__13514,G__13515) : f.call(null,G__13513,G__13514,G__13515));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13516 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13516) : cljs.core.deref.call(null,G__13516));
} else {
var G__13522 = cljs.core.rest(keys__$1);
var G__13523 = init__$2;
keys__$1 = G__13522;
init__$1 = G__13523;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3541__auto__ = (function (){var G__13518 = k;
return goog.isString(G__13518);
})();
if(cljs.core.truth_(and__3541__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3541__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__13519 = k;
return goog.isString(G__13519);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3541__auto__ = (function (){var G__13521 = k;
return goog.isString(G__13521);
})();
if(cljs.core.truth_(and__3541__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3541__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__13509_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__13509_SHARP_,(self__.strobj[p1__13509_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__13524 = null;
var G__13524__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13524__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13524 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13524__2.call(this,self__,k);
case 3:
return G__13524__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13524.cljs$core$IFn$_invoke$arity$2 = G__13524__2;
G__13524.cljs$core$IFn$_invoke$arity$3 = G__13524__3;
return G__13524;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args13510){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13510)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj13526 = {};
return obj13526;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__13527 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13527,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13527,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__13528 = (i + (2));
i = G__13528;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__13529 = (i + (2));
i = G__13529;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__13530 = (i + (2));
i = G__13530;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__13531 = (i + (2));
i = G__13531;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__13532 = (i + (2));
i = G__13532;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3553__auto__ = (function (){var G__13536 = k;
return goog.isString(G__13536);
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_13537 = (0);
while(true){
if((i_13537 < l)){
(narr[i_13537] = (arr[i_13537]));

var G__13538 = (i_13537 + (1));
i_13537 = G__13538;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13540 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13540) : cljs.core.keys.call(null,G__13540));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13541 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13541) : cljs.core.vals.call(null,G__13541));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13542 = cljs.core.seq(coll);
var chunk__13543 = null;
var count__13544 = (0);
var i__13545 = (0);
while(true){
if((i__13545 < count__13544)){
var vec__13546 = chunk__13543.cljs$core$IIndexed$_nth$arity$2(null,i__13545);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13546,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13546,(1),null);
var G__13547_13560 = v;
var G__13548_13561 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13547_13560,G__13548_13561) : f.call(null,G__13547_13560,G__13548_13561));

var G__13562 = seq__13542;
var G__13563 = chunk__13543;
var G__13564 = count__13544;
var G__13565 = (i__13545 + (1));
seq__13542 = G__13562;
chunk__13543 = G__13563;
count__13544 = G__13564;
i__13545 = G__13565;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13542);
if(temp__4126__auto__){
var seq__13542__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13542__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__13542__$1);
var G__13566 = cljs.core.chunk_rest(seq__13542__$1);
var G__13567 = c__4340__auto__;
var G__13568 = cljs.core.count(c__4340__auto__);
var G__13569 = (0);
seq__13542 = G__13566;
chunk__13543 = G__13567;
count__13544 = G__13568;
i__13545 = G__13569;
continue;
} else {
var vec__13549 = cljs.core.first(seq__13542__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13549,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13549,(1),null);
var G__13550_13570 = v;
var G__13551_13571 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13550_13570,G__13551_13571) : f.call(null,G__13550_13570,G__13551_13571));

var G__13572 = cljs.core.next(seq__13542__$1);
var G__13573 = null;
var G__13574 = (0);
var G__13575 = (0);
seq__13542 = G__13572;
chunk__13543 = G__13573;
count__13544 = G__13574;
i__13545 = G__13575;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__13552 = init__$1;
var G__13553 = (self__.arr[i]);
var G__13554 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13552,G__13553,G__13554) : f.call(null,G__13552,G__13553,G__13554));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13555 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13555) : cljs.core.deref.call(null,G__13555));
} else {
var G__13576 = (i + (2));
var G__13577 = init__$2;
i = G__13576;
init__$1 = G__13577;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__13556 = other;
if(G__13556){
var bit__4227__auto__ = (G__13556.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4227__auto__) || (G__13556.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__13578 = (i + (2));
i = G__13578;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj13558 = {};
return obj13558;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__13579 = (s + (2));
var G__13580 = d;
s = G__13579;
d = G__13580;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__13581 = (s + (2));
var G__13582 = (d + (2));
s = G__13581;
d = G__13582;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__13559 = cljs.core.aclone(self__.arr);
(G__13559[(idx + (1))] = v);

return G__13559;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13583 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13584 = cljs.core.next(es);
ret = G__13583;
es = G__13584;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__13585 = null;
var G__13585__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13585__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13585 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13585__2.call(this,self__,k);
case 3:
return G__13585__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13585.cljs$core$IFn$_invoke$arity$2 = G__13585__2;
G__13585.cljs$core$IFn$_invoke$arity$3 = G__13585__3;
return G__13585;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args13539){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13539)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__13586 = (i + (2));
var G__13587 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__13586;
ret = G__13587;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__13588_13596 = self__.arr;
G__13588_13596.pop();

G__13588_13596.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__13589 = self__.len;
var G__13590 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__13589,G__13590) : cljs.core.array__GT_transient_hash_map.call(null,G__13589,G__13590));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__13591 = o;
if(G__13591){
var bit__4234__auto__ = (G__13591.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4234__auto__) || (G__13591.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__13591.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13591);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13591);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__13592 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13592) : cljs.core.key.call(null,G__13592));
})(),(function (){var G__13593 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13593) : cljs.core.val.call(null,G__13593));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__13597 = cljs.core.next(es);
var G__13598 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__13594 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13594) : cljs.core.key.call(null,G__13594));
})(),(function (){var G__13595 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13595) : cljs.core.val.call(null,G__13595));
})());
es = G__13597;
tcoll__$2 = G__13598;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__13599 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__13600 = (i + (2));
out = G__13599;
i = G__13600;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__13603 = cljs.core.aclone(arr);
(G__13603[i] = a);

return G__13603;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__13604 = cljs.core.aclone(arr);
(G__13604[i] = a);

(G__13604[j] = b);

return G__13604;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__13609 = init__$1;
var G__13610 = k;
var G__13611 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13609,G__13610,G__13611) : f.call(null,G__13609,G__13610,G__13611));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13612 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13612) : cljs.core.deref.call(null,G__13612));
} else {
var G__13613 = (i + (2));
var G__13614 = init__$2;
i = G__13613;
init__$1 = G__13614;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13615 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13615) : cljs.core.create_inode_seq.call(null,G__13615));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_13629 = (0);
var j_13630 = (0);
while(true){
if((i_13629 < (32))){
if((((self__.bitmap >>> i_13629) & (1)) === (0))){
var G__13631 = (i_13629 + (1));
var G__13632 = j_13630;
i_13629 = G__13631;
j_13630 = G__13632;
continue;
} else {
(nodes[i_13629] = ((!(((self__.arr[j_13630]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_13630])),(self__.arr[j_13630]),(self__.arr[(j_13630 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13630 + (1))])));

var G__13633 = (i_13629 + (1));
var G__13634 = (j_13630 + (2));
i_13629 = G__13633;
j_13630 = G__13634;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13616 = edit__$1;
var G__13617 = (shift + (5));
var G__13618 = key_or_nil;
var G__13619 = val_or_node;
var G__13620 = hash;
var G__13621 = key;
var G__13622 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622) : cljs.core.create_node.call(null,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_13635 = (0);
var j_13636 = (0);
while(true){
if((i_13635 < (32))){
if((((self__.bitmap >>> i_13635) & (1)) === (0))){
var G__13637 = (i_13635 + (1));
var G__13638 = j_13636;
i_13635 = G__13637;
j_13636 = G__13638;
continue;
} else {
(nodes[i_13635] = ((!(((self__.arr[j_13636]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_13636])),(self__.arr[j_13636]),(self__.arr[(j_13636 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13636 + (1))])));

var G__13639 = (i_13635 + (1));
var G__13640 = (j_13636 + (2));
i_13635 = G__13639;
j_13636 = G__13640;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13623 = (shift + (5));
var G__13624 = key_or_nil;
var G__13625 = val_or_node;
var G__13626 = hash;
var G__13627 = key;
var G__13628 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__13623,G__13624,G__13625,G__13626,G__13627,G__13628) : cljs.core.create_node.call(null,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__13641 = (i + (1));
var G__13642 = (j + (2));
var G__13643 = (bitmap | ((1) << i));
i = G__13641;
j = G__13642;
bitmap = G__13643;
continue;
} else {
var G__13644 = (i + (1));
var G__13645 = j;
var G__13646 = bitmap;
i = G__13644;
j = G__13645;
bitmap = G__13646;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13647 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__13647) : cljs.core.create_array_node_seq.call(null,G__13647));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13648 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13648) : cljs.core.deref.call(null,G__13648));
} else {
var G__13649 = (i + (1));
var G__13650 = init__$2;
i = G__13649;
init__$1 = G__13650;
continue;
}
} else {
var G__13651 = (i + (1));
var G__13652 = init__$1;
i = G__13651;
init__$1 = G__13652;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__13653 = (i + (2));
i = G__13653;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13654 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13654) : cljs.core.create_inode_seq.call(null,G__13654));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__13655 = self__.nodes;
var G__13656 = (self__.i + (2));
var G__13657 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13655,G__13656,G__13657) : cljs.core.create_inode_seq.call(null,G__13655,G__13656,G__13657));
} else {
var G__13658 = self__.nodes;
var G__13659 = self__.i;
var G__13660 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13658,G__13659,G__13660) : cljs.core.create_inode_seq.call(null,G__13658,G__13659,G__13660));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__13664 = (j + (2));
j = G__13664;
continue;
}
} else {
var G__13665 = (j + (2));
j = G__13665;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13666 = null;
var G__13667 = self__.nodes;
var G__13668 = self__.i;
var G__13669 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__13666,G__13667,G__13668,G__13669) : cljs.core.create_array_node_seq.call(null,G__13666,G__13667,G__13668,G__13669));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__13674 = (j + (1));
j = G__13674;
continue;
}
} else {
var G__13675 = (j + (1));
j = G__13675;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13677 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13677) : cljs.core.keys.call(null,G__13677));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13678 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13678) : cljs.core.vals.call(null,G__13678));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13679 = cljs.core.seq(coll);
var chunk__13680 = null;
var count__13681 = (0);
var i__13682 = (0);
while(true){
if((i__13682 < count__13681)){
var vec__13683 = chunk__13680.cljs$core$IIndexed$_nth$arity$2(null,i__13682);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13683,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13683,(1),null);
var G__13684_13695 = v;
var G__13685_13696 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13684_13695,G__13685_13696) : f.call(null,G__13684_13695,G__13685_13696));

var G__13697 = seq__13679;
var G__13698 = chunk__13680;
var G__13699 = count__13681;
var G__13700 = (i__13682 + (1));
seq__13679 = G__13697;
chunk__13680 = G__13698;
count__13681 = G__13699;
i__13682 = G__13700;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13679);
if(temp__4126__auto__){
var seq__13679__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13679__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__13679__$1);
var G__13701 = cljs.core.chunk_rest(seq__13679__$1);
var G__13702 = c__4340__auto__;
var G__13703 = cljs.core.count(c__4340__auto__);
var G__13704 = (0);
seq__13679 = G__13701;
chunk__13680 = G__13702;
count__13681 = G__13703;
i__13682 = G__13704;
continue;
} else {
var vec__13686 = cljs.core.first(seq__13679__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13686,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13686,(1),null);
var G__13687_13705 = v;
var G__13688_13706 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13687_13705,G__13688_13706) : f.call(null,G__13687_13705,G__13688_13706));

var G__13707 = cljs.core.next(seq__13679__$1);
var G__13708 = null;
var G__13709 = (0);
var G__13710 = (0);
seq__13679 = G__13707;
chunk__13680 = G__13708;
count__13681 = G__13709;
i__13682 = G__13710;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__13689 = init;
var G__13690 = null;
var G__13691 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13689,G__13690,G__13691) : f.call(null,G__13689,G__13690,G__13691));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__13692 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13692) : cljs.core.deref.call(null,G__13692));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj13694 = {};
return obj13694;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13711 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13712 = cljs.core.next(es);
ret = G__13711;
es = G__13712;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__13713 = null;
var G__13713__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13713__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13713 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13713__2.call(this,self__,k);
case 3:
return G__13713__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13713.cljs$core$IFn$_invoke$arity$2 = G__13713__2;
G__13713.cljs$core$IFn$_invoke$arity$3 = G__13713__3;
return G__13713;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args13676){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13676)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__13714 = (i + (2));
var G__13715 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__13714;
ret = G__13715;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__13716 = (i + (1));
var G__13717 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__13716;
out = G__13717;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__13718 = o;
if(G__13718){
var bit__4234__auto__ = (G__13718.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4234__auto__) || (G__13718.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__13718.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13718);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13718);
}
})()){
return tcoll.assoc_BANG_((function (){var G__13719 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13719) : cljs.core.key.call(null,G__13719));
})(),(function (){var G__13720 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13720) : cljs.core.val.call(null,G__13720));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__13723 = cljs.core.next(es);
var G__13724 = tcoll__$1.assoc_BANG_((function (){var G__13721 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13721) : cljs.core.key.call(null,G__13721));
})(),(function (){var G__13722 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13722) : cljs.core.val.call(null,G__13722));
})());
es = G__13723;
tcoll__$1 = G__13724;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__13725 = ((ascending_QMARK_)?t.left:t.right);
var G__13726 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__13725;
stack__$1 = G__13726;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__13739 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13739) : cljs.core.deref.call(null,G__13739));
} else {
var init__$2 = (function (){var G__13740 = init__$1;
var G__13741 = node.key;
var G__13742 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13740,G__13741,G__13742) : f.call(null,G__13740,G__13741,G__13742));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13743 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13743) : cljs.core.deref.call(null,G__13743));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__13744 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13744) : cljs.core.deref.call(null,G__13744));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__13746 = null;
var G__13746__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13746__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13746 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13746__2.call(this,self__,k);
case 3:
return G__13746__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13746.cljs$core$IFn$_invoke$arity$2 = G__13746__2;
G__13746.cljs$core$IFn$_invoke$arity$3 = G__13746__3;
return G__13746;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args13745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13745)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__13748 = null;
var G__13748__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13748__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13748 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13748__2.call(this,self__,k);
case 3:
return G__13748__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13748.cljs$core$IFn$_invoke$arity$2 = G__13748__2;
G__13748.cljs$core$IFn$_invoke$arity$3 = G__13748__3;
return G__13748;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args13747){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13747)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__13761 = k;
var G__13762 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13761,G__13762) : comp.call(null,G__13761,G__13762));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__13781 = k;
var G__13782 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13781,G__13782) : comp.call(null,G__13781,G__13782));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__13793 = k;
var G__13794 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13793,G__13794) : comp.call(null,G__13793,G__13794));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13796 = cljs.core.seq(coll);
var chunk__13797 = null;
var count__13798 = (0);
var i__13799 = (0);
while(true){
if((i__13799 < count__13798)){
var vec__13800 = chunk__13797.cljs$core$IIndexed$_nth$arity$2(null,i__13799);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13800,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13800,(1),null);
var G__13801_13813 = v;
var G__13802_13814 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13801_13813,G__13802_13814) : f.call(null,G__13801_13813,G__13802_13814));

var G__13815 = seq__13796;
var G__13816 = chunk__13797;
var G__13817 = count__13798;
var G__13818 = (i__13799 + (1));
seq__13796 = G__13815;
chunk__13797 = G__13816;
count__13798 = G__13817;
i__13799 = G__13818;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13796);
if(temp__4126__auto__){
var seq__13796__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13796__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__13796__$1);
var G__13819 = cljs.core.chunk_rest(seq__13796__$1);
var G__13820 = c__4340__auto__;
var G__13821 = cljs.core.count(c__4340__auto__);
var G__13822 = (0);
seq__13796 = G__13819;
chunk__13797 = G__13820;
count__13798 = G__13821;
i__13799 = G__13822;
continue;
} else {
var vec__13803 = cljs.core.first(seq__13796__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13803,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13803,(1),null);
var G__13804_13823 = v;
var G__13805_13824 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13804_13823,G__13805_13824) : f.call(null,G__13804_13823,G__13805_13824));

var G__13825 = cljs.core.next(seq__13796__$1);
var G__13826 = null;
var G__13827 = (0);
var G__13828 = (0);
seq__13796 = G__13825;
chunk__13797 = G__13826;
count__13798 = G__13827;
i__13799 = G__13828;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13806 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13806) : cljs.core.keys.call(null,G__13806));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13807 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13807) : cljs.core.vals.call(null,G__13807));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__13808 = k;
var G__13809 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13808,G__13809) : self__.comp.call(null,G__13808,G__13809));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__13829 = t.left;
t = G__13829;
continue;
} else {
var G__13830 = t.right;
t = G__13830;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13831 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13832 = cljs.core.next(es);
ret = G__13831;
es = G__13832;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__13833 = null;
var G__13833__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13833__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13833 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13833__2.call(this,self__,k);
case 3:
return G__13833__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13833.cljs$core$IFn$_invoke$arity$2 = G__13833__2;
G__13833.cljs$core$IFn$_invoke$arity$3 = G__13833__3;
return G__13833;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args13795){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13795)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__13810 = k;
var G__13811 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13810,G__13811) : self__.comp.call(null,G__13810,G__13811));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__13834 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__13835 = t.left;
stack = G__13834;
t = G__13835;
continue;
} else {
var G__13836 = stack;
var G__13837 = t.right;
stack = G__13836;
t = G__13837;
continue;
}
} else {
if((c > (0))){
var G__13838 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__13839 = t.right;
stack = G__13838;
t = G__13839;
continue;
} else {
var G__13840 = stack;
var G__13841 = t.left;
stack = G__13840;
t = G__13841;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__13812 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13812) : cljs.core.key.call(null,G__13812));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__13842 = cljs.core.nnext(in$);
var G__13843 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__13842;
out = G__13843;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13844__i = 0, G__13844__a = new Array(arguments.length -  0);
while (G__13844__i < G__13844__a.length) {G__13844__a[G__13844__i] = arguments[G__13844__i + 0]; ++G__13844__i;}
  keyvals = new cljs.core.IndexedSeq(G__13844__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__13845){
var keyvals = cljs.core.seq(arglist__13845);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13846__i = 0, G__13846__a = new Array(arguments.length -  0);
while (G__13846__i < G__13846__a.length) {G__13846__a[G__13846__i] = arguments[G__13846__i + 0]; ++G__13846__i;}
  keyvals = new cljs.core.IndexedSeq(G__13846__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__13847){
var keyvals = cljs.core.seq(arglist__13847);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj13851 = {};
return obj13851;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__13852 = cljs.core.nnext(kvs);
kvs = G__13852;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13853__i = 0, G__13853__a = new Array(arguments.length -  0);
while (G__13853__i < G__13853__a.length) {G__13853__a[G__13853__i] = arguments[G__13853__i + 0]; ++G__13853__i;}
  keyvals = new cljs.core.IndexedSeq(G__13853__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__13854){
var keyvals = cljs.core.seq(arglist__13854);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__13855 = cljs.core.nnext(in$);
var G__13856 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__13855;
out = G__13856;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13857__i = 0, G__13857__a = new Array(arguments.length -  0);
while (G__13857__i < G__13857__a.length) {G__13857__a[G__13857__i] = arguments[G__13857__i + 0]; ++G__13857__i;}
  keyvals = new cljs.core.IndexedSeq(G__13857__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__13858){
var keyvals = cljs.core.seq(arglist__13858);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__13859 = cljs.core.nnext(in$);
var G__13860 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__13859;
out = G__13860;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__13861__i = 0, G__13861__a = new Array(arguments.length -  1);
while (G__13861__i < G__13861__a.length) {G__13861__a[G__13861__i] = arguments[G__13861__i + 1]; ++G__13861__i;}
  keyvals = new cljs.core.IndexedSeq(G__13861__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__13862){
var comparator = cljs.core.first(arglist__13862);
var keyvals = cljs.core.rest(arglist__13862);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13863 = self__.mseq;
if(G__13863){
var bit__4234__auto__ = (G__13863.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__13863.cljs$core$INext$)){
return true;
} else {
if((!G__13863.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13863);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13863);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13864 = self__.mseq;
if(G__13864){
var bit__4234__auto__ = (G__13864.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__13864.cljs$core$INext$)){
return true;
} else {
if((!G__13864.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13864);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13864);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13865 = self__.mseq;
if(G__13865){
var bit__4234__auto__ = (G__13865.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__13865.cljs$core$INext$)){
return true;
} else {
if((!G__13865.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13865);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13865);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13866 = self__.mseq;
if(G__13866){
var bit__4234__auto__ = (G__13866.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__13866.cljs$core$INext$)){
return true;
} else {
if((!G__13866.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13866);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__13867_SHARP_,p2__13868_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3553__auto__ = p1__13867_SHARP_;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__13868_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__13869__i = 0, G__13869__a = new Array(arguments.length -  0);
while (G__13869__i < G__13869__a.length) {G__13869__a[G__13869__i] = arguments[G__13869__i + 0]; ++G__13869__i;}
  maps = new cljs.core.IndexedSeq(G__13869__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__13870){
var maps = cljs.core.seq(arglist__13870);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13873 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13874 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13873,G__13874) : f.call(null,G__13873,G__13874));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3553__auto__ = m1;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__13875__i = 0, G__13875__a = new Array(arguments.length -  1);
while (G__13875__i < G__13875__a.length) {G__13875__a[G__13875__i] = arguments[G__13875__i + 1]; ++G__13875__i;}
  maps = new cljs.core.IndexedSeq(G__13875__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__13876){
var f = cljs.core.first(arglist__13876);
var maps = cljs.core.rest(arglist__13876);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__13877 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__13878 = cljs.core.next(keys);
ret = G__13877;
keys = G__13878;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13881 = cljs.core.seq(coll);
var chunk__13882 = null;
var count__13883 = (0);
var i__13884 = (0);
while(true){
if((i__13884 < count__13883)){
var vec__13885 = chunk__13882.cljs$core$IIndexed$_nth$arity$2(null,i__13884);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13885,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13885,(1),null);
var G__13886_13891 = v;
var G__13887_13892 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13886_13891,G__13887_13892) : f.call(null,G__13886_13891,G__13887_13892));

var G__13893 = seq__13881;
var G__13894 = chunk__13882;
var G__13895 = count__13883;
var G__13896 = (i__13884 + (1));
seq__13881 = G__13893;
chunk__13882 = G__13894;
count__13883 = G__13895;
i__13884 = G__13896;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13881);
if(temp__4126__auto__){
var seq__13881__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13881__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__13881__$1);
var G__13897 = cljs.core.chunk_rest(seq__13881__$1);
var G__13898 = c__4340__auto__;
var G__13899 = cljs.core.count(c__4340__auto__);
var G__13900 = (0);
seq__13881 = G__13897;
chunk__13882 = G__13898;
count__13883 = G__13899;
i__13884 = G__13900;
continue;
} else {
var vec__13888 = cljs.core.first(seq__13881__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13888,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13888,(1),null);
var G__13889_13901 = v;
var G__13890_13902 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13889_13901,G__13890_13902) : f.call(null,G__13889_13901,G__13890_13902));

var G__13903 = cljs.core.next(seq__13881__$1);
var G__13904 = null;
var G__13905 = (0);
var G__13906 = (0);
seq__13881 = G__13903;
chunk__13882 = G__13904;
count__13883 = G__13905;
i__13884 = G__13906;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__13879_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__13879_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__13907 = null;
var G__13907__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13907__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13907 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13907__2.call(this,self__,k);
case 3:
return G__13907__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13907.cljs$core$IFn$_invoke$arity$2 = G__13907__2;
G__13907.cljs$core$IFn$_invoke$arity$3 = G__13907__3;
return G__13907;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args13880){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13880)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__13908 = (i + (1));
var G__13909 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__13908;
out = G__13909;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__13910 = (i + (1));
var G__13911 = cljs.core._conj_BANG_(out,(items[i]));
i = G__13910;
out = G__13911;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__13913 = null;
var G__13913__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__13913__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__13913 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13913__2.call(this,self__,k);
case 3:
return G__13913__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13913.cljs$core$IFn$_invoke$arity$2 = G__13913__2;
G__13913.cljs$core$IFn$_invoke$arity$3 = G__13913__3;
return G__13913;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args13912){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13912)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13916 = cljs.core.seq(coll);
var chunk__13917 = null;
var count__13918 = (0);
var i__13919 = (0);
while(true){
if((i__13919 < count__13918)){
var vec__13920 = chunk__13917.cljs$core$IIndexed$_nth$arity$2(null,i__13919);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13920,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13920,(1),null);
var G__13921_13926 = v;
var G__13922_13927 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13921_13926,G__13922_13927) : f.call(null,G__13921_13926,G__13922_13927));

var G__13928 = seq__13916;
var G__13929 = chunk__13917;
var G__13930 = count__13918;
var G__13931 = (i__13919 + (1));
seq__13916 = G__13928;
chunk__13917 = G__13929;
count__13918 = G__13930;
i__13919 = G__13931;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13916);
if(temp__4126__auto__){
var seq__13916__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13916__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__13916__$1);
var G__13932 = cljs.core.chunk_rest(seq__13916__$1);
var G__13933 = c__4340__auto__;
var G__13934 = cljs.core.count(c__4340__auto__);
var G__13935 = (0);
seq__13916 = G__13932;
chunk__13917 = G__13933;
count__13918 = G__13934;
i__13919 = G__13935;
continue;
} else {
var vec__13923 = cljs.core.first(seq__13916__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13923,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13923,(1),null);
var G__13924_13936 = v;
var G__13925_13937 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13924_13936,G__13925_13937) : f.call(null,G__13924_13936,G__13925_13937));

var G__13938 = cljs.core.next(seq__13916__$1);
var G__13939 = null;
var G__13940 = (0);
var G__13941 = (0);
seq__13916 = G__13938;
chunk__13917 = G__13939;
count__13918 = G__13940;
i__13919 = G__13941;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__13914_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__13914_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__13942 = null;
var G__13942__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13942__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13942 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13942__2.call(this,self__,k);
case 3:
return G__13942__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13942.cljs$core$IFn$_invoke$arity$2 = G__13942__2;
G__13942.cljs$core$IFn$_invoke$arity$3 = G__13942__3;
return G__13942;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args13915){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13915)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4434__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4434__auto__.length)){
var G__13943 = (i + (1));
var G__13944 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__13943;
res = G__13944;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__13945 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__13946 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__13945;
out = G__13946;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__13947__delegate = function (keys){
return cljs.core.set(keys);
};
var G__13947 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__13948__i = 0, G__13948__a = new Array(arguments.length -  0);
while (G__13948__i < G__13948__a.length) {G__13948__a[G__13948__i] = arguments[G__13948__i + 0]; ++G__13948__i;}
  keys = new cljs.core.IndexedSeq(G__13948__a,0);
} 
return G__13947__delegate.call(this,keys);};
G__13947.cljs$lang$maxFixedArity = 0;
G__13947.cljs$lang$applyTo = (function (arglist__13949){
var keys = cljs.core.seq(arglist__13949);
return G__13947__delegate(keys);
});
G__13947.cljs$core$IFn$_invoke$arity$variadic = G__13947__delegate;
return G__13947;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__13950 = null;
if (arguments.length > 0) {
var G__13951__i = 0, G__13951__a = new Array(arguments.length -  0);
while (G__13951__i < G__13951__a.length) {G__13951__a[G__13951__i] = arguments[G__13951__i + 0]; ++G__13951__i;}
G__13950 = new cljs.core.IndexedSeq(G__13951__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__13950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__13952__i = 0, G__13952__a = new Array(arguments.length -  0);
while (G__13952__i < G__13952__a.length) {G__13952__a[G__13952__i] = arguments[G__13952__i + 0]; ++G__13952__i;}
  keys = new cljs.core.IndexedSeq(G__13952__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__13953){
var keys = cljs.core.seq(arglist__13953);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__13954__i = 0, G__13954__a = new Array(arguments.length -  1);
while (G__13954__i < G__13954__a.length) {G__13954__a[G__13954__i] = arguments[G__13954__i + 1]; ++G__13954__i;}
  keys = new cljs.core.IndexedSeq(G__13954__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__13955){
var comparator = cljs.core.first(arglist__13955);
var keys = cljs.core.rest(arglist__13955);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__13956_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__13956_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__13956_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__13957_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__13957_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__13957_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__13978 = null;
var G__13978__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13978__1 = (function (result){
var G__13968 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13968) : rf.call(null,G__13968));
});
var G__13978__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__13969 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13969) : cljs.core.deref.call(null,G__13969));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__13970 = result;
var G__13971 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13970,G__13971) : rf.call(null,G__13970,G__13971));
}
});
G__13978 = function(result,input){
switch(arguments.length){
case 0:
return G__13978__0.call(this);
case 1:
return G__13978__1.call(this,result);
case 2:
return G__13978__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13978.cljs$core$IFn$_invoke$arity$0 = G__13978__0;
G__13978.cljs$core$IFn$_invoke$arity$1 = G__13978__1;
G__13978.cljs$core$IFn$_invoke$arity$2 = G__13978__2;
return G__13978;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__13976,seen__$1){
while(true){
var vec__13977 = p__13976;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13977,(0),null);
var xs__$1 = vec__13977;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__13979 = cljs.core.rest(s);
var G__13980 = seen__$1;
p__13976 = G__13979;
seen__$1 = G__13980;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__13981 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__13982 = cljs.core.next(s__$1);
ret = G__13981;
s__$1 = G__13982;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__13984 = x;
if(G__13984){
var bit__4227__auto__ = (G__13984.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4227__auto__) || (G__13984.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__13985 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__13986 = cljs.core.next(ks);
var G__13987 = cljs.core.next(vs);
map = G__13985;
ks = G__13986;
vs = G__13987;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__13998 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__13998) : k.call(null,G__13998));
})() > (function (){var G__13999 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__13999) : k.call(null,G__13999));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__14000__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__13988_SHARP_,p2__13989_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__13988_SHARP_,p2__13989_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14000 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14001__i = 0, G__14001__a = new Array(arguments.length -  3);
while (G__14001__i < G__14001__a.length) {G__14001__a[G__14001__i] = arguments[G__14001__i + 3]; ++G__14001__i;}
  more = new cljs.core.IndexedSeq(G__14001__a,0);
} 
return G__14000__delegate.call(this,k,x,y,more);};
G__14000.cljs$lang$maxFixedArity = 3;
G__14000.cljs$lang$applyTo = (function (arglist__14002){
var k = cljs.core.first(arglist__14002);
arglist__14002 = cljs.core.next(arglist__14002);
var x = cljs.core.first(arglist__14002);
arglist__14002 = cljs.core.next(arglist__14002);
var y = cljs.core.first(arglist__14002);
var more = cljs.core.rest(arglist__14002);
return G__14000__delegate(k,x,y,more);
});
G__14000.cljs$core$IFn$_invoke$arity$variadic = G__14000__delegate;
return G__14000;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__14003 = null;
if (arguments.length > 3) {
var G__14004__i = 0, G__14004__a = new Array(arguments.length -  3);
while (G__14004__i < G__14004__a.length) {G__14004__a[G__14004__i] = arguments[G__14004__i + 3]; ++G__14004__i;}
G__14003 = new cljs.core.IndexedSeq(G__14004__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__14015 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14015) : k.call(null,G__14015));
})() < (function (){var G__14016 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14016) : k.call(null,G__14016));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__14017__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14005_SHARP_,p2__14006_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__14005_SHARP_,p2__14006_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14017 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14018__i = 0, G__14018__a = new Array(arguments.length -  3);
while (G__14018__i < G__14018__a.length) {G__14018__a[G__14018__i] = arguments[G__14018__i + 3]; ++G__14018__i;}
  more = new cljs.core.IndexedSeq(G__14018__a,0);
} 
return G__14017__delegate.call(this,k,x,y,more);};
G__14017.cljs$lang$maxFixedArity = 3;
G__14017.cljs$lang$applyTo = (function (arglist__14019){
var k = cljs.core.first(arglist__14019);
arglist__14019 = cljs.core.next(arglist__14019);
var x = cljs.core.first(arglist__14019);
arglist__14019 = cljs.core.next(arglist__14019);
var y = cljs.core.first(arglist__14019);
var more = cljs.core.rest(arglist__14019);
return G__14017__delegate(k,x,y,more);
});
G__14017.cljs$core$IFn$_invoke$arity$variadic = G__14017__delegate;
return G__14017;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__14020 = null;
if (arguments.length > 3) {
var G__14021__i = 0, G__14021__a = new Array(arguments.length -  3);
while (G__14021__i < G__14021__a.length) {G__14021__a[G__14021__i] = arguments[G__14021__i + 3]; ++G__14021__i;}
G__14020 = new cljs.core.IndexedSeq(G__14021__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__14038 = null;
var G__14038__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14038__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14033 = result;
var G__14034 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14033,G__14034) : rf.call(null,G__14033,G__14034));
})());
})());
var G__14035 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14035) : rf.call(null,G__14035));
});
var G__14038__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__14036 = result;
var G__14037 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14036,G__14037) : rf.call(null,G__14036,G__14037));
} else {
return result;
}
});
G__14038 = function(result,input){
switch(arguments.length){
case 0:
return G__14038__0.call(this);
case 1:
return G__14038__1.call(this,result);
case 2:
return G__14038__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14038.cljs$core$IFn$_invoke$arity$0 = G__14038__0;
G__14038.cljs$core$IFn$_invoke$arity$1 = G__14038__1;
G__14038.cljs$core$IFn$_invoke$arity$2 = G__14038__2;
return G__14038;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__14051 = null;
var G__14051__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14051__1 = (function (result){
var G__14046 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14046) : rf.call(null,G__14046));
});
var G__14051__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14047 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14047) : pred.call(null,G__14047));
})())){
var G__14048 = result;
var G__14049 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14048,G__14049) : rf.call(null,G__14048,G__14049));
} else {
return cljs.core.reduced(result);
}
});
G__14051 = function(result,input){
switch(arguments.length){
case 0:
return G__14051__0.call(this);
case 1:
return G__14051__1.call(this,result);
case 2:
return G__14051__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14051.cljs$core$IFn$_invoke$arity$0 = G__14051__0;
G__14051.cljs$core$IFn$_invoke$arity$1 = G__14051__1;
G__14051.cljs$core$IFn$_invoke$arity$2 = G__14051__2;
return G__14051;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__14050 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14050) : pred.call(null,G__14050));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__14056 = (function (){var G__14058 = cljs.core._entry_key(sc,e);
var G__14059 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14058,G__14059) : comp.call(null,G__14058,G__14059));
})();
var G__14057 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14056,G__14057) : test.call(null,G__14056,G__14057));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14063 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14063,(0),null);
var s = vec__14063;
if(cljs.core.truth_((function (){var G__14064 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14064) : include.call(null,G__14064));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14065 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14065,(0),null);
var s = vec__14065;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14069 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14069,(0),null);
var s = vec__14069;
if(cljs.core.truth_((function (){var G__14070 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14070) : include.call(null,G__14070));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14071 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14071,(0),null);
var s = vec__14071;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__14072 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14072) : Math.ceil.call(null,G__14072));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__14073 = ret;
var G__14074 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14073,G__14074) : f.call(null,G__14073,G__14074));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__14075 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14075) : cljs.core.deref.call(null,G__14075));
} else {
var G__14076 = (i + self__.step);
var G__14077 = ret__$1;
i = G__14076;
ret = G__14077;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14095 = null;
var G__14095__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14095__1 = (function (result){
var G__14092 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14092) : rf.call(null,G__14092));
});
var G__14095__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__14093 = result;
var G__14094 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14093,G__14094) : rf.call(null,G__14093,G__14094));
} else {
return result;
}
});
G__14095 = function(result,input){
switch(arguments.length){
case 0:
return G__14095__0.call(this);
case 1:
return G__14095__1.call(this,result);
case 2:
return G__14095__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14095.cljs$core$IFn$_invoke$arity$0 = G__14095__0;
G__14095.cljs$core$IFn$_invoke$arity$1 = G__14095__1;
G__14095.cljs$core$IFn$_invoke$arity$2 = G__14095__2;
return G__14095;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__14117 = null;
var G__14117__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14117__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14108 = result;
var G__14109 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14108,G__14109) : rf.call(null,G__14108,G__14109));
})());
})());
var G__14110 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14110) : rf.call(null,G__14110));
});
var G__14117__2 = (function (result,input){
var pval = (function (){var G__14111 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14111) : cljs.core.deref.call(null,G__14111));
})();
var val = (function (){var G__14112 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14112) : f.call(null,G__14112));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__14113 = result;
var G__14114 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14113,G__14114) : rf.call(null,G__14113,G__14114));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__14117 = function(result,input){
switch(arguments.length){
case 0:
return G__14117__0.call(this);
case 1:
return G__14117__1.call(this,result);
case 2:
return G__14117__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14117.cljs$core$IFn$_invoke$arity$0 = G__14117__0;
G__14117.cljs$core$IFn$_invoke$arity$1 = G__14117__1;
G__14117.cljs$core$IFn$_invoke$arity$2 = G__14117__2;
return G__14117;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__14115 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14115) : f.call(null,G__14115));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__14096_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__14116 = p1__14096_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14116) : f.call(null,G__14116));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__14126 = init;
var G__14127 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14126,G__14127) : f.call(null,G__14126,G__14127));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__14222 = null;
var G__14222__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__14222__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14180 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14180) : f.call(null,G__14180));
})()],null));
});
var G__14222__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14181 = x;
var G__14182 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14181,G__14182) : f.call(null,G__14181,G__14182));
})()],null));
});
var G__14222__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14183 = x;
var G__14184 = y;
var G__14185 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14183,G__14184,G__14185) : f.call(null,G__14183,G__14184,G__14185));
})()],null));
});
var G__14222__4 = (function() { 
var G__14223__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__14223 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14224__i = 0, G__14224__a = new Array(arguments.length -  3);
while (G__14224__i < G__14224__a.length) {G__14224__a[G__14224__i] = arguments[G__14224__i + 3]; ++G__14224__i;}
  args = new cljs.core.IndexedSeq(G__14224__a,0);
} 
return G__14223__delegate.call(this,x,y,z,args);};
G__14223.cljs$lang$maxFixedArity = 3;
G__14223.cljs$lang$applyTo = (function (arglist__14225){
var x = cljs.core.first(arglist__14225);
arglist__14225 = cljs.core.next(arglist__14225);
var y = cljs.core.first(arglist__14225);
arglist__14225 = cljs.core.next(arglist__14225);
var z = cljs.core.first(arglist__14225);
var args = cljs.core.rest(arglist__14225);
return G__14223__delegate(x,y,z,args);
});
G__14223.cljs$core$IFn$_invoke$arity$variadic = G__14223__delegate;
return G__14223;
})()
;
G__14222 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14222__0.call(this);
case 1:
return G__14222__1.call(this,x);
case 2:
return G__14222__2.call(this,x,y);
case 3:
return G__14222__3.call(this,x,y,z);
default:
var G__14226 = null;
if (arguments.length > 3) {
var G__14227__i = 0, G__14227__a = new Array(arguments.length -  3);
while (G__14227__i < G__14227__a.length) {G__14227__a[G__14227__i] = arguments[G__14227__i + 3]; ++G__14227__i;}
G__14226 = new cljs.core.IndexedSeq(G__14227__a,0);
}
return G__14222__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14226);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14222.cljs$lang$maxFixedArity = 3;
G__14222.cljs$lang$applyTo = G__14222__4.cljs$lang$applyTo;
G__14222.cljs$core$IFn$_invoke$arity$0 = G__14222__0;
G__14222.cljs$core$IFn$_invoke$arity$1 = G__14222__1;
G__14222.cljs$core$IFn$_invoke$arity$2 = G__14222__2;
G__14222.cljs$core$IFn$_invoke$arity$3 = G__14222__3;
G__14222.cljs$core$IFn$_invoke$arity$variadic = G__14222__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14222;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__14228 = null;
var G__14228__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__14228__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14186 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14186) : f.call(null,G__14186));
})(),(function (){var G__14187 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14187) : g.call(null,G__14187));
})()],null));
});
var G__14228__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14188 = x;
var G__14189 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14188,G__14189) : f.call(null,G__14188,G__14189));
})(),(function (){var G__14190 = x;
var G__14191 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14190,G__14191) : g.call(null,G__14190,G__14191));
})()],null));
});
var G__14228__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14192 = x;
var G__14193 = y;
var G__14194 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14192,G__14193,G__14194) : f.call(null,G__14192,G__14193,G__14194));
})(),(function (){var G__14195 = x;
var G__14196 = y;
var G__14197 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14195,G__14196,G__14197) : g.call(null,G__14195,G__14196,G__14197));
})()],null));
});
var G__14228__4 = (function() { 
var G__14229__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__14229 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14230__i = 0, G__14230__a = new Array(arguments.length -  3);
while (G__14230__i < G__14230__a.length) {G__14230__a[G__14230__i] = arguments[G__14230__i + 3]; ++G__14230__i;}
  args = new cljs.core.IndexedSeq(G__14230__a,0);
} 
return G__14229__delegate.call(this,x,y,z,args);};
G__14229.cljs$lang$maxFixedArity = 3;
G__14229.cljs$lang$applyTo = (function (arglist__14231){
var x = cljs.core.first(arglist__14231);
arglist__14231 = cljs.core.next(arglist__14231);
var y = cljs.core.first(arglist__14231);
arglist__14231 = cljs.core.next(arglist__14231);
var z = cljs.core.first(arglist__14231);
var args = cljs.core.rest(arglist__14231);
return G__14229__delegate(x,y,z,args);
});
G__14229.cljs$core$IFn$_invoke$arity$variadic = G__14229__delegate;
return G__14229;
})()
;
G__14228 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14228__0.call(this);
case 1:
return G__14228__1.call(this,x);
case 2:
return G__14228__2.call(this,x,y);
case 3:
return G__14228__3.call(this,x,y,z);
default:
var G__14232 = null;
if (arguments.length > 3) {
var G__14233__i = 0, G__14233__a = new Array(arguments.length -  3);
while (G__14233__i < G__14233__a.length) {G__14233__a[G__14233__i] = arguments[G__14233__i + 3]; ++G__14233__i;}
G__14232 = new cljs.core.IndexedSeq(G__14233__a,0);
}
return G__14228__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14228.cljs$lang$maxFixedArity = 3;
G__14228.cljs$lang$applyTo = G__14228__4.cljs$lang$applyTo;
G__14228.cljs$core$IFn$_invoke$arity$0 = G__14228__0;
G__14228.cljs$core$IFn$_invoke$arity$1 = G__14228__1;
G__14228.cljs$core$IFn$_invoke$arity$2 = G__14228__2;
G__14228.cljs$core$IFn$_invoke$arity$3 = G__14228__3;
G__14228.cljs$core$IFn$_invoke$arity$variadic = G__14228__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14228;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__14234 = null;
var G__14234__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__14234__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14198 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14198) : f.call(null,G__14198));
})(),(function (){var G__14199 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14199) : g.call(null,G__14199));
})(),(function (){var G__14200 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14200) : h.call(null,G__14200));
})()],null));
});
var G__14234__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14201 = x;
var G__14202 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14201,G__14202) : f.call(null,G__14201,G__14202));
})(),(function (){var G__14203 = x;
var G__14204 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14203,G__14204) : g.call(null,G__14203,G__14204));
})(),(function (){var G__14205 = x;
var G__14206 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14205,G__14206) : h.call(null,G__14205,G__14206));
})()],null));
});
var G__14234__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14207 = x;
var G__14208 = y;
var G__14209 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14207,G__14208,G__14209) : f.call(null,G__14207,G__14208,G__14209));
})(),(function (){var G__14210 = x;
var G__14211 = y;
var G__14212 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14210,G__14211,G__14212) : g.call(null,G__14210,G__14211,G__14212));
})(),(function (){var G__14213 = x;
var G__14214 = y;
var G__14215 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14213,G__14214,G__14215) : h.call(null,G__14213,G__14214,G__14215));
})()],null));
});
var G__14234__4 = (function() { 
var G__14235__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__14235 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14236__i = 0, G__14236__a = new Array(arguments.length -  3);
while (G__14236__i < G__14236__a.length) {G__14236__a[G__14236__i] = arguments[G__14236__i + 3]; ++G__14236__i;}
  args = new cljs.core.IndexedSeq(G__14236__a,0);
} 
return G__14235__delegate.call(this,x,y,z,args);};
G__14235.cljs$lang$maxFixedArity = 3;
G__14235.cljs$lang$applyTo = (function (arglist__14237){
var x = cljs.core.first(arglist__14237);
arglist__14237 = cljs.core.next(arglist__14237);
var y = cljs.core.first(arglist__14237);
arglist__14237 = cljs.core.next(arglist__14237);
var z = cljs.core.first(arglist__14237);
var args = cljs.core.rest(arglist__14237);
return G__14235__delegate(x,y,z,args);
});
G__14235.cljs$core$IFn$_invoke$arity$variadic = G__14235__delegate;
return G__14235;
})()
;
G__14234 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14234__0.call(this);
case 1:
return G__14234__1.call(this,x);
case 2:
return G__14234__2.call(this,x,y);
case 3:
return G__14234__3.call(this,x,y,z);
default:
var G__14238 = null;
if (arguments.length > 3) {
var G__14239__i = 0, G__14239__a = new Array(arguments.length -  3);
while (G__14239__i < G__14239__a.length) {G__14239__a[G__14239__i] = arguments[G__14239__i + 3]; ++G__14239__i;}
G__14238 = new cljs.core.IndexedSeq(G__14239__a,0);
}
return G__14234__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14234.cljs$lang$maxFixedArity = 3;
G__14234.cljs$lang$applyTo = G__14234__4.cljs$lang$applyTo;
G__14234.cljs$core$IFn$_invoke$arity$0 = G__14234__0;
G__14234.cljs$core$IFn$_invoke$arity$1 = G__14234__1;
G__14234.cljs$core$IFn$_invoke$arity$2 = G__14234__2;
G__14234.cljs$core$IFn$_invoke$arity$3 = G__14234__3;
G__14234.cljs$core$IFn$_invoke$arity$variadic = G__14234__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14234;
})()
});
var juxt__4 = (function() { 
var G__14240__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__14241 = null;
var G__14241__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14128_SHARP_,p2__14129_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14128_SHARP_,(function (){return (p2__14129_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14129_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14129_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14241__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14130_SHARP_,p2__14131_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14130_SHARP_,(function (){var G__14216 = x;
return (p2__14131_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14131_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14216) : p2__14131_SHARP_.call(null,G__14216));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14241__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14132_SHARP_,p2__14133_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14132_SHARP_,(function (){var G__14217 = x;
var G__14218 = y;
return (p2__14133_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14133_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14217,G__14218) : p2__14133_SHARP_.call(null,G__14217,G__14218));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14241__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14134_SHARP_,p2__14135_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14134_SHARP_,(function (){var G__14219 = x;
var G__14220 = y;
var G__14221 = z;
return (p2__14135_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14135_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14219,G__14220,G__14221) : p2__14135_SHARP_.call(null,G__14219,G__14220,G__14221));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14241__4 = (function() { 
var G__14242__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14136_SHARP_,p2__14137_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14136_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14137_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__14242 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14243__i = 0, G__14243__a = new Array(arguments.length -  3);
while (G__14243__i < G__14243__a.length) {G__14243__a[G__14243__i] = arguments[G__14243__i + 3]; ++G__14243__i;}
  args = new cljs.core.IndexedSeq(G__14243__a,0);
} 
return G__14242__delegate.call(this,x,y,z,args);};
G__14242.cljs$lang$maxFixedArity = 3;
G__14242.cljs$lang$applyTo = (function (arglist__14244){
var x = cljs.core.first(arglist__14244);
arglist__14244 = cljs.core.next(arglist__14244);
var y = cljs.core.first(arglist__14244);
arglist__14244 = cljs.core.next(arglist__14244);
var z = cljs.core.first(arglist__14244);
var args = cljs.core.rest(arglist__14244);
return G__14242__delegate(x,y,z,args);
});
G__14242.cljs$core$IFn$_invoke$arity$variadic = G__14242__delegate;
return G__14242;
})()
;
G__14241 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14241__0.call(this);
case 1:
return G__14241__1.call(this,x);
case 2:
return G__14241__2.call(this,x,y);
case 3:
return G__14241__3.call(this,x,y,z);
default:
var G__14245 = null;
if (arguments.length > 3) {
var G__14246__i = 0, G__14246__a = new Array(arguments.length -  3);
while (G__14246__i < G__14246__a.length) {G__14246__a[G__14246__i] = arguments[G__14246__i + 3]; ++G__14246__i;}
G__14245 = new cljs.core.IndexedSeq(G__14246__a,0);
}
return G__14241__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14241.cljs$lang$maxFixedArity = 3;
G__14241.cljs$lang$applyTo = G__14241__4.cljs$lang$applyTo;
G__14241.cljs$core$IFn$_invoke$arity$0 = G__14241__0;
G__14241.cljs$core$IFn$_invoke$arity$1 = G__14241__1;
G__14241.cljs$core$IFn$_invoke$arity$2 = G__14241__2;
G__14241.cljs$core$IFn$_invoke$arity$3 = G__14241__3;
G__14241.cljs$core$IFn$_invoke$arity$variadic = G__14241__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14241;
})()
;})(fs__$1))
};
var G__14240 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14247__i = 0, G__14247__a = new Array(arguments.length -  3);
while (G__14247__i < G__14247__a.length) {G__14247__a[G__14247__i] = arguments[G__14247__i + 3]; ++G__14247__i;}
  fs = new cljs.core.IndexedSeq(G__14247__a,0);
} 
return G__14240__delegate.call(this,f,g,h,fs);};
G__14240.cljs$lang$maxFixedArity = 3;
G__14240.cljs$lang$applyTo = (function (arglist__14248){
var f = cljs.core.first(arglist__14248);
arglist__14248 = cljs.core.next(arglist__14248);
var g = cljs.core.first(arglist__14248);
arglist__14248 = cljs.core.next(arglist__14248);
var h = cljs.core.first(arglist__14248);
var fs = cljs.core.rest(arglist__14248);
return G__14240__delegate(f,g,h,fs);
});
G__14240.cljs$core$IFn$_invoke$arity$variadic = G__14240__delegate;
return G__14240;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__14249 = null;
if (arguments.length > 3) {
var G__14250__i = 0, G__14250__a = new Array(arguments.length -  3);
while (G__14250__i < G__14250__a.length) {G__14250__a[G__14250__i] = arguments[G__14250__i + 3]; ++G__14250__i;}
G__14249 = new cljs.core.IndexedSeq(G__14250__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__14249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__14251 = cljs.core.next(coll);
coll = G__14251;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__14252 = (n - (1));
var G__14253 = cljs.core.next(coll);
n = G__14252;
coll = G__14253;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__14257 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14257,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14257,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14257,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_14265 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__14266_14272 = cljs.core.first(coll);
var G__14267_14273 = writer;
var G__14268_14274 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14266_14272,G__14267_14273,G__14268_14274) : print_one.call(null,G__14266_14272,G__14267_14273,G__14268_14274));
} else {
}

var coll_14275__$1 = cljs.core.next(coll);
var n_14276 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_14275__$1) && (((n_14276 == null)) || (!((n_14276 === (0)))))){
cljs.core._write(writer,sep);

var G__14269_14277 = cljs.core.first(coll_14275__$1);
var G__14270_14278 = writer;
var G__14271_14279 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14269_14277,G__14270_14278,G__14271_14279) : print_one.call(null,G__14269_14277,G__14270_14278,G__14271_14279));

var G__14280 = cljs.core.next(coll_14275__$1);
var G__14281 = (n_14276 - (1));
coll_14275__$1 = G__14280;
n_14276 = G__14281;
continue;
} else {
if((cljs.core.seq(coll_14275__$1)) && ((n_14276 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14265;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__14286 = cljs.core.seq(ss);
var chunk__14287 = null;
var count__14288 = (0);
var i__14289 = (0);
while(true){
if((i__14289 < count__14288)){
var s = chunk__14287.cljs$core$IIndexed$_nth$arity$2(null,i__14289);
cljs.core._write(writer,s);

var G__14290 = seq__14286;
var G__14291 = chunk__14287;
var G__14292 = count__14288;
var G__14293 = (i__14289 + (1));
seq__14286 = G__14290;
chunk__14287 = G__14291;
count__14288 = G__14292;
i__14289 = G__14293;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14286);
if(temp__4126__auto__){
var seq__14286__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14286__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__14286__$1);
var G__14294 = cljs.core.chunk_rest(seq__14286__$1);
var G__14295 = c__4340__auto__;
var G__14296 = cljs.core.count(c__4340__auto__);
var G__14297 = (0);
seq__14286 = G__14294;
chunk__14287 = G__14295;
count__14288 = G__14296;
i__14289 = G__14297;
continue;
} else {
var s = cljs.core.first(seq__14286__$1);
cljs.core._write(writer,s);

var G__14298 = cljs.core.next(seq__14286__$1);
var G__14299 = null;
var G__14300 = (0);
var G__14301 = (0);
seq__14286 = G__14298;
chunk__14287 = G__14299;
count__14288 = G__14300;
i__14289 = G__14301;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__14302__i = 0, G__14302__a = new Array(arguments.length -  1);
while (G__14302__i < G__14302__a.length) {G__14302__a[G__14302__i] = arguments[G__14302__i + 1]; ++G__14302__i;}
  ss = new cljs.core.IndexedSeq(G__14302__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__14303){
var writer = cljs.core.first(arglist__14303);
var ss = cljs.core.rest(arglist__14303);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj14305 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj14305;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__14308 = "[\\\\\"\b\f\n\r\t]";
var G__14309 = "g";
return RegExp(G__14308,G__14309);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3541__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__14323 = obj;
if(G__14323){
var bit__4234__auto__ = (G__14323.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4234__auto__) || (G__14323.cljs$core$IMeta$)){
return true;
} else {
if((!G__14323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14323);
}
})();
if(and__3541__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__14324 = obj;
if(G__14324){
var bit__4227__auto__ = (G__14324.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4227__auto__) || (G__14324.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__14325 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__14326 = pr_writer;
var G__14327 = writer;
var G__14328 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__14325,G__14326,G__14327,G__14328) : cljs.core.print_map.call(null,G__14325,G__14326,G__14327,G__14328));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__14329 = obj;
return goog.isString(G__14329);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__14331 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__14331;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__14330 = obj;
if(G__14330){
var bit__4234__auto__ = (G__14330.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4234__auto__) || (G__14330.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__14330.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14330);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14330);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__14336 = cljs.core.seq(cljs.core.next(objs));
var chunk__14337 = null;
var count__14338 = (0);
var i__14339 = (0);
while(true){
if((i__14339 < count__14338)){
var obj = chunk__14337.cljs$core$IIndexed$_nth$arity$2(null,i__14339);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14340 = seq__14336;
var G__14341 = chunk__14337;
var G__14342 = count__14338;
var G__14343 = (i__14339 + (1));
seq__14336 = G__14340;
chunk__14337 = G__14341;
count__14338 = G__14342;
i__14339 = G__14343;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14336);
if(temp__4126__auto__){
var seq__14336__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14336__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__14336__$1);
var G__14344 = cljs.core.chunk_rest(seq__14336__$1);
var G__14345 = c__4340__auto__;
var G__14346 = cljs.core.count(c__4340__auto__);
var G__14347 = (0);
seq__14336 = G__14344;
chunk__14337 = G__14345;
count__14338 = G__14346;
i__14339 = G__14347;
continue;
} else {
var obj = cljs.core.first(seq__14336__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14348 = cljs.core.next(seq__14336__$1);
var G__14349 = null;
var G__14350 = (0);
var G__14351 = (0);
seq__14336 = G__14348;
chunk__14337 = G__14349;
count__14338 = G__14350;
i__14339 = G__14351;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14352__i = 0, G__14352__a = new Array(arguments.length -  0);
while (G__14352__i < G__14352__a.length) {G__14352__a[G__14352__i] = arguments[G__14352__i + 0]; ++G__14352__i;}
  objs = new cljs.core.IndexedSeq(G__14352__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__14353){
var objs = cljs.core.seq(arglist__14353);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14354__i = 0, G__14354__a = new Array(arguments.length -  0);
while (G__14354__i < G__14354__a.length) {G__14354__a[G__14354__i] = arguments[G__14354__i + 0]; ++G__14354__i;}
  objs = new cljs.core.IndexedSeq(G__14354__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__14355){
var objs = cljs.core.seq(arglist__14355);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14356__i = 0, G__14356__a = new Array(arguments.length -  0);
while (G__14356__i < G__14356__a.length) {G__14356__a[G__14356__i] = arguments[G__14356__i + 0]; ++G__14356__i;}
  objs = new cljs.core.IndexedSeq(G__14356__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__14357){
var objs = cljs.core.seq(arglist__14357);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14358__i = 0, G__14358__a = new Array(arguments.length -  0);
while (G__14358__i < G__14358__a.length) {G__14358__a[G__14358__i] = arguments[G__14358__i + 0]; ++G__14358__i;}
  objs = new cljs.core.IndexedSeq(G__14358__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__14359){
var objs = cljs.core.seq(arglist__14359);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14360__i = 0, G__14360__a = new Array(arguments.length -  0);
while (G__14360__i < G__14360__a.length) {G__14360__a[G__14360__i] = arguments[G__14360__i + 0]; ++G__14360__i;}
  objs = new cljs.core.IndexedSeq(G__14360__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__14361){
var objs = cljs.core.seq(arglist__14361);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14362__i = 0, G__14362__a = new Array(arguments.length -  0);
while (G__14362__i < G__14362__a.length) {G__14362__a[G__14362__i] = arguments[G__14362__i + 0]; ++G__14362__i;}
  objs = new cljs.core.IndexedSeq(G__14362__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__14363){
var objs = cljs.core.seq(arglist__14363);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14364__i = 0, G__14364__a = new Array(arguments.length -  0);
while (G__14364__i < G__14364__a.length) {G__14364__a[G__14364__i] = arguments[G__14364__i + 0]; ++G__14364__i;}
  objs = new cljs.core.IndexedSeq(G__14364__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__14365){
var objs = cljs.core.seq(arglist__14365);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14366__i = 0, G__14366__a = new Array(arguments.length -  0);
while (G__14366__i < G__14366__a.length) {G__14366__a[G__14366__i] = arguments[G__14366__i + 0]; ++G__14366__i;}
  objs = new cljs.core.IndexedSeq(G__14366__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__14367){
var objs = cljs.core.seq(arglist__14367);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__14374_14380 = cljs.core.key(e);
var G__14375_14381 = w;
var G__14376_14382 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14374_14380,G__14375_14381,G__14376_14382) : print_one.call(null,G__14374_14380,G__14375_14381,G__14376_14382));

cljs.core._write(w," ");

var G__14377 = cljs.core.val(e);
var G__14378 = w;
var G__14379 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14377,G__14378,G__14379) : print_one.call(null,G__14377,G__14378,G__14379));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__14383__i = 0, G__14383__a = new Array(arguments.length -  2);
while (G__14383__i < G__14383__a.length) {G__14383__a[G__14383__i] = arguments[G__14383__i + 2]; ++G__14383__i;}
  args = new cljs.core.IndexedSeq(G__14383__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__14384){
var iref = cljs.core.first(arglist__14384);
arglist__14384 = cljs.core.next(arglist__14384);
var f = cljs.core.first(arglist__14384);
var args = cljs.core.rest(arglist__14384);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__14387 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14387) : cljs.core.atom.call(null,G__14387));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__14389 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14389) : cljs.core.deref.call(null,G__14389));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__14390_SHARP_,p2__14391_SHARP_){
var ret = (function (){var G__14394 = p1__14390_SHARP_;
var G__14395 = p2__14391_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14394,G__14395) : rf.call(null,G__14394,G__14395));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__14398 = null;
var G__14398__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14398__1 = (function (result){
var G__14397 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14397) : rf.call(null,G__14397));
});
var G__14398__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__14398 = function(result,input){
switch(arguments.length){
case 0:
return G__14398__0.call(this);
case 1:
return G__14398__1.call(this,result);
case 2:
return G__14398__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14398.cljs$core$IFn$_invoke$arity$0 = G__14398__0;
G__14398.cljs$core$IFn$_invoke$arity$1 = G__14398__1;
G__14398.cljs$core$IFn$_invoke$arity$2 = G__14398__2;
return G__14398;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__14407 = null;
var G__14407__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14407__1 = (function (result){
var G__14403 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14403) : rf.call(null,G__14403));
});
var G__14407__2 = (function (result,input){
var prior = (function (){var G__14404 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14404) : cljs.core.deref.call(null,G__14404));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__14405 = result;
var G__14406 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14405,G__14406) : rf.call(null,G__14405,G__14406));
}
});
G__14407 = function(result,input){
switch(arguments.length){
case 0:
return G__14407__0.call(this);
case 1:
return G__14407__1.call(this,result);
case 2:
return G__14407__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14407.cljs$core$IFn$_invoke$arity$0 = G__14407__0;
G__14407.cljs$core$IFn$_invoke$arity$1 = G__14407__1;
G__14407.cljs$core$IFn$_invoke$arity$2 = G__14407__2;
return G__14407;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14409_SHARP_,p2__14408_SHARP_){
var G__14411 = p2__14408_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__14411) : proc.call(null,G__14411));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj14413 = {};
return obj14413;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._clj__GT_js[(function (){var G__14417 = x__4197__auto__;
return goog.typeOf(G__14417);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._key__GT_js[(function (){var G__14421 = x__4197__auto__;
return goog.typeOf(G__14421);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__14424 = k;
if(G__14424){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__14424.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14424.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14424);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14424);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__14425 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__14425) : cljs.core.clj__GT_js.call(null,G__14425));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__14441 = x;
if(G__14441){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__14441.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14441.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14441);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj14443 = {};
return obj14443;
})();
var seq__14444_14454 = cljs.core.seq(x);
var chunk__14445_14455 = null;
var count__14446_14456 = (0);
var i__14447_14457 = (0);
while(true){
if((i__14447_14457 < count__14446_14456)){
var vec__14448_14458 = chunk__14445_14455.cljs$core$IIndexed$_nth$arity$2(null,i__14447_14457);
var k_14459 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14448_14458,(0),null);
var v_14460 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14448_14458,(1),null);
(m[cljs.core.key__GT_js(k_14459)] = clj__GT_js(v_14460));

var G__14461 = seq__14444_14454;
var G__14462 = chunk__14445_14455;
var G__14463 = count__14446_14456;
var G__14464 = (i__14447_14457 + (1));
seq__14444_14454 = G__14461;
chunk__14445_14455 = G__14462;
count__14446_14456 = G__14463;
i__14447_14457 = G__14464;
continue;
} else {
var temp__4126__auto___14465 = cljs.core.seq(seq__14444_14454);
if(temp__4126__auto___14465){
var seq__14444_14466__$1 = temp__4126__auto___14465;
if(cljs.core.chunked_seq_QMARK_(seq__14444_14466__$1)){
var c__4340__auto___14467 = cljs.core.chunk_first(seq__14444_14466__$1);
var G__14468 = cljs.core.chunk_rest(seq__14444_14466__$1);
var G__14469 = c__4340__auto___14467;
var G__14470 = cljs.core.count(c__4340__auto___14467);
var G__14471 = (0);
seq__14444_14454 = G__14468;
chunk__14445_14455 = G__14469;
count__14446_14456 = G__14470;
i__14447_14457 = G__14471;
continue;
} else {
var vec__14449_14472 = cljs.core.first(seq__14444_14466__$1);
var k_14473 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14449_14472,(0),null);
var v_14474 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14449_14472,(1),null);
(m[cljs.core.key__GT_js(k_14473)] = clj__GT_js(v_14474));

var G__14475 = cljs.core.next(seq__14444_14466__$1);
var G__14476 = null;
var G__14477 = (0);
var G__14478 = (0);
seq__14444_14454 = G__14475;
chunk__14445_14455 = G__14476;
count__14446_14456 = G__14477;
i__14447_14457 = G__14478;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__14450_14479 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__14451_14480 = null;
var count__14452_14481 = (0);
var i__14453_14482 = (0);
while(true){
if((i__14453_14482 < count__14452_14481)){
var x_14483__$1 = chunk__14451_14480.cljs$core$IIndexed$_nth$arity$2(null,i__14453_14482);
arr.push(x_14483__$1);

var G__14484 = seq__14450_14479;
var G__14485 = chunk__14451_14480;
var G__14486 = count__14452_14481;
var G__14487 = (i__14453_14482 + (1));
seq__14450_14479 = G__14484;
chunk__14451_14480 = G__14485;
count__14452_14481 = G__14486;
i__14453_14482 = G__14487;
continue;
} else {
var temp__4126__auto___14488 = cljs.core.seq(seq__14450_14479);
if(temp__4126__auto___14488){
var seq__14450_14489__$1 = temp__4126__auto___14488;
if(cljs.core.chunked_seq_QMARK_(seq__14450_14489__$1)){
var c__4340__auto___14490 = cljs.core.chunk_first(seq__14450_14489__$1);
var G__14491 = cljs.core.chunk_rest(seq__14450_14489__$1);
var G__14492 = c__4340__auto___14490;
var G__14493 = cljs.core.count(c__4340__auto___14490);
var G__14494 = (0);
seq__14450_14479 = G__14491;
chunk__14451_14480 = G__14492;
count__14452_14481 = G__14493;
i__14453_14482 = G__14494;
continue;
} else {
var x_14495__$1 = cljs.core.first(seq__14450_14489__$1);
arr.push(x_14495__$1);

var G__14496 = cljs.core.next(seq__14450_14489__$1);
var G__14497 = null;
var G__14498 = (0);
var G__14499 = (0);
seq__14450_14479 = G__14496;
chunk__14451_14480 = G__14497;
count__14452_14481 = G__14498;
i__14453_14482 = G__14499;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj14501 = {};
return obj14501;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._js__GT_clj[(function (){var G__14505 = x__4197__auto__;
return goog.typeOf(G__14505);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__14562__delegate = function (x,opts){
var map__14535 = opts;
var map__14535__$1 = ((cljs.core.seq_QMARK_(map__14535))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14535):map__14535);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14535__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__14535,map__14535__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__14551 = x__$1;
if(G__14551){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__14551.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__14551.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14551);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14551);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4309__auto__ = ((function (map__14535,map__14535__$1,keywordize_keys,keyfn){
return (function iter__14552(s__14553){
return (new cljs.core.LazySeq(null,((function (map__14535,map__14535__$1,keywordize_keys,keyfn){
return (function (){
var s__14553__$1 = s__14553;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__14553__$1);
if(temp__4126__auto__){
var s__14553__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__14553__$2)){
var c__4307__auto__ = cljs.core.chunk_first(s__14553__$2);
var size__4308__auto__ = cljs.core.count(c__4307__auto__);
var b__14555 = cljs.core.chunk_buffer(size__4308__auto__);
if((function (){var i__14554 = (0);
while(true){
if((i__14554 < size__4308__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4307__auto__,i__14554);
cljs.core.chunk_append(b__14555,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14560 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14560) : keyfn.call(null,G__14560));
})(),thisfn((x__$1[k]))], null));

var G__14563 = (i__14554 + (1));
i__14554 = G__14563;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__14555),iter__14552(cljs.core.chunk_rest(s__14553__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__14555),null);
}
} else {
var k = cljs.core.first(s__14553__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14561 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14561) : keyfn.call(null,G__14561));
})(),thisfn((x__$1[k]))], null),iter__14552(cljs.core.rest(s__14553__$2)));
}
} else {
return null;
}
break;
}
});})(map__14535,map__14535__$1,keywordize_keys,keyfn))
,null,null));
});})(map__14535,map__14535__$1,keywordize_keys,keyfn))
;
return iter__4309__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__14535,map__14535__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__14562 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__14564__i = 0, G__14564__a = new Array(arguments.length -  1);
while (G__14564__i < G__14564__a.length) {G__14564__a[G__14564__i] = arguments[G__14564__i + 1]; ++G__14564__i;}
  opts = new cljs.core.IndexedSeq(G__14564__a,0);
} 
return G__14562__delegate.call(this,x,opts);};
G__14562.cljs$lang$maxFixedArity = 1;
G__14562.cljs$lang$applyTo = (function (arglist__14565){
var x = cljs.core.first(arglist__14565);
var opts = cljs.core.rest(arglist__14565);
return G__14562__delegate(x,opts);
});
G__14562.cljs$core$IFn$_invoke$arity$variadic = G__14562__delegate;
return G__14562;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__14566 = null;
if (arguments.length > 1) {
var G__14567__i = 0, G__14567__a = new Array(arguments.length -  1);
while (G__14567__i < G__14567__a.length) {G__14567__a[G__14567__i] = arguments[G__14567__i + 1]; ++G__14567__i;}
G__14566 = new cljs.core.IndexedSeq(G__14567__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__14570 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14570) : cljs.core.atom.call(null,G__14570));
})();
return ((function (mem){
return (function() { 
var G__14572__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__14571 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14571) : cljs.core.deref.call(null,G__14571));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__14572 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14573__i = 0, G__14573__a = new Array(arguments.length -  0);
while (G__14573__i < G__14573__a.length) {G__14573__a[G__14573__i] = arguments[G__14573__i + 0]; ++G__14573__i;}
  args = new cljs.core.IndexedSeq(G__14573__a,0);
} 
return G__14572__delegate.call(this,args);};
G__14572.cljs$lang$maxFixedArity = 0;
G__14572.cljs$lang$applyTo = (function (arglist__14574){
var args = cljs.core.seq(arglist__14574);
return G__14572__delegate(args);
});
G__14572.cljs$core$IFn$_invoke$arity$variadic = G__14572__delegate;
return G__14572;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__14576 = ret;
f = G__14576;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__14577__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__14577 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14578__i = 0, G__14578__a = new Array(arguments.length -  1);
while (G__14578__i < G__14578__a.length) {G__14578__a[G__14578__i] = arguments[G__14578__i + 1]; ++G__14578__i;}
  args = new cljs.core.IndexedSeq(G__14578__a,0);
} 
return G__14577__delegate.call(this,f,args);};
G__14577.cljs$lang$maxFixedArity = 1;
G__14577.cljs$lang$applyTo = (function (arglist__14579){
var f = cljs.core.first(arglist__14579);
var args = cljs.core.rest(arglist__14579);
return G__14577__delegate(f,args);
});
G__14577.cljs$core$IFn$_invoke$arity$variadic = G__14577__delegate;
return G__14577;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__14580 = null;
if (arguments.length > 1) {
var G__14581__i = 0, G__14581__a = new Array(arguments.length -  1);
while (G__14581__i < G__14581__a.length) {G__14581__a[G__14581__i] = arguments[G__14581__i + 1]; ++G__14581__i;}
G__14580 = new cljs.core.IndexedSeq(G__14581__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__14584 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14584) : Math.floor.call(null,G__14584));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__14586 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14586) : f.call(null,G__14586));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__14588 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14588) : cljs.core.atom.call(null,G__14588));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14589__i = 0, G__14589__a = new Array(arguments.length -  1);
while (G__14589__i < G__14589__a.length) {G__14589__a[G__14589__i] = arguments[G__14589__i + 1]; ++G__14589__i;}
  args = new cljs.core.IndexedSeq(G__14589__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__14590){
var f = cljs.core.first(arglist__14590);
var args = cljs.core.rest(arglist__14590);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__14655 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14655) : cljs.core.deref.call(null,G__14655));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3553__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
var and__3541__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3541__auto__){
var and__3541__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3541__auto____$1){
var and__3541__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3541__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__14680 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__14678 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__14678) : child.call(null,G__14678));
})(),(function (){var G__14679 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__14679) : parent.call(null,G__14679));
})());
var G__14681 = (i + (1));
ret = G__14680;
i = G__14681;
continue;
}
break;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__14685 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14685) : cljs.core.deref.call(null,G__14685));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__14689 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14689) : cljs.core.deref.call(null,G__14689));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__14693 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14693) : cljs.core.deref.call(null,G__14693));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__14702 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__14702) : targets.call(null,G__14702));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__14703 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__14703) : sources.call(null,G__14703));
})()));
});})(tp,td,ta))
;
var or__3553__auto__ = ((cljs.core.contains_QMARK_((function (){var G__14707 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__14707) : tp.call(null,G__14707));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__14708 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__14708) : ta.call(null,G__14708));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__14709 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__14709) : ta.call(null,G__14709));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__14716 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14716) : parentMap.call(null,G__14716));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__14717 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14717) : parentMap.call(null,G__14717));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__14710_SHARP_){
return cljs.core.cons(cljs.core.first(p1__14710_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__14710_SHARP_),cljs.core.second(p1__14710_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__14718 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14718) : parentMap.call(null,G__14718));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__14711_SHARP_,p2__14712_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__14711_SHARP_,p2__14712_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__14721 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14721) : cljs.core.deref.call(null,G__14721));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__14722 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14722) : cljs.core.deref.call(null,G__14722));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__14738 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14738) : cljs.core.deref.call(null,G__14738));
})().call(null,x);
var or__3553__auto__ = (cljs.core.truth_((function (){var and__3541__auto__ = xprefs;
if(cljs.core.truth_(and__3541__auto__)){
var G__14740 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__14740) : xprefs.call(null,G__14740));
} else {
return and__3541__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__14741 = cljs.core.rest(ps);
ps = G__14741;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__14742 = cljs.core.rest(ps);
ps = G__14742;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3553__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__14756){
var vec__14757 = p__14756;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14757,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14757,(1),null);
var e = vec__14757;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__14758 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14758) : cljs.core.deref.call(null,G__14758));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3553__auto__ = (be == null);
if(or__3553__auto__){
return or__3553__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__14759 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14759) : cljs.core.deref.call(null,G__14759));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__14760 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14760) : cljs.core.deref.call(null,G__14760));
})(),(function (){var G__14761 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14761) : cljs.core.deref.call(null,G__14761));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj14763 = {};
return obj14763;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._reset[(function (){var G__14767 = x__4197__auto__;
return goog.typeOf(G__14767);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reset["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._add_method[(function (){var G__14771 = x__4197__auto__;
return goog.typeOf(G__14771);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._add_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._remove_method[(function (){var G__14775 = x__4197__auto__;
return goog.typeOf(G__14775);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._prefer_method[(function (){var G__14779 = x__4197__auto__;
return goog.typeOf(G__14779);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._get_method[(function (){var G__14783 = x__4197__auto__;
return goog.typeOf(G__14783);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._get_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._methods[(function (){var G__14787 = x__4197__auto__;
return goog.typeOf(G__14787);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._methods["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._prefers[(function (){var G__14791 = x__4197__auto__;
return goog.typeOf(G__14791);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._prefers["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14793 = this$__$1;
return goog.getUid(G__14793);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__14794 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14794) : cljs.core.deref.call(null,G__14794));
})(),(function (){var G__14795 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14795) : cljs.core.deref.call(null,G__14795));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__14796 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14796) : cljs.core.deref.call(null,G__14796));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__14797 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14797) : cljs.core.deref.call(null,G__14797));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__14798 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14798) : cljs.core.deref.call(null,G__14798));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__14799 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14799) : cljs.core.deref.call(null,G__14799));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__15640 = null;
var G__15640__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__15640__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14800 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__14800) : self__.dispatch_fn.call(null,G__14800));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14801 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__14801) : target_fn.call(null,G__14801));
});
var G__15640__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14802 = a;
var G__14803 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__14802,G__14803) : self__.dispatch_fn.call(null,G__14802,G__14803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14804 = a;
var G__14805 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__14804,G__14805) : target_fn.call(null,G__14804,G__14805));
});
var G__15640__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14806 = a;
var G__14807 = b;
var G__14808 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__14806,G__14807,G__14808) : self__.dispatch_fn.call(null,G__14806,G__14807,G__14808));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14809 = a;
var G__14810 = b;
var G__14811 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__14809,G__14810,G__14811) : target_fn.call(null,G__14809,G__14810,G__14811));
});
var G__15640__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14812 = a;
var G__14813 = b;
var G__14814 = c;
var G__14815 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__14812,G__14813,G__14814,G__14815) : self__.dispatch_fn.call(null,G__14812,G__14813,G__14814,G__14815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14816 = a;
var G__14817 = b;
var G__14818 = c;
var G__14819 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__14816,G__14817,G__14818,G__14819) : target_fn.call(null,G__14816,G__14817,G__14818,G__14819));
});
var G__15640__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14820 = a;
var G__14821 = b;
var G__14822 = c;
var G__14823 = d;
var G__14824 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__14820,G__14821,G__14822,G__14823,G__14824) : self__.dispatch_fn.call(null,G__14820,G__14821,G__14822,G__14823,G__14824));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14825 = a;
var G__14826 = b;
var G__14827 = c;
var G__14828 = d;
var G__14829 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__14825,G__14826,G__14827,G__14828,G__14829) : target_fn.call(null,G__14825,G__14826,G__14827,G__14828,G__14829));
});
var G__15640__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14830 = a;
var G__14831 = b;
var G__14832 = c;
var G__14833 = d;
var G__14834 = e;
var G__14835 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__14830,G__14831,G__14832,G__14833,G__14834,G__14835) : self__.dispatch_fn.call(null,G__14830,G__14831,G__14832,G__14833,G__14834,G__14835));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14836 = a;
var G__14837 = b;
var G__14838 = c;
var G__14839 = d;
var G__14840 = e;
var G__14841 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__14836,G__14837,G__14838,G__14839,G__14840,G__14841) : target_fn.call(null,G__14836,G__14837,G__14838,G__14839,G__14840,G__14841));
});
var G__15640__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14842 = a;
var G__14843 = b;
var G__14844 = c;
var G__14845 = d;
var G__14846 = e;
var G__14847 = f;
var G__14848 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__14842,G__14843,G__14844,G__14845,G__14846,G__14847,G__14848) : self__.dispatch_fn.call(null,G__14842,G__14843,G__14844,G__14845,G__14846,G__14847,G__14848));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14849 = a;
var G__14850 = b;
var G__14851 = c;
var G__14852 = d;
var G__14853 = e;
var G__14854 = f;
var G__14855 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__14849,G__14850,G__14851,G__14852,G__14853,G__14854,G__14855) : target_fn.call(null,G__14849,G__14850,G__14851,G__14852,G__14853,G__14854,G__14855));
});
var G__15640__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14856 = a;
var G__14857 = b;
var G__14858 = c;
var G__14859 = d;
var G__14860 = e;
var G__14861 = f;
var G__14862 = g;
var G__14863 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__14856,G__14857,G__14858,G__14859,G__14860,G__14861,G__14862,G__14863) : self__.dispatch_fn.call(null,G__14856,G__14857,G__14858,G__14859,G__14860,G__14861,G__14862,G__14863));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14864 = a;
var G__14865 = b;
var G__14866 = c;
var G__14867 = d;
var G__14868 = e;
var G__14869 = f;
var G__14870 = g;
var G__14871 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__14864,G__14865,G__14866,G__14867,G__14868,G__14869,G__14870,G__14871) : target_fn.call(null,G__14864,G__14865,G__14866,G__14867,G__14868,G__14869,G__14870,G__14871));
});
var G__15640__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14872 = a;
var G__14873 = b;
var G__14874 = c;
var G__14875 = d;
var G__14876 = e;
var G__14877 = f;
var G__14878 = g;
var G__14879 = h;
var G__14880 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__14872,G__14873,G__14874,G__14875,G__14876,G__14877,G__14878,G__14879,G__14880) : self__.dispatch_fn.call(null,G__14872,G__14873,G__14874,G__14875,G__14876,G__14877,G__14878,G__14879,G__14880));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14881 = a;
var G__14882 = b;
var G__14883 = c;
var G__14884 = d;
var G__14885 = e;
var G__14886 = f;
var G__14887 = g;
var G__14888 = h;
var G__14889 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__14881,G__14882,G__14883,G__14884,G__14885,G__14886,G__14887,G__14888,G__14889) : target_fn.call(null,G__14881,G__14882,G__14883,G__14884,G__14885,G__14886,G__14887,G__14888,G__14889));
});
var G__15640__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14890 = a;
var G__14891 = b;
var G__14892 = c;
var G__14893 = d;
var G__14894 = e;
var G__14895 = f;
var G__14896 = g;
var G__14897 = h;
var G__14898 = i;
var G__14899 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__14890,G__14891,G__14892,G__14893,G__14894,G__14895,G__14896,G__14897,G__14898,G__14899) : self__.dispatch_fn.call(null,G__14890,G__14891,G__14892,G__14893,G__14894,G__14895,G__14896,G__14897,G__14898,G__14899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14900 = a;
var G__14901 = b;
var G__14902 = c;
var G__14903 = d;
var G__14904 = e;
var G__14905 = f;
var G__14906 = g;
var G__14907 = h;
var G__14908 = i;
var G__14909 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__14900,G__14901,G__14902,G__14903,G__14904,G__14905,G__14906,G__14907,G__14908,G__14909) : target_fn.call(null,G__14900,G__14901,G__14902,G__14903,G__14904,G__14905,G__14906,G__14907,G__14908,G__14909));
});
var G__15640__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14910 = a;
var G__14911 = b;
var G__14912 = c;
var G__14913 = d;
var G__14914 = e;
var G__14915 = f;
var G__14916 = g;
var G__14917 = h;
var G__14918 = i;
var G__14919 = j;
var G__14920 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__14910,G__14911,G__14912,G__14913,G__14914,G__14915,G__14916,G__14917,G__14918,G__14919,G__14920) : self__.dispatch_fn.call(null,G__14910,G__14911,G__14912,G__14913,G__14914,G__14915,G__14916,G__14917,G__14918,G__14919,G__14920));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14921 = a;
var G__14922 = b;
var G__14923 = c;
var G__14924 = d;
var G__14925 = e;
var G__14926 = f;
var G__14927 = g;
var G__14928 = h;
var G__14929 = i;
var G__14930 = j;
var G__14931 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__14921,G__14922,G__14923,G__14924,G__14925,G__14926,G__14927,G__14928,G__14929,G__14930,G__14931) : target_fn.call(null,G__14921,G__14922,G__14923,G__14924,G__14925,G__14926,G__14927,G__14928,G__14929,G__14930,G__14931));
});
var G__15640__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14932 = a;
var G__14933 = b;
var G__14934 = c;
var G__14935 = d;
var G__14936 = e;
var G__14937 = f;
var G__14938 = g;
var G__14939 = h;
var G__14940 = i;
var G__14941 = j;
var G__14942 = k;
var G__14943 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__14932,G__14933,G__14934,G__14935,G__14936,G__14937,G__14938,G__14939,G__14940,G__14941,G__14942,G__14943) : self__.dispatch_fn.call(null,G__14932,G__14933,G__14934,G__14935,G__14936,G__14937,G__14938,G__14939,G__14940,G__14941,G__14942,G__14943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14944 = a;
var G__14945 = b;
var G__14946 = c;
var G__14947 = d;
var G__14948 = e;
var G__14949 = f;
var G__14950 = g;
var G__14951 = h;
var G__14952 = i;
var G__14953 = j;
var G__14954 = k;
var G__14955 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__14944,G__14945,G__14946,G__14947,G__14948,G__14949,G__14950,G__14951,G__14952,G__14953,G__14954,G__14955) : target_fn.call(null,G__14944,G__14945,G__14946,G__14947,G__14948,G__14949,G__14950,G__14951,G__14952,G__14953,G__14954,G__14955));
});
var G__15640__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14956 = a;
var G__14957 = b;
var G__14958 = c;
var G__14959 = d;
var G__14960 = e;
var G__14961 = f;
var G__14962 = g;
var G__14963 = h;
var G__14964 = i;
var G__14965 = j;
var G__14966 = k;
var G__14967 = l;
var G__14968 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__14956,G__14957,G__14958,G__14959,G__14960,G__14961,G__14962,G__14963,G__14964,G__14965,G__14966,G__14967,G__14968) : self__.dispatch_fn.call(null,G__14956,G__14957,G__14958,G__14959,G__14960,G__14961,G__14962,G__14963,G__14964,G__14965,G__14966,G__14967,G__14968));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14969 = a;
var G__14970 = b;
var G__14971 = c;
var G__14972 = d;
var G__14973 = e;
var G__14974 = f;
var G__14975 = g;
var G__14976 = h;
var G__14977 = i;
var G__14978 = j;
var G__14979 = k;
var G__14980 = l;
var G__14981 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__14969,G__14970,G__14971,G__14972,G__14973,G__14974,G__14975,G__14976,G__14977,G__14978,G__14979,G__14980,G__14981) : target_fn.call(null,G__14969,G__14970,G__14971,G__14972,G__14973,G__14974,G__14975,G__14976,G__14977,G__14978,G__14979,G__14980,G__14981));
});
var G__15640__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14982 = a;
var G__14983 = b;
var G__14984 = c;
var G__14985 = d;
var G__14986 = e;
var G__14987 = f;
var G__14988 = g;
var G__14989 = h;
var G__14990 = i;
var G__14991 = j;
var G__14992 = k;
var G__14993 = l;
var G__14994 = m;
var G__14995 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__14982,G__14983,G__14984,G__14985,G__14986,G__14987,G__14988,G__14989,G__14990,G__14991,G__14992,G__14993,G__14994,G__14995) : self__.dispatch_fn.call(null,G__14982,G__14983,G__14984,G__14985,G__14986,G__14987,G__14988,G__14989,G__14990,G__14991,G__14992,G__14993,G__14994,G__14995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14996 = a;
var G__14997 = b;
var G__14998 = c;
var G__14999 = d;
var G__15000 = e;
var G__15001 = f;
var G__15002 = g;
var G__15003 = h;
var G__15004 = i;
var G__15005 = j;
var G__15006 = k;
var G__15007 = l;
var G__15008 = m;
var G__15009 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__14996,G__14997,G__14998,G__14999,G__15000,G__15001,G__15002,G__15003,G__15004,G__15005,G__15006,G__15007,G__15008,G__15009) : target_fn.call(null,G__14996,G__14997,G__14998,G__14999,G__15000,G__15001,G__15002,G__15003,G__15004,G__15005,G__15006,G__15007,G__15008,G__15009));
});
var G__15640__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15010 = a;
var G__15011 = b;
var G__15012 = c;
var G__15013 = d;
var G__15014 = e;
var G__15015 = f;
var G__15016 = g;
var G__15017 = h;
var G__15018 = i;
var G__15019 = j;
var G__15020 = k;
var G__15021 = l;
var G__15022 = m;
var G__15023 = n;
var G__15024 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15010,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022,G__15023,G__15024) : self__.dispatch_fn.call(null,G__15010,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022,G__15023,G__15024));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15025 = a;
var G__15026 = b;
var G__15027 = c;
var G__15028 = d;
var G__15029 = e;
var G__15030 = f;
var G__15031 = g;
var G__15032 = h;
var G__15033 = i;
var G__15034 = j;
var G__15035 = k;
var G__15036 = l;
var G__15037 = m;
var G__15038 = n;
var G__15039 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15025,G__15026,G__15027,G__15028,G__15029,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035,G__15036,G__15037,G__15038,G__15039) : target_fn.call(null,G__15025,G__15026,G__15027,G__15028,G__15029,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035,G__15036,G__15037,G__15038,G__15039));
});
var G__15640__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15040 = a;
var G__15041 = b;
var G__15042 = c;
var G__15043 = d;
var G__15044 = e;
var G__15045 = f;
var G__15046 = g;
var G__15047 = h;
var G__15048 = i;
var G__15049 = j;
var G__15050 = k;
var G__15051 = l;
var G__15052 = m;
var G__15053 = n;
var G__15054 = o;
var G__15055 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046,G__15047,G__15048,G__15049,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055) : self__.dispatch_fn.call(null,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046,G__15047,G__15048,G__15049,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15056 = a;
var G__15057 = b;
var G__15058 = c;
var G__15059 = d;
var G__15060 = e;
var G__15061 = f;
var G__15062 = g;
var G__15063 = h;
var G__15064 = i;
var G__15065 = j;
var G__15066 = k;
var G__15067 = l;
var G__15068 = m;
var G__15069 = n;
var G__15070 = o;
var G__15071 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15056,G__15057,G__15058,G__15059,G__15060,G__15061,G__15062,G__15063,G__15064,G__15065,G__15066,G__15067,G__15068,G__15069,G__15070,G__15071) : target_fn.call(null,G__15056,G__15057,G__15058,G__15059,G__15060,G__15061,G__15062,G__15063,G__15064,G__15065,G__15066,G__15067,G__15068,G__15069,G__15070,G__15071));
});
var G__15640__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15072 = a;
var G__15073 = b;
var G__15074 = c;
var G__15075 = d;
var G__15076 = e;
var G__15077 = f;
var G__15078 = g;
var G__15079 = h;
var G__15080 = i;
var G__15081 = j;
var G__15082 = k;
var G__15083 = l;
var G__15084 = m;
var G__15085 = n;
var G__15086 = o;
var G__15087 = p;
var G__15088 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15072,G__15073,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080,G__15081,G__15082,G__15083,G__15084,G__15085,G__15086,G__15087,G__15088) : self__.dispatch_fn.call(null,G__15072,G__15073,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080,G__15081,G__15082,G__15083,G__15084,G__15085,G__15086,G__15087,G__15088));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15089 = a;
var G__15090 = b;
var G__15091 = c;
var G__15092 = d;
var G__15093 = e;
var G__15094 = f;
var G__15095 = g;
var G__15096 = h;
var G__15097 = i;
var G__15098 = j;
var G__15099 = k;
var G__15100 = l;
var G__15101 = m;
var G__15102 = n;
var G__15103 = o;
var G__15104 = p;
var G__15105 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15089,G__15090,G__15091,G__15092,G__15093,G__15094,G__15095,G__15096,G__15097,G__15098,G__15099,G__15100,G__15101,G__15102,G__15103,G__15104,G__15105) : target_fn.call(null,G__15089,G__15090,G__15091,G__15092,G__15093,G__15094,G__15095,G__15096,G__15097,G__15098,G__15099,G__15100,G__15101,G__15102,G__15103,G__15104,G__15105));
});
var G__15640__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15106 = a;
var G__15107 = b;
var G__15108 = c;
var G__15109 = d;
var G__15110 = e;
var G__15111 = f;
var G__15112 = g;
var G__15113 = h;
var G__15114 = i;
var G__15115 = j;
var G__15116 = k;
var G__15117 = l;
var G__15118 = m;
var G__15119 = n;
var G__15120 = o;
var G__15121 = p;
var G__15122 = q;
var G__15123 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15106,G__15107,G__15108,G__15109,G__15110,G__15111,G__15112,G__15113,G__15114,G__15115,G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122,G__15123) : self__.dispatch_fn.call(null,G__15106,G__15107,G__15108,G__15109,G__15110,G__15111,G__15112,G__15113,G__15114,G__15115,G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122,G__15123));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15124 = a;
var G__15125 = b;
var G__15126 = c;
var G__15127 = d;
var G__15128 = e;
var G__15129 = f;
var G__15130 = g;
var G__15131 = h;
var G__15132 = i;
var G__15133 = j;
var G__15134 = k;
var G__15135 = l;
var G__15136 = m;
var G__15137 = n;
var G__15138 = o;
var G__15139 = p;
var G__15140 = q;
var G__15141 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15124,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130,G__15131,G__15132,G__15133,G__15134,G__15135,G__15136,G__15137,G__15138,G__15139,G__15140,G__15141) : target_fn.call(null,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130,G__15131,G__15132,G__15133,G__15134,G__15135,G__15136,G__15137,G__15138,G__15139,G__15140,G__15141));
});
var G__15640__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15142 = a;
var G__15143 = b;
var G__15144 = c;
var G__15145 = d;
var G__15146 = e;
var G__15147 = f;
var G__15148 = g;
var G__15149 = h;
var G__15150 = i;
var G__15151 = j;
var G__15152 = k;
var G__15153 = l;
var G__15154 = m;
var G__15155 = n;
var G__15156 = o;
var G__15157 = p;
var G__15158 = q;
var G__15159 = r;
var G__15160 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15142,G__15143,G__15144,G__15145,G__15146,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158,G__15159,G__15160) : self__.dispatch_fn.call(null,G__15142,G__15143,G__15144,G__15145,G__15146,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158,G__15159,G__15160));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15161 = a;
var G__15162 = b;
var G__15163 = c;
var G__15164 = d;
var G__15165 = e;
var G__15166 = f;
var G__15167 = g;
var G__15168 = h;
var G__15169 = i;
var G__15170 = j;
var G__15171 = k;
var G__15172 = l;
var G__15173 = m;
var G__15174 = n;
var G__15175 = o;
var G__15176 = p;
var G__15177 = q;
var G__15178 = r;
var G__15179 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15161,G__15162,G__15163,G__15164,G__15165,G__15166,G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176,G__15177,G__15178,G__15179) : target_fn.call(null,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166,G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176,G__15177,G__15178,G__15179));
});
var G__15640__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15180 = a;
var G__15181 = b;
var G__15182 = c;
var G__15183 = d;
var G__15184 = e;
var G__15185 = f;
var G__15186 = g;
var G__15187 = h;
var G__15188 = i;
var G__15189 = j;
var G__15190 = k;
var G__15191 = l;
var G__15192 = m;
var G__15193 = n;
var G__15194 = o;
var G__15195 = p;
var G__15196 = q;
var G__15197 = r;
var G__15198 = s;
var G__15199 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15180,G__15181,G__15182,G__15183,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197,G__15198,G__15199) : self__.dispatch_fn.call(null,G__15180,G__15181,G__15182,G__15183,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197,G__15198,G__15199));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15200 = a;
var G__15201 = b;
var G__15202 = c;
var G__15203 = d;
var G__15204 = e;
var G__15205 = f;
var G__15206 = g;
var G__15207 = h;
var G__15208 = i;
var G__15209 = j;
var G__15210 = k;
var G__15211 = l;
var G__15212 = m;
var G__15213 = n;
var G__15214 = o;
var G__15215 = p;
var G__15216 = q;
var G__15217 = r;
var G__15218 = s;
var G__15219 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15200,G__15201,G__15202,G__15203,G__15204,G__15205,G__15206,G__15207,G__15208,G__15209,G__15210,G__15211,G__15212,G__15213,G__15214,G__15215,G__15216,G__15217,G__15218,G__15219) : target_fn.call(null,G__15200,G__15201,G__15202,G__15203,G__15204,G__15205,G__15206,G__15207,G__15208,G__15209,G__15210,G__15211,G__15212,G__15213,G__15214,G__15215,G__15216,G__15217,G__15218,G__15219));
});
var G__15640__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__15640 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__15640__1.call(this,self__);
case 2:
return G__15640__2.call(this,self__,a);
case 3:
return G__15640__3.call(this,self__,a,b);
case 4:
return G__15640__4.call(this,self__,a,b,c);
case 5:
return G__15640__5.call(this,self__,a,b,c,d);
case 6:
return G__15640__6.call(this,self__,a,b,c,d,e);
case 7:
return G__15640__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__15640__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__15640__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__15640__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__15640__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__15640__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__15640__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__15640__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__15640__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__15640__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__15640__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__15640__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__15640__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__15640__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__15640__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__15640__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15640.cljs$core$IFn$_invoke$arity$1 = G__15640__1;
G__15640.cljs$core$IFn$_invoke$arity$2 = G__15640__2;
G__15640.cljs$core$IFn$_invoke$arity$3 = G__15640__3;
G__15640.cljs$core$IFn$_invoke$arity$4 = G__15640__4;
G__15640.cljs$core$IFn$_invoke$arity$5 = G__15640__5;
G__15640.cljs$core$IFn$_invoke$arity$6 = G__15640__6;
G__15640.cljs$core$IFn$_invoke$arity$7 = G__15640__7;
G__15640.cljs$core$IFn$_invoke$arity$8 = G__15640__8;
G__15640.cljs$core$IFn$_invoke$arity$9 = G__15640__9;
G__15640.cljs$core$IFn$_invoke$arity$10 = G__15640__10;
G__15640.cljs$core$IFn$_invoke$arity$11 = G__15640__11;
G__15640.cljs$core$IFn$_invoke$arity$12 = G__15640__12;
G__15640.cljs$core$IFn$_invoke$arity$13 = G__15640__13;
G__15640.cljs$core$IFn$_invoke$arity$14 = G__15640__14;
G__15640.cljs$core$IFn$_invoke$arity$15 = G__15640__15;
G__15640.cljs$core$IFn$_invoke$arity$16 = G__15640__16;
G__15640.cljs$core$IFn$_invoke$arity$17 = G__15640__17;
G__15640.cljs$core$IFn$_invoke$arity$18 = G__15640__18;
G__15640.cljs$core$IFn$_invoke$arity$19 = G__15640__19;
G__15640.cljs$core$IFn$_invoke$arity$20 = G__15640__20;
G__15640.cljs$core$IFn$_invoke$arity$21 = G__15640__21;
G__15640.cljs$core$IFn$_invoke$arity$22 = G__15640__22;
return G__15640;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args14792){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14792)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15220 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15220) : self__.dispatch_fn.call(null,G__15220));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15221 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15221) : target_fn.call(null,G__15221));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15222 = a;
var G__15223 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15222,G__15223) : self__.dispatch_fn.call(null,G__15222,G__15223));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15224 = a;
var G__15225 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15224,G__15225) : target_fn.call(null,G__15224,G__15225));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15226 = a;
var G__15227 = b;
var G__15228 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15226,G__15227,G__15228) : self__.dispatch_fn.call(null,G__15226,G__15227,G__15228));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15229 = a;
var G__15230 = b;
var G__15231 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15229,G__15230,G__15231) : target_fn.call(null,G__15229,G__15230,G__15231));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15232 = a;
var G__15233 = b;
var G__15234 = c;
var G__15235 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15232,G__15233,G__15234,G__15235) : self__.dispatch_fn.call(null,G__15232,G__15233,G__15234,G__15235));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15236 = a;
var G__15237 = b;
var G__15238 = c;
var G__15239 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15236,G__15237,G__15238,G__15239) : target_fn.call(null,G__15236,G__15237,G__15238,G__15239));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15240 = a;
var G__15241 = b;
var G__15242 = c;
var G__15243 = d;
var G__15244 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15240,G__15241,G__15242,G__15243,G__15244) : self__.dispatch_fn.call(null,G__15240,G__15241,G__15242,G__15243,G__15244));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15245 = a;
var G__15246 = b;
var G__15247 = c;
var G__15248 = d;
var G__15249 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15245,G__15246,G__15247,G__15248,G__15249) : target_fn.call(null,G__15245,G__15246,G__15247,G__15248,G__15249));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15250 = a;
var G__15251 = b;
var G__15252 = c;
var G__15253 = d;
var G__15254 = e;
var G__15255 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15250,G__15251,G__15252,G__15253,G__15254,G__15255) : self__.dispatch_fn.call(null,G__15250,G__15251,G__15252,G__15253,G__15254,G__15255));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15256 = a;
var G__15257 = b;
var G__15258 = c;
var G__15259 = d;
var G__15260 = e;
var G__15261 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15256,G__15257,G__15258,G__15259,G__15260,G__15261) : target_fn.call(null,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15262 = a;
var G__15263 = b;
var G__15264 = c;
var G__15265 = d;
var G__15266 = e;
var G__15267 = f;
var G__15268 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15262,G__15263,G__15264,G__15265,G__15266,G__15267,G__15268) : self__.dispatch_fn.call(null,G__15262,G__15263,G__15264,G__15265,G__15266,G__15267,G__15268));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15269 = a;
var G__15270 = b;
var G__15271 = c;
var G__15272 = d;
var G__15273 = e;
var G__15274 = f;
var G__15275 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275) : target_fn.call(null,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15276 = a;
var G__15277 = b;
var G__15278 = c;
var G__15279 = d;
var G__15280 = e;
var G__15281 = f;
var G__15282 = g;
var G__15283 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15276,G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283) : self__.dispatch_fn.call(null,G__15276,G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15284 = a;
var G__15285 = b;
var G__15286 = c;
var G__15287 = d;
var G__15288 = e;
var G__15289 = f;
var G__15290 = g;
var G__15291 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291) : target_fn.call(null,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15292 = a;
var G__15293 = b;
var G__15294 = c;
var G__15295 = d;
var G__15296 = e;
var G__15297 = f;
var G__15298 = g;
var G__15299 = h;
var G__15300 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15292,G__15293,G__15294,G__15295,G__15296,G__15297,G__15298,G__15299,G__15300) : self__.dispatch_fn.call(null,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297,G__15298,G__15299,G__15300));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15301 = a;
var G__15302 = b;
var G__15303 = c;
var G__15304 = d;
var G__15305 = e;
var G__15306 = f;
var G__15307 = g;
var G__15308 = h;
var G__15309 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15301,G__15302,G__15303,G__15304,G__15305,G__15306,G__15307,G__15308,G__15309) : target_fn.call(null,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306,G__15307,G__15308,G__15309));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15310 = a;
var G__15311 = b;
var G__15312 = c;
var G__15313 = d;
var G__15314 = e;
var G__15315 = f;
var G__15316 = g;
var G__15317 = h;
var G__15318 = i;
var G__15319 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317,G__15318,G__15319) : self__.dispatch_fn.call(null,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317,G__15318,G__15319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15320 = a;
var G__15321 = b;
var G__15322 = c;
var G__15323 = d;
var G__15324 = e;
var G__15325 = f;
var G__15326 = g;
var G__15327 = h;
var G__15328 = i;
var G__15329 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329) : target_fn.call(null,G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15330 = a;
var G__15331 = b;
var G__15332 = c;
var G__15333 = d;
var G__15334 = e;
var G__15335 = f;
var G__15336 = g;
var G__15337 = h;
var G__15338 = i;
var G__15339 = j;
var G__15340 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15330,G__15331,G__15332,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340) : self__.dispatch_fn.call(null,G__15330,G__15331,G__15332,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15341 = a;
var G__15342 = b;
var G__15343 = c;
var G__15344 = d;
var G__15345 = e;
var G__15346 = f;
var G__15347 = g;
var G__15348 = h;
var G__15349 = i;
var G__15350 = j;
var G__15351 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351) : target_fn.call(null,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15352 = a;
var G__15353 = b;
var G__15354 = c;
var G__15355 = d;
var G__15356 = e;
var G__15357 = f;
var G__15358 = g;
var G__15359 = h;
var G__15360 = i;
var G__15361 = j;
var G__15362 = k;
var G__15363 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15352,G__15353,G__15354,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363) : self__.dispatch_fn.call(null,G__15352,G__15353,G__15354,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15364 = a;
var G__15365 = b;
var G__15366 = c;
var G__15367 = d;
var G__15368 = e;
var G__15369 = f;
var G__15370 = g;
var G__15371 = h;
var G__15372 = i;
var G__15373 = j;
var G__15374 = k;
var G__15375 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15364,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370,G__15371,G__15372,G__15373,G__15374,G__15375) : target_fn.call(null,G__15364,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370,G__15371,G__15372,G__15373,G__15374,G__15375));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15376 = a;
var G__15377 = b;
var G__15378 = c;
var G__15379 = d;
var G__15380 = e;
var G__15381 = f;
var G__15382 = g;
var G__15383 = h;
var G__15384 = i;
var G__15385 = j;
var G__15386 = k;
var G__15387 = l;
var G__15388 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15376,G__15377,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383,G__15384,G__15385,G__15386,G__15387,G__15388) : self__.dispatch_fn.call(null,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383,G__15384,G__15385,G__15386,G__15387,G__15388));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15389 = a;
var G__15390 = b;
var G__15391 = c;
var G__15392 = d;
var G__15393 = e;
var G__15394 = f;
var G__15395 = g;
var G__15396 = h;
var G__15397 = i;
var G__15398 = j;
var G__15399 = k;
var G__15400 = l;
var G__15401 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15389,G__15390,G__15391,G__15392,G__15393,G__15394,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401) : target_fn.call(null,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15402 = a;
var G__15403 = b;
var G__15404 = c;
var G__15405 = d;
var G__15406 = e;
var G__15407 = f;
var G__15408 = g;
var G__15409 = h;
var G__15410 = i;
var G__15411 = j;
var G__15412 = k;
var G__15413 = l;
var G__15414 = m;
var G__15415 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415) : self__.dispatch_fn.call(null,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15416 = a;
var G__15417 = b;
var G__15418 = c;
var G__15419 = d;
var G__15420 = e;
var G__15421 = f;
var G__15422 = g;
var G__15423 = h;
var G__15424 = i;
var G__15425 = j;
var G__15426 = k;
var G__15427 = l;
var G__15428 = m;
var G__15429 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427,G__15428,G__15429) : target_fn.call(null,G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427,G__15428,G__15429));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15430 = a;
var G__15431 = b;
var G__15432 = c;
var G__15433 = d;
var G__15434 = e;
var G__15435 = f;
var G__15436 = g;
var G__15437 = h;
var G__15438 = i;
var G__15439 = j;
var G__15440 = k;
var G__15441 = l;
var G__15442 = m;
var G__15443 = n;
var G__15444 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440,G__15441,G__15442,G__15443,G__15444) : self__.dispatch_fn.call(null,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440,G__15441,G__15442,G__15443,G__15444));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15445 = a;
var G__15446 = b;
var G__15447 = c;
var G__15448 = d;
var G__15449 = e;
var G__15450 = f;
var G__15451 = g;
var G__15452 = h;
var G__15453 = i;
var G__15454 = j;
var G__15455 = k;
var G__15456 = l;
var G__15457 = m;
var G__15458 = n;
var G__15459 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455,G__15456,G__15457,G__15458,G__15459) : target_fn.call(null,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455,G__15456,G__15457,G__15458,G__15459));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15460 = a;
var G__15461 = b;
var G__15462 = c;
var G__15463 = d;
var G__15464 = e;
var G__15465 = f;
var G__15466 = g;
var G__15467 = h;
var G__15468 = i;
var G__15469 = j;
var G__15470 = k;
var G__15471 = l;
var G__15472 = m;
var G__15473 = n;
var G__15474 = o;
var G__15475 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474,G__15475) : self__.dispatch_fn.call(null,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474,G__15475));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15476 = a;
var G__15477 = b;
var G__15478 = c;
var G__15479 = d;
var G__15480 = e;
var G__15481 = f;
var G__15482 = g;
var G__15483 = h;
var G__15484 = i;
var G__15485 = j;
var G__15486 = k;
var G__15487 = l;
var G__15488 = m;
var G__15489 = n;
var G__15490 = o;
var G__15491 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491) : target_fn.call(null,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15492 = a;
var G__15493 = b;
var G__15494 = c;
var G__15495 = d;
var G__15496 = e;
var G__15497 = f;
var G__15498 = g;
var G__15499 = h;
var G__15500 = i;
var G__15501 = j;
var G__15502 = k;
var G__15503 = l;
var G__15504 = m;
var G__15505 = n;
var G__15506 = o;
var G__15507 = p;
var G__15508 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15492,G__15493,G__15494,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508) : self__.dispatch_fn.call(null,G__15492,G__15493,G__15494,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15509 = a;
var G__15510 = b;
var G__15511 = c;
var G__15512 = d;
var G__15513 = e;
var G__15514 = f;
var G__15515 = g;
var G__15516 = h;
var G__15517 = i;
var G__15518 = j;
var G__15519 = k;
var G__15520 = l;
var G__15521 = m;
var G__15522 = n;
var G__15523 = o;
var G__15524 = p;
var G__15525 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15509,G__15510,G__15511,G__15512,G__15513,G__15514,G__15515,G__15516,G__15517,G__15518,G__15519,G__15520,G__15521,G__15522,G__15523,G__15524,G__15525) : target_fn.call(null,G__15509,G__15510,G__15511,G__15512,G__15513,G__15514,G__15515,G__15516,G__15517,G__15518,G__15519,G__15520,G__15521,G__15522,G__15523,G__15524,G__15525));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15526 = a;
var G__15527 = b;
var G__15528 = c;
var G__15529 = d;
var G__15530 = e;
var G__15531 = f;
var G__15532 = g;
var G__15533 = h;
var G__15534 = i;
var G__15535 = j;
var G__15536 = k;
var G__15537 = l;
var G__15538 = m;
var G__15539 = n;
var G__15540 = o;
var G__15541 = p;
var G__15542 = q;
var G__15543 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15526,G__15527,G__15528,G__15529,G__15530,G__15531,G__15532,G__15533,G__15534,G__15535,G__15536,G__15537,G__15538,G__15539,G__15540,G__15541,G__15542,G__15543) : self__.dispatch_fn.call(null,G__15526,G__15527,G__15528,G__15529,G__15530,G__15531,G__15532,G__15533,G__15534,G__15535,G__15536,G__15537,G__15538,G__15539,G__15540,G__15541,G__15542,G__15543));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15544 = a;
var G__15545 = b;
var G__15546 = c;
var G__15547 = d;
var G__15548 = e;
var G__15549 = f;
var G__15550 = g;
var G__15551 = h;
var G__15552 = i;
var G__15553 = j;
var G__15554 = k;
var G__15555 = l;
var G__15556 = m;
var G__15557 = n;
var G__15558 = o;
var G__15559 = p;
var G__15560 = q;
var G__15561 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15544,G__15545,G__15546,G__15547,G__15548,G__15549,G__15550,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556,G__15557,G__15558,G__15559,G__15560,G__15561) : target_fn.call(null,G__15544,G__15545,G__15546,G__15547,G__15548,G__15549,G__15550,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556,G__15557,G__15558,G__15559,G__15560,G__15561));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15562 = a;
var G__15563 = b;
var G__15564 = c;
var G__15565 = d;
var G__15566 = e;
var G__15567 = f;
var G__15568 = g;
var G__15569 = h;
var G__15570 = i;
var G__15571 = j;
var G__15572 = k;
var G__15573 = l;
var G__15574 = m;
var G__15575 = n;
var G__15576 = o;
var G__15577 = p;
var G__15578 = q;
var G__15579 = r;
var G__15580 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15562,G__15563,G__15564,G__15565,G__15566,G__15567,G__15568,G__15569,G__15570,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578,G__15579,G__15580) : self__.dispatch_fn.call(null,G__15562,G__15563,G__15564,G__15565,G__15566,G__15567,G__15568,G__15569,G__15570,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578,G__15579,G__15580));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15581 = a;
var G__15582 = b;
var G__15583 = c;
var G__15584 = d;
var G__15585 = e;
var G__15586 = f;
var G__15587 = g;
var G__15588 = h;
var G__15589 = i;
var G__15590 = j;
var G__15591 = k;
var G__15592 = l;
var G__15593 = m;
var G__15594 = n;
var G__15595 = o;
var G__15596 = p;
var G__15597 = q;
var G__15598 = r;
var G__15599 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15581,G__15582,G__15583,G__15584,G__15585,G__15586,G__15587,G__15588,G__15589,G__15590,G__15591,G__15592,G__15593,G__15594,G__15595,G__15596,G__15597,G__15598,G__15599) : target_fn.call(null,G__15581,G__15582,G__15583,G__15584,G__15585,G__15586,G__15587,G__15588,G__15589,G__15590,G__15591,G__15592,G__15593,G__15594,G__15595,G__15596,G__15597,G__15598,G__15599));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15600 = a;
var G__15601 = b;
var G__15602 = c;
var G__15603 = d;
var G__15604 = e;
var G__15605 = f;
var G__15606 = g;
var G__15607 = h;
var G__15608 = i;
var G__15609 = j;
var G__15610 = k;
var G__15611 = l;
var G__15612 = m;
var G__15613 = n;
var G__15614 = o;
var G__15615 = p;
var G__15616 = q;
var G__15617 = r;
var G__15618 = s;
var G__15619 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15600,G__15601,G__15602,G__15603,G__15604,G__15605,G__15606,G__15607,G__15608,G__15609,G__15610,G__15611,G__15612,G__15613,G__15614,G__15615,G__15616,G__15617,G__15618,G__15619) : self__.dispatch_fn.call(null,G__15600,G__15601,G__15602,G__15603,G__15604,G__15605,G__15606,G__15607,G__15608,G__15609,G__15610,G__15611,G__15612,G__15613,G__15614,G__15615,G__15616,G__15617,G__15618,G__15619));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15620 = a;
var G__15621 = b;
var G__15622 = c;
var G__15623 = d;
var G__15624 = e;
var G__15625 = f;
var G__15626 = g;
var G__15627 = h;
var G__15628 = i;
var G__15629 = j;
var G__15630 = k;
var G__15631 = l;
var G__15632 = m;
var G__15633 = n;
var G__15634 = o;
var G__15635 = p;
var G__15636 = q;
var G__15637 = r;
var G__15638 = s;
var G__15639 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15620,G__15621,G__15622,G__15623,G__15624,G__15625,G__15626,G__15627,G__15628,G__15629,G__15630,G__15631,G__15632,G__15633,G__15634,G__15635,G__15636,G__15637,G__15638,G__15639) : target_fn.call(null,G__15620,G__15621,G__15622,G__15623,G__15624,G__15625,G__15626,G__15627,G__15628,G__15629,G__15630,G__15631,G__15632,G__15633,G__15634,G__15635,G__15636,G__15637,G__15638,G__15639));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15641 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__15641);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__15646 = msg;
return Error(G__15646);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__15651 = x;
var G__15652 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15651,G__15652) : pred.call(null,G__15651,G__15652));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__15653 = y;
var G__15654 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15653,G__15654) : pred.call(null,G__15653,G__15654));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map