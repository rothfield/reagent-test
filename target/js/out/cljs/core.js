// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5785__delegate = function (args){
return console.log.apply(console,(function (){var G__5784 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5784) : cljs.core.into_array.call(null,G__5784));
})());
};
var G__5785 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5786__i = 0, G__5786__a = new Array(arguments.length -  0);
while (G__5786__i < G__5786__a.length) {G__5786__a[G__5786__i] = arguments[G__5786__i + 0]; ++G__5786__i;}
  args = new cljs.core.IndexedSeq(G__5786__a,0);
} 
return G__5785__delegate.call(this,args);};
G__5785.cljs$lang$maxFixedArity = 0;
G__5785.cljs$lang$applyTo = (function (arglist__5787){
var args = cljs.core.seq(arglist__5787);
return G__5785__delegate(args);
});
G__5785.cljs$core$IFn$_invoke$arity$variadic = G__5785__delegate;
return G__5785;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__5789 = x;
return goog.isString(G__5789);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5791 = x__$1;
return goog.typeOf(G__5791);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3541__auto__ = ty;
if(cljs.core.truth_(and__3541__auto__)){
return ty.cljs$lang$type;
} else {
return and__3541__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5793 = obj;
return goog.typeOf(G__5793);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5795 = Symbol;
return goog.typeOf(G__5795);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4440__auto___5797 = len;
var i_5798 = (0);
while(true){
if((i_5798 < n__4440__auto___5797)){
(new_arr[i_5798] = (arr[i_5798]));

var G__5799 = (i_5798 + (1));
i_5798 = G__5799;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5800 = (i + (1));
i = G__5800;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__5809__delegate = function (array,i,idxs){
var G__5806 = aget;
var G__5807 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5808 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5806,G__5807,G__5808) : cljs.core.apply.call(null,G__5806,G__5807,G__5808));
};
var G__5809 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5810__i = 0, G__5810__a = new Array(arguments.length -  2);
while (G__5810__i < G__5810__a.length) {G__5810__a[G__5810__i] = arguments[G__5810__i + 2]; ++G__5810__i;}
  idxs = new cljs.core.IndexedSeq(G__5810__a,0);
} 
return G__5809__delegate.call(this,array,i,idxs);};
G__5809.cljs$lang$maxFixedArity = 2;
G__5809.cljs$lang$applyTo = (function (arglist__5811){
var array = cljs.core.first(arglist__5811);
arglist__5811 = cljs.core.next(arglist__5811);
var i = cljs.core.first(arglist__5811);
var idxs = cljs.core.rest(arglist__5811);
return G__5809__delegate(array,i,idxs);
});
G__5809.cljs$core$IFn$_invoke$arity$variadic = G__5809__delegate;
return G__5809;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__5812 = null;
if (arguments.length > 2) {
var G__5813__i = 0, G__5813__a = new Array(arguments.length -  2);
while (G__5813__i < G__5813__a.length) {G__5813__a[G__5813__i] = arguments[G__5813__i + 2]; ++G__5813__i;}
G__5812 = new cljs.core.IndexedSeq(G__5813__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5822__delegate = function (array,idx,idx2,idxv){
var G__5818 = aset;
var G__5819 = (array[idx]);
var G__5820 = idx2;
var G__5821 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5818,G__5819,G__5820,G__5821) : cljs.core.apply.call(null,G__5818,G__5819,G__5820,G__5821));
};
var G__5822 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5823__i = 0, G__5823__a = new Array(arguments.length -  3);
while (G__5823__i < G__5823__a.length) {G__5823__a[G__5823__i] = arguments[G__5823__i + 3]; ++G__5823__i;}
  idxv = new cljs.core.IndexedSeq(G__5823__a,0);
} 
return G__5822__delegate.call(this,array,idx,idx2,idxv);};
G__5822.cljs$lang$maxFixedArity = 3;
G__5822.cljs$lang$applyTo = (function (arglist__5824){
var array = cljs.core.first(arglist__5824);
arglist__5824 = cljs.core.next(arglist__5824);
var idx = cljs.core.first(arglist__5824);
arglist__5824 = cljs.core.next(arglist__5824);
var idx2 = cljs.core.first(arglist__5824);
var idxv = cljs.core.rest(arglist__5824);
return G__5822__delegate(array,idx,idx2,idxv);
});
G__5822.cljs$core$IFn$_invoke$arity$variadic = G__5822__delegate;
return G__5822;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5825 = null;
if (arguments.length > 3) {
var G__5826__i = 0, G__5826__a = new Array(arguments.length -  3);
while (G__5826__i < G__5826__a.length) {G__5826__a[G__5826__i] = arguments[G__5826__i + 3]; ++G__5826__i;}
G__5825 = new cljs.core.IndexedSeq(G__5826__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5832 = (function (a,x){
a.push(x);

return a;
});
var G__5833 = [];
var G__5834 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5832,G__5833,G__5834) : cljs.core.reduce.call(null,G__5832,G__5833,G__5834));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5835__i = 0, G__5835__a = new Array(arguments.length -  2);
while (G__5835__i < G__5835__a.length) {G__5835__a[G__5835__i] = arguments[G__5835__i + 2]; ++G__5835__i;}
  args = new cljs.core.IndexedSeq(G__5835__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5836){
var obj = cljs.core.first(arglist__5836);
arglist__5836 = cljs.core.next(arglist__5836);
var s = cljs.core.first(arglist__5836);
var args = cljs.core.rest(arglist__5836);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5838 = {};
return obj5838;
})();


cljs.core.IFn = (function (){var obj5840 = {};
return obj5840;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5886 = x__4197__auto__;
return goog.typeOf(G__5886);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5888 = x__4197__auto__;
return goog.typeOf(G__5888);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5890 = x__4197__auto__;
return goog.typeOf(G__5890);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5892 = x__4197__auto__;
return goog.typeOf(G__5892);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5894 = x__4197__auto__;
return goog.typeOf(G__5894);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5896 = x__4197__auto__;
return goog.typeOf(G__5896);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5898 = x__4197__auto__;
return goog.typeOf(G__5898);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5900 = x__4197__auto__;
return goog.typeOf(G__5900);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5902 = x__4197__auto__;
return goog.typeOf(G__5902);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5904 = x__4197__auto__;
return goog.typeOf(G__5904);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5906 = x__4197__auto__;
return goog.typeOf(G__5906);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5908 = x__4197__auto__;
return goog.typeOf(G__5908);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5910 = x__4197__auto__;
return goog.typeOf(G__5910);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5912 = x__4197__auto__;
return goog.typeOf(G__5912);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5914 = x__4197__auto__;
return goog.typeOf(G__5914);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5916 = x__4197__auto__;
return goog.typeOf(G__5916);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5918 = x__4197__auto__;
return goog.typeOf(G__5918);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5920 = x__4197__auto__;
return goog.typeOf(G__5920);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5922 = x__4197__auto__;
return goog.typeOf(G__5922);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5924 = x__4197__auto__;
return goog.typeOf(G__5924);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5926 = x__4197__auto__;
return goog.typeOf(G__5926);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._invoke[(function (){var G__5928 = x__4197__auto__;
return goog.typeOf(G__5928);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._invoke["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj5930 = {};
return obj5930;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3541__auto__ = value;
if(and__3541__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3541__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4197__auto__ = (((value == null))?null:value);
return (function (){var or__3553__auto__ = (cljs.core._clone[(function (){var G__5934 = x__4197__auto__;
return goog.typeOf(G__5934);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._clone["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj5936 = {};
return obj5936;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._count[(function (){var G__5940 = x__4197__auto__;
return goog.typeOf(G__5940);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._count["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj5942 = {};
return obj5942;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._empty[(function (){var G__5946 = x__4197__auto__;
return goog.typeOf(G__5946);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._empty["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj5948 = {};
return obj5948;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._conj[(function (){var G__5952 = x__4197__auto__;
return goog.typeOf(G__5952);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._conj["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj5954 = {};
return obj5954;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._nth[(function (){var G__5960 = x__4197__auto__;
return goog.typeOf(G__5960);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._nth["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._nth[(function (){var G__5962 = x__4197__auto__;
return goog.typeOf(G__5962);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._nth["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj5964 = {};
return obj5964;
})();


cljs.core.ISeq = (function (){var obj5966 = {};
return obj5966;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._first[(function (){var G__5970 = x__4197__auto__;
return goog.typeOf(G__5970);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._first["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._rest[(function (){var G__5974 = x__4197__auto__;
return goog.typeOf(G__5974);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._rest["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj5976 = {};
return obj5976;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._next[(function (){var G__5980 = x__4197__auto__;
return goog.typeOf(G__5980);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._next["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj5982 = {};
return obj5982;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._lookup[(function (){var G__5988 = x__4197__auto__;
return goog.typeOf(G__5988);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._lookup["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._lookup[(function (){var G__5990 = x__4197__auto__;
return goog.typeOf(G__5990);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._lookup["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj5992 = {};
return obj5992;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__5996 = x__4197__auto__;
return goog.typeOf(G__5996);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._assoc[(function (){var G__6000 = x__4197__auto__;
return goog.typeOf(G__6000);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6002 = {};
return obj6002;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._dissoc[(function (){var G__6006 = x__4197__auto__;
return goog.typeOf(G__6006);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6008 = {};
return obj6008;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._key[(function (){var G__6012 = x__4197__auto__;
return goog.typeOf(G__6012);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._key["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._val[(function (){var G__6016 = x__4197__auto__;
return goog.typeOf(G__6016);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._val["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6018 = {};
return obj6018;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._disjoin[(function (){var G__6022 = x__4197__auto__;
return goog.typeOf(G__6022);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6024 = {};
return obj6024;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._peek[(function (){var G__6028 = x__4197__auto__;
return goog.typeOf(G__6028);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._peek["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._pop[(function (){var G__6032 = x__4197__auto__;
return goog.typeOf(G__6032);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._pop["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6034 = {};
return obj6034;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._assoc_n[(function (){var G__6038 = x__4197__auto__;
return goog.typeOf(G__6038);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6040 = {};
return obj6040;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._deref[(function (){var G__6044 = x__4197__auto__;
return goog.typeOf(G__6044);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._deref["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6046 = {};
return obj6046;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6050 = x__4197__auto__;
return goog.typeOf(G__6050);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6052 = {};
return obj6052;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._meta[(function (){var G__6056 = x__4197__auto__;
return goog.typeOf(G__6056);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._meta["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6058 = {};
return obj6058;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._with_meta[(function (){var G__6062 = x__4197__auto__;
return goog.typeOf(G__6062);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6064 = {};
return obj6064;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._reduce[(function (){var G__6070 = x__4197__auto__;
return goog.typeOf(G__6070);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reduce["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._reduce[(function (){var G__6072 = x__4197__auto__;
return goog.typeOf(G__6072);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reduce["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6074 = {};
return obj6074;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._kv_reduce[(function (){var G__6078 = x__4197__auto__;
return goog.typeOf(G__6078);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6080 = {};
return obj6080;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._equiv[(function (){var G__6084 = x__4197__auto__;
return goog.typeOf(G__6084);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._equiv["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6086 = {};
return obj6086;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._hash[(function (){var G__6090 = x__4197__auto__;
return goog.typeOf(G__6090);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._hash["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6092 = {};
return obj6092;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._seq[(function (){var G__6096 = x__4197__auto__;
return goog.typeOf(G__6096);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._seq["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6098 = {};
return obj6098;
})();


cljs.core.IList = (function (){var obj6100 = {};
return obj6100;
})();


cljs.core.IRecord = (function (){var obj6102 = {};
return obj6102;
})();


cljs.core.IReversible = (function (){var obj6104 = {};
return obj6104;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._rseq[(function (){var G__6108 = x__4197__auto__;
return goog.typeOf(G__6108);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._rseq["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6110 = {};
return obj6110;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._sorted_seq[(function (){var G__6114 = x__4197__auto__;
return goog.typeOf(G__6114);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6118 = x__4197__auto__;
return goog.typeOf(G__6118);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._entry_key[(function (){var G__6122 = x__4197__auto__;
return goog.typeOf(G__6122);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._comparator[(function (){var G__6126 = x__4197__auto__;
return goog.typeOf(G__6126);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._comparator["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6128 = {};
return obj6128;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3541__auto__ = writer;
if(and__3541__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3541__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4197__auto__ = (((writer == null))?null:writer);
return (function (){var or__3553__auto__ = (cljs.core._write[(function (){var G__6132 = x__4197__auto__;
return goog.typeOf(G__6132);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._write["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3541__auto__ = writer;
if(and__3541__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3541__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4197__auto__ = (((writer == null))?null:writer);
return (function (){var or__3553__auto__ = (cljs.core._flush[(function (){var G__6136 = x__4197__auto__;
return goog.typeOf(G__6136);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._flush["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6138 = {};
return obj6138;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._pr_writer[(function (){var G__6142 = x__4197__auto__;
return goog.typeOf(G__6142);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6144 = {};
return obj6144;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3541__auto__ = d;
if(and__3541__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3541__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4197__auto__ = (((d == null))?null:d);
return (function (){var or__3553__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6148 = x__4197__auto__;
return goog.typeOf(G__6148);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6150 = {};
return obj6150;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._notify_watches[(function (){var G__6154 = x__4197__auto__;
return goog.typeOf(G__6154);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._add_watch[(function (){var G__6158 = x__4197__auto__;
return goog.typeOf(G__6158);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3541__auto__ = this$;
if(and__3541__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3541__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4197__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3553__auto__ = (cljs.core._remove_watch[(function (){var G__6162 = x__4197__auto__;
return goog.typeOf(G__6162);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6164 = {};
return obj6164;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._as_transient[(function (){var G__6168 = x__4197__auto__;
return goog.typeOf(G__6168);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6170 = {};
return obj6170;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._conj_BANG_[(function (){var G__6174 = x__4197__auto__;
return goog.typeOf(G__6174);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6178 = x__4197__auto__;
return goog.typeOf(G__6178);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6180 = {};
return obj6180;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6184 = x__4197__auto__;
return goog.typeOf(G__6184);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6186 = {};
return obj6186;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6190 = x__4197__auto__;
return goog.typeOf(G__6190);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6192 = {};
return obj6192;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6196 = x__4197__auto__;
return goog.typeOf(G__6196);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._pop_BANG_[(function (){var G__6200 = x__4197__auto__;
return goog.typeOf(G__6200);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6202 = {};
return obj6202;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3541__auto__ = tcoll;
if(and__3541__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4197__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3553__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6206 = x__4197__auto__;
return goog.typeOf(G__6206);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6208 = {};
return obj6208;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._compare[(function (){var G__6212 = x__4197__auto__;
return goog.typeOf(G__6212);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._compare["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6214 = {};
return obj6214;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._drop_first[(function (){var G__6218 = x__4197__auto__;
return goog.typeOf(G__6218);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6220 = {};
return obj6220;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._chunked_first[(function (){var G__6224 = x__4197__auto__;
return goog.typeOf(G__6224);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._chunked_rest[(function (){var G__6228 = x__4197__auto__;
return goog.typeOf(G__6228);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6230 = {};
return obj6230;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._chunked_next[(function (){var G__6234 = x__4197__auto__;
return goog.typeOf(G__6234);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6236 = {};
return obj6236;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._name[(function (){var G__6240 = x__4197__auto__;
return goog.typeOf(G__6240);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._name["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._namespace[(function (){var G__6244 = x__4197__auto__;
return goog.typeOf(G__6244);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._namespace["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6246 = {};
return obj6246;
})();


cljs.core.IReset = (function (){var obj6248 = {};
return obj6248;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._reset_BANG_[(function (){var G__6252 = x__4197__auto__;
return goog.typeOf(G__6252);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6254 = {};
return obj6254;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__6264 = x__4197__auto__;
return goog.typeOf(G__6264);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__6266 = x__4197__auto__;
return goog.typeOf(G__6266);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__6268 = x__4197__auto__;
return goog.typeOf(G__6268);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._swap_BANG_[(function (){var G__6270 = x__4197__auto__;
return goog.typeOf(G__6270);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6272 = {};
return obj6272;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3541__auto__ = o;
if(and__3541__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3541__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4197__auto__ = (((o == null))?null:o);
return (function (){var or__3553__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6276 = x__4197__auto__;
return goog.typeOf(G__6276);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6278 = {};
return obj6278;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3541__auto__ = coll;
if(and__3541__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3541__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4197__auto__ = (((coll == null))?null:coll);
return (function (){var or__3553__auto__ = (cljs.core._iterator[(function (){var G__6282 = x__4197__auto__;
return goog.typeOf(G__6282);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._iterator["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6285 = (4294967295);
var G__6286 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6285,G__6286) : Math.imul.call(null,G__6285,G__6286));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__6289 = a;
var G__6290 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6289,G__6290) : Math.imul.call(null,G__6289,G__6290));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6291 = (i + (2));
var G__6292 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6291;
h1 = G__6292;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6294 = {};
return obj6294;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6295 = (i + (1));
var G__6296 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6295;
hash = G__6296;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6300 = {};
return obj6300;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6303 = o;
if(G__6303){
var bit__4227__auto__ = (G__6303.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4227__auto__) || (G__6303.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6304 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6304) : Math.floor.call(null,G__6304));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3541__auto__ = cljs.core.not(a.ns);
if(and__3541__auto__){
return b.ns;
} else {
return and__3541__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6311 = a.ns;
var G__6312 = b.ns;
return goog.array.defaultCompare(G__6311,G__6312);
})();
if(((0) === nsc)){
var G__6313 = a.name;
var G__6314 = b.name;
return goog.array.defaultCompare(G__6313,G__6314);
} else {
return nsc;
}
}
} else {
var G__6315 = a.name;
var G__6316 = b.name;
return goog.array.defaultCompare(G__6315,G__6316);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__3974__auto__ = self__._hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6318 = null;
var G__6318__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6318__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6318 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6318__2.call(this,self__,coll);
case 3:
return G__6318__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6318.cljs$core$IFn$_invoke$arity$2 = G__6318__2;
G__6318.cljs$core$IFn$_invoke$arity$3 = G__6318__3;
return G__6318;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6317){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6317)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6366 = null;
var G__6366__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6366__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6366__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6366__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6366__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6366__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6366__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6366__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6366__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6366__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6366__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6366__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6366__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6366__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6366__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6366__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6366__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6366__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6366__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6366__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6366__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6366__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6322 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6323 = a;
var G__6324 = b;
var G__6325 = c;
var G__6326 = d;
var G__6327 = e;
var G__6328 = f;
var G__6329 = g;
var G__6330 = h;
var G__6331 = i;
var G__6332 = j;
var G__6333 = k;
var G__6334 = l;
var G__6335 = m;
var G__6336 = n;
var G__6337 = o;
var G__6338 = p;
var G__6339 = q;
var G__6340 = r;
var G__6341 = s;
var G__6342 = t;
var G__6343 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343) : cljs.core.apply.call(null,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343));
});
G__6366 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6366__1.call(this,self__);
case 2:
return G__6366__2.call(this,self__,a);
case 3:
return G__6366__3.call(this,self__,a,b);
case 4:
return G__6366__4.call(this,self__,a,b,c);
case 5:
return G__6366__5.call(this,self__,a,b,c,d);
case 6:
return G__6366__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6366__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6366__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6366__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6366__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6366__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6366__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6366__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6366__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6366__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6366__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6366__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6366__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6366__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6366__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6366__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6366__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6366.cljs$core$IFn$_invoke$arity$1 = G__6366__1;
G__6366.cljs$core$IFn$_invoke$arity$2 = G__6366__2;
G__6366.cljs$core$IFn$_invoke$arity$3 = G__6366__3;
G__6366.cljs$core$IFn$_invoke$arity$4 = G__6366__4;
G__6366.cljs$core$IFn$_invoke$arity$5 = G__6366__5;
G__6366.cljs$core$IFn$_invoke$arity$6 = G__6366__6;
G__6366.cljs$core$IFn$_invoke$arity$7 = G__6366__7;
G__6366.cljs$core$IFn$_invoke$arity$8 = G__6366__8;
G__6366.cljs$core$IFn$_invoke$arity$9 = G__6366__9;
G__6366.cljs$core$IFn$_invoke$arity$10 = G__6366__10;
G__6366.cljs$core$IFn$_invoke$arity$11 = G__6366__11;
G__6366.cljs$core$IFn$_invoke$arity$12 = G__6366__12;
G__6366.cljs$core$IFn$_invoke$arity$13 = G__6366__13;
G__6366.cljs$core$IFn$_invoke$arity$14 = G__6366__14;
G__6366.cljs$core$IFn$_invoke$arity$15 = G__6366__15;
G__6366.cljs$core$IFn$_invoke$arity$16 = G__6366__16;
G__6366.cljs$core$IFn$_invoke$arity$17 = G__6366__17;
G__6366.cljs$core$IFn$_invoke$arity$18 = G__6366__18;
G__6366.cljs$core$IFn$_invoke$arity$19 = G__6366__19;
G__6366.cljs$core$IFn$_invoke$arity$20 = G__6366__20;
G__6366.cljs$core$IFn$_invoke$arity$21 = G__6366__21;
G__6366.cljs$core$IFn$_invoke$arity$22 = G__6366__22;
return G__6366;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6321){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6321)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6344 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6345 = a;
var G__6346 = b;
var G__6347 = c;
var G__6348 = d;
var G__6349 = e;
var G__6350 = f;
var G__6351 = g;
var G__6352 = h;
var G__6353 = i;
var G__6354 = j;
var G__6355 = k;
var G__6356 = l;
var G__6357 = m;
var G__6358 = n;
var G__6359 = o;
var G__6360 = p;
var G__6361 = q;
var G__6362 = r;
var G__6363 = s;
var G__6364 = t;
var G__6365 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363,G__6364,G__6365) : cljs.core.apply.call(null,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363,G__6364,G__6365));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6368 = x;
if(G__6368){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__6368.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6368.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6368);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6368);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6370 = value;
if(G__6370){
var bit__4234__auto__ = (G__6370.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4234__auto__) || (G__6370.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6370.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6370);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6370);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6372 = coll;
if(G__6372){
var bit__4227__auto__ = (G__6372.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4227__auto__) || (G__6372.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6374 = coll;
if(G__6374){
var bit__4227__auto__ = (G__6374.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4227__auto__) || (G__6374.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6376 = coll;
if(G__6376){
var bit__4227__auto__ = (G__6376.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4227__auto__) || (G__6376.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6378 = coll;
if(G__6378){
var bit__4227__auto__ = (G__6378.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4227__auto__) || (G__6378.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6383__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6384 = y;
var G__6385 = cljs.core.first(more);
var G__6386 = cljs.core.next(more);
x = G__6384;
y = G__6385;
more = G__6386;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6383 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6387__i = 0, G__6387__a = new Array(arguments.length -  2);
while (G__6387__i < G__6387__a.length) {G__6387__a[G__6387__i] = arguments[G__6387__i + 2]; ++G__6387__i;}
  more = new cljs.core.IndexedSeq(G__6387__a,0);
} 
return G__6383__delegate.call(this,x,y,more);};
G__6383.cljs$lang$maxFixedArity = 2;
G__6383.cljs$lang$applyTo = (function (arglist__6388){
var x = cljs.core.first(arglist__6388);
arglist__6388 = cljs.core.next(arglist__6388);
var y = cljs.core.first(arglist__6388);
var more = cljs.core.rest(arglist__6388);
return G__6383__delegate(x,y,more);
});
G__6383.cljs$core$IFn$_invoke$arity$variadic = G__6383__delegate;
return G__6383;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6389 = null;
if (arguments.length > 2) {
var G__6390__i = 0, G__6390__a = new Array(arguments.length -  2);
while (G__6390__i < G__6390__a.length) {G__6390__a[G__6390__i] = arguments[G__6390__i + 2]; ++G__6390__i;}
G__6389 = new cljs.core.IndexedSeq(G__6390__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6391 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6391) : cljs.core.es6_iterator_seq.call(null,G__6391));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6392 = (n + (1));
var G__6393 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6394 = cljs.core.next(coll__$1);
n = G__6392;
hash_code = G__6393;
coll__$1 = G__6394;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6395 = (n + (1));
var G__6396 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6397 = cljs.core.next(coll__$1);
n = G__6395;
hash_code = G__6396;
coll__$1 = G__6397;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6398 = o;
return goog.getUid(G__6398);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6400 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6400) : cljs.core.deref.call(null,G__6400));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6407 = val;
var G__6408 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6407,G__6408) : f.call(null,G__6407,G__6408));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6413 = nval;
var G__6414 = (n + (1));
val = G__6413;
n = G__6414;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6409 = val__$1;
var G__6410 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6409,G__6410) : f.call(null,G__6409,G__6410));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6415 = nval;
var G__6416 = (n + (1));
val__$1 = G__6415;
n = G__6416;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6411 = val__$1;
var G__6412 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6411,G__6412) : f.call(null,G__6411,G__6412));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6417 = nval;
var G__6418 = (n + (1));
val__$1 = G__6417;
n = G__6418;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6425 = val;
var G__6426 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6425,G__6426) : f.call(null,G__6425,G__6426));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6431 = nval;
var G__6432 = (n + (1));
val = G__6431;
n = G__6432;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6427 = val__$1;
var G__6428 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6427,G__6428) : f.call(null,G__6427,G__6428));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6433 = nval;
var G__6434 = (n + (1));
val__$1 = G__6433;
n = G__6434;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6429 = val__$1;
var G__6430 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6429,G__6430) : f.call(null,G__6429,G__6430));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6435 = nval;
var G__6436 = (n + (1));
val__$1 = G__6435;
n = G__6436;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6438 = x;
if(G__6438){
var bit__4234__auto__ = (G__6438.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4234__auto__) || (G__6438.cljs$core$ICounted$)){
return true;
} else {
if((!G__6438.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6438);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6438);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6440 = x;
if(G__6440){
var bit__4234__auto__ = (G__6440.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4234__auto__) || (G__6440.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6440.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6440);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6440);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6441 = coll__$1;
var G__6442 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6441,G__6442) : cljs.core.equiv_sequential.call(null,G__6441,G__6442));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6443 = o;
var G__6444 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6443,G__6444) : cljs.core.cons.call(null,G__6443,G__6444));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6447 = coll__$1;
var G__6448 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6447,G__6448) : cljs.core.equiv_sequential.call(null,G__6447,G__6448));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6449 = cljs.core.List.EMPTY;
var G__6450 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6449,G__6450) : cljs.core.with_meta.call(null,G__6449,G__6450));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6451 = f;
var G__6452 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6451,G__6452) : cljs.core.seq_reduce.call(null,G__6451,G__6452));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6453 = f;
var G__6454 = start;
var G__6455 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6453,G__6454,G__6455) : cljs.core.seq_reduce.call(null,G__6453,G__6454,G__6455));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6456 = o;
var G__6457 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6456,G__6457) : cljs.core.cons.call(null,G__6456,G__6457));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6458 = sn;
s = G__6458;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6463__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6464 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6465 = cljs.core.first(xs);
var G__6466 = cljs.core.next(xs);
coll = G__6464;
x = G__6465;
xs = G__6466;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6463 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6467__i = 0, G__6467__a = new Array(arguments.length -  2);
while (G__6467__i < G__6467__a.length) {G__6467__a[G__6467__i] = arguments[G__6467__i + 2]; ++G__6467__i;}
  xs = new cljs.core.IndexedSeq(G__6467__a,0);
} 
return G__6463__delegate.call(this,coll,x,xs);};
G__6463.cljs$lang$maxFixedArity = 2;
G__6463.cljs$lang$applyTo = (function (arglist__6468){
var coll = cljs.core.first(arglist__6468);
arglist__6468 = cljs.core.next(arglist__6468);
var x = cljs.core.first(arglist__6468);
var xs = cljs.core.rest(arglist__6468);
return G__6463__delegate(coll,x,xs);
});
G__6463.cljs$core$IFn$_invoke$arity$variadic = G__6463__delegate;
return G__6463;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6469 = null;
if (arguments.length > 2) {
var G__6470__i = 0, G__6470__a = new Array(arguments.length -  2);
while (G__6470__i < G__6470__a.length) {G__6470__a[G__6470__i] = arguments[G__6470__i + 2]; ++G__6470__i;}
G__6469 = new cljs.core.IndexedSeq(G__6470__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6471 = cljs.core.next(s);
var G__6472 = (acc + (1));
s = G__6471;
acc = G__6472;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6474 = coll;
if(G__6474){
var bit__4227__auto__ = (G__6474.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4227__auto__) || (G__6474.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6475 = cljs.core.next(coll);
var G__6476 = (n - (1));
coll = G__6475;
n = G__6476;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6477 = cljs.core.next(coll);
var G__6478 = (n - (1));
var G__6479 = not_found;
coll = G__6477;
n = G__6478;
not_found = G__6479;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6484 = coll;
if(G__6484){
var bit__4227__auto__ = (G__6484.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4227__auto__) || (G__6484.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6485 = coll;
if(G__6485){
var bit__4234__auto__ = (G__6485.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4234__auto__) || (G__6485.cljs$core$ISeq$)){
return true;
} else {
if((!G__6485.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6485);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6485);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6486 = coll;
if(G__6486){
var bit__4227__auto__ = (G__6486.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4227__auto__) || (G__6486.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6487 = coll;
if(G__6487){
var bit__4234__auto__ = (G__6487.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4234__auto__) || (G__6487.cljs$core$ISeq$)){
return true;
} else {
if((!G__6487.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6487);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6487);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6488 = (n__$1 - (1));
var G__6489 = cljs.core.rest(xs);
n__$1 = G__6488;
xs = G__6489;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6492 = o;
if(G__6492){
var bit__4227__auto__ = (G__6492.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4227__auto__) || (G__6492.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6493 = o;
if(G__6493){
var bit__4227__auto__ = (G__6493.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4227__auto__) || (G__6493.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6497__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6498 = ret;
var G__6499 = cljs.core.first(kvs);
var G__6500 = cljs.core.second(kvs);
var G__6501 = cljs.core.nnext(kvs);
coll = G__6498;
k = G__6499;
v = G__6500;
kvs = G__6501;
continue;
} else {
return ret;
}
break;
}
};
var G__6497 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6502__i = 0, G__6502__a = new Array(arguments.length -  3);
while (G__6502__i < G__6502__a.length) {G__6502__a[G__6502__i] = arguments[G__6502__i + 3]; ++G__6502__i;}
  kvs = new cljs.core.IndexedSeq(G__6502__a,0);
} 
return G__6497__delegate.call(this,coll,k,v,kvs);};
G__6497.cljs$lang$maxFixedArity = 3;
G__6497.cljs$lang$applyTo = (function (arglist__6503){
var coll = cljs.core.first(arglist__6503);
arglist__6503 = cljs.core.next(arglist__6503);
var k = cljs.core.first(arglist__6503);
arglist__6503 = cljs.core.next(arglist__6503);
var v = cljs.core.first(arglist__6503);
var kvs = cljs.core.rest(arglist__6503);
return G__6497__delegate(coll,k,v,kvs);
});
G__6497.cljs$core$IFn$_invoke$arity$variadic = G__6497__delegate;
return G__6497;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6504 = null;
if (arguments.length > 3) {
var G__6505__i = 0, G__6505__a = new Array(arguments.length -  3);
while (G__6505__i < G__6505__a.length) {G__6505__a[G__6505__i] = arguments[G__6505__i + 3]; ++G__6505__i;}
G__6504 = new cljs.core.IndexedSeq(G__6505__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6508__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6509 = ret;
var G__6510 = cljs.core.first(ks);
var G__6511 = cljs.core.next(ks);
coll = G__6509;
k = G__6510;
ks = G__6511;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6508 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6512__i = 0, G__6512__a = new Array(arguments.length -  2);
while (G__6512__i < G__6512__a.length) {G__6512__a[G__6512__i] = arguments[G__6512__i + 2]; ++G__6512__i;}
  ks = new cljs.core.IndexedSeq(G__6512__a,0);
} 
return G__6508__delegate.call(this,coll,k,ks);};
G__6508.cljs$lang$maxFixedArity = 2;
G__6508.cljs$lang$applyTo = (function (arglist__6513){
var coll = cljs.core.first(arglist__6513);
arglist__6513 = cljs.core.next(arglist__6513);
var k = cljs.core.first(arglist__6513);
var ks = cljs.core.rest(arglist__6513);
return G__6508__delegate(coll,k,ks);
});
G__6508.cljs$core$IFn$_invoke$arity$variadic = G__6508__delegate;
return G__6508;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6514 = null;
if (arguments.length > 2) {
var G__6515__i = 0, G__6515__a = new Array(arguments.length -  2);
while (G__6515__i < G__6515__a.length) {G__6515__a[G__6515__i] = arguments[G__6515__i + 2]; ++G__6515__i;}
G__6514 = new cljs.core.IndexedSeq(G__6515__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6514);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3553__auto__ = (function (){var G__6520 = f;
return goog.isFunction(G__6520);
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__6521 = f;
if(G__6521){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto____$1 = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
return G__6521.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6521.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6521);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6521);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__6987 = null;
var G__6987__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__6987__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6523 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6523) : self__.afn.call(null,G__6523));
});
var G__6987__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6524 = a;
var G__6525 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6524,G__6525) : self__.afn.call(null,G__6524,G__6525));
});
var G__6987__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6526 = a;
var G__6527 = b;
var G__6528 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6526,G__6527,G__6528) : self__.afn.call(null,G__6526,G__6527,G__6528));
});
var G__6987__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6529 = a;
var G__6530 = b;
var G__6531 = c;
var G__6532 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6529,G__6530,G__6531,G__6532) : self__.afn.call(null,G__6529,G__6530,G__6531,G__6532));
});
var G__6987__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6533 = a;
var G__6534 = b;
var G__6535 = c;
var G__6536 = d;
var G__6537 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6533,G__6534,G__6535,G__6536,G__6537) : self__.afn.call(null,G__6533,G__6534,G__6535,G__6536,G__6537));
});
var G__6987__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6538 = a;
var G__6539 = b;
var G__6540 = c;
var G__6541 = d;
var G__6542 = e;
var G__6543 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6538,G__6539,G__6540,G__6541,G__6542,G__6543) : self__.afn.call(null,G__6538,G__6539,G__6540,G__6541,G__6542,G__6543));
});
var G__6987__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6544 = a;
var G__6545 = b;
var G__6546 = c;
var G__6547 = d;
var G__6548 = e;
var G__6549 = f;
var G__6550 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6544,G__6545,G__6546,G__6547,G__6548,G__6549,G__6550) : self__.afn.call(null,G__6544,G__6545,G__6546,G__6547,G__6548,G__6549,G__6550));
});
var G__6987__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6551 = a;
var G__6552 = b;
var G__6553 = c;
var G__6554 = d;
var G__6555 = e;
var G__6556 = f;
var G__6557 = g;
var G__6558 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6551,G__6552,G__6553,G__6554,G__6555,G__6556,G__6557,G__6558) : self__.afn.call(null,G__6551,G__6552,G__6553,G__6554,G__6555,G__6556,G__6557,G__6558));
});
var G__6987__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6559 = a;
var G__6560 = b;
var G__6561 = c;
var G__6562 = d;
var G__6563 = e;
var G__6564 = f;
var G__6565 = g;
var G__6566 = h;
var G__6567 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6559,G__6560,G__6561,G__6562,G__6563,G__6564,G__6565,G__6566,G__6567) : self__.afn.call(null,G__6559,G__6560,G__6561,G__6562,G__6563,G__6564,G__6565,G__6566,G__6567));
});
var G__6987__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6568 = a;
var G__6569 = b;
var G__6570 = c;
var G__6571 = d;
var G__6572 = e;
var G__6573 = f;
var G__6574 = g;
var G__6575 = h;
var G__6576 = i;
var G__6577 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6568,G__6569,G__6570,G__6571,G__6572,G__6573,G__6574,G__6575,G__6576,G__6577) : self__.afn.call(null,G__6568,G__6569,G__6570,G__6571,G__6572,G__6573,G__6574,G__6575,G__6576,G__6577));
});
var G__6987__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6578 = a;
var G__6579 = b;
var G__6580 = c;
var G__6581 = d;
var G__6582 = e;
var G__6583 = f;
var G__6584 = g;
var G__6585 = h;
var G__6586 = i;
var G__6587 = j;
var G__6588 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6578,G__6579,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587,G__6588) : self__.afn.call(null,G__6578,G__6579,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587,G__6588));
});
var G__6987__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6589 = a;
var G__6590 = b;
var G__6591 = c;
var G__6592 = d;
var G__6593 = e;
var G__6594 = f;
var G__6595 = g;
var G__6596 = h;
var G__6597 = i;
var G__6598 = j;
var G__6599 = k;
var G__6600 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600) : self__.afn.call(null,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600));
});
var G__6987__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6601 = a;
var G__6602 = b;
var G__6603 = c;
var G__6604 = d;
var G__6605 = e;
var G__6606 = f;
var G__6607 = g;
var G__6608 = h;
var G__6609 = i;
var G__6610 = j;
var G__6611 = k;
var G__6612 = l;
var G__6613 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6601,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612,G__6613) : self__.afn.call(null,G__6601,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612,G__6613));
});
var G__6987__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6614 = a;
var G__6615 = b;
var G__6616 = c;
var G__6617 = d;
var G__6618 = e;
var G__6619 = f;
var G__6620 = g;
var G__6621 = h;
var G__6622 = i;
var G__6623 = j;
var G__6624 = k;
var G__6625 = l;
var G__6626 = m;
var G__6627 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6614,G__6615,G__6616,G__6617,G__6618,G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627) : self__.afn.call(null,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627));
});
var G__6987__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6628 = a;
var G__6629 = b;
var G__6630 = c;
var G__6631 = d;
var G__6632 = e;
var G__6633 = f;
var G__6634 = g;
var G__6635 = h;
var G__6636 = i;
var G__6637 = j;
var G__6638 = k;
var G__6639 = l;
var G__6640 = m;
var G__6641 = n;
var G__6642 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6628,G__6629,G__6630,G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642) : self__.afn.call(null,G__6628,G__6629,G__6630,G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642));
});
var G__6987__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6643 = a;
var G__6644 = b;
var G__6645 = c;
var G__6646 = d;
var G__6647 = e;
var G__6648 = f;
var G__6649 = g;
var G__6650 = h;
var G__6651 = i;
var G__6652 = j;
var G__6653 = k;
var G__6654 = l;
var G__6655 = m;
var G__6656 = n;
var G__6657 = o;
var G__6658 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658) : self__.afn.call(null,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658));
});
var G__6987__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6659 = a;
var G__6660 = b;
var G__6661 = c;
var G__6662 = d;
var G__6663 = e;
var G__6664 = f;
var G__6665 = g;
var G__6666 = h;
var G__6667 = i;
var G__6668 = j;
var G__6669 = k;
var G__6670 = l;
var G__6671 = m;
var G__6672 = n;
var G__6673 = o;
var G__6674 = p;
var G__6675 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675) : self__.afn.call(null,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675));
});
var G__6987__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6676 = a;
var G__6677 = b;
var G__6678 = c;
var G__6679 = d;
var G__6680 = e;
var G__6681 = f;
var G__6682 = g;
var G__6683 = h;
var G__6684 = i;
var G__6685 = j;
var G__6686 = k;
var G__6687 = l;
var G__6688 = m;
var G__6689 = n;
var G__6690 = o;
var G__6691 = p;
var G__6692 = q;
var G__6693 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686,G__6687,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693) : self__.afn.call(null,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686,G__6687,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693));
});
var G__6987__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6694 = a;
var G__6695 = b;
var G__6696 = c;
var G__6697 = d;
var G__6698 = e;
var G__6699 = f;
var G__6700 = g;
var G__6701 = h;
var G__6702 = i;
var G__6703 = j;
var G__6704 = k;
var G__6705 = l;
var G__6706 = m;
var G__6707 = n;
var G__6708 = o;
var G__6709 = p;
var G__6710 = q;
var G__6711 = r;
var G__6712 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700,G__6701,G__6702,G__6703,G__6704,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712) : self__.afn.call(null,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700,G__6701,G__6702,G__6703,G__6704,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712));
});
var G__6987__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6713 = a;
var G__6714 = b;
var G__6715 = c;
var G__6716 = d;
var G__6717 = e;
var G__6718 = f;
var G__6719 = g;
var G__6720 = h;
var G__6721 = i;
var G__6722 = j;
var G__6723 = k;
var G__6724 = l;
var G__6725 = m;
var G__6726 = n;
var G__6727 = o;
var G__6728 = p;
var G__6729 = q;
var G__6730 = r;
var G__6731 = s;
var G__6732 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6713,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732) : self__.afn.call(null,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732));
});
var G__6987__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6733 = self__.afn;
var G__6734 = a;
var G__6735 = b;
var G__6736 = c;
var G__6737 = d;
var G__6738 = e;
var G__6739 = f;
var G__6740 = g;
var G__6741 = h;
var G__6742 = i;
var G__6743 = j;
var G__6744 = k;
var G__6745 = l;
var G__6746 = m;
var G__6747 = n;
var G__6748 = o;
var G__6749 = p;
var G__6750 = q;
var G__6751 = r;
var G__6752 = s;
var G__6753 = t;
var G__6754 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6733,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754) : cljs.core.apply.call(null,G__6733,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754));
});
G__6987 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6987__1.call(this,self__);
case 2:
return G__6987__2.call(this,self__,a);
case 3:
return G__6987__3.call(this,self__,a,b);
case 4:
return G__6987__4.call(this,self__,a,b,c);
case 5:
return G__6987__5.call(this,self__,a,b,c,d);
case 6:
return G__6987__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6987__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6987__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6987__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6987__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6987__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6987__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6987__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6987__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6987__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6987__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6987__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6987__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6987__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6987__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6987__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6987__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6987.cljs$core$IFn$_invoke$arity$1 = G__6987__1;
G__6987.cljs$core$IFn$_invoke$arity$2 = G__6987__2;
G__6987.cljs$core$IFn$_invoke$arity$3 = G__6987__3;
G__6987.cljs$core$IFn$_invoke$arity$4 = G__6987__4;
G__6987.cljs$core$IFn$_invoke$arity$5 = G__6987__5;
G__6987.cljs$core$IFn$_invoke$arity$6 = G__6987__6;
G__6987.cljs$core$IFn$_invoke$arity$7 = G__6987__7;
G__6987.cljs$core$IFn$_invoke$arity$8 = G__6987__8;
G__6987.cljs$core$IFn$_invoke$arity$9 = G__6987__9;
G__6987.cljs$core$IFn$_invoke$arity$10 = G__6987__10;
G__6987.cljs$core$IFn$_invoke$arity$11 = G__6987__11;
G__6987.cljs$core$IFn$_invoke$arity$12 = G__6987__12;
G__6987.cljs$core$IFn$_invoke$arity$13 = G__6987__13;
G__6987.cljs$core$IFn$_invoke$arity$14 = G__6987__14;
G__6987.cljs$core$IFn$_invoke$arity$15 = G__6987__15;
G__6987.cljs$core$IFn$_invoke$arity$16 = G__6987__16;
G__6987.cljs$core$IFn$_invoke$arity$17 = G__6987__17;
G__6987.cljs$core$IFn$_invoke$arity$18 = G__6987__18;
G__6987.cljs$core$IFn$_invoke$arity$19 = G__6987__19;
G__6987.cljs$core$IFn$_invoke$arity$20 = G__6987__20;
G__6987.cljs$core$IFn$_invoke$arity$21 = G__6987__21;
G__6987.cljs$core$IFn$_invoke$arity$22 = G__6987__22;
return G__6987;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6522){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6522)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6755 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6755) : self__.afn.call(null,G__6755));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6756 = a;
var G__6757 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6756,G__6757) : self__.afn.call(null,G__6756,G__6757));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6758 = a;
var G__6759 = b;
var G__6760 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6758,G__6759,G__6760) : self__.afn.call(null,G__6758,G__6759,G__6760));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6761 = a;
var G__6762 = b;
var G__6763 = c;
var G__6764 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6761,G__6762,G__6763,G__6764) : self__.afn.call(null,G__6761,G__6762,G__6763,G__6764));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6765 = a;
var G__6766 = b;
var G__6767 = c;
var G__6768 = d;
var G__6769 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6765,G__6766,G__6767,G__6768,G__6769) : self__.afn.call(null,G__6765,G__6766,G__6767,G__6768,G__6769));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6770 = a;
var G__6771 = b;
var G__6772 = c;
var G__6773 = d;
var G__6774 = e;
var G__6775 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6770,G__6771,G__6772,G__6773,G__6774,G__6775) : self__.afn.call(null,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6776 = a;
var G__6777 = b;
var G__6778 = c;
var G__6779 = d;
var G__6780 = e;
var G__6781 = f;
var G__6782 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782) : self__.afn.call(null,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6783 = a;
var G__6784 = b;
var G__6785 = c;
var G__6786 = d;
var G__6787 = e;
var G__6788 = f;
var G__6789 = g;
var G__6790 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6783,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790) : self__.afn.call(null,G__6783,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6791 = a;
var G__6792 = b;
var G__6793 = c;
var G__6794 = d;
var G__6795 = e;
var G__6796 = f;
var G__6797 = g;
var G__6798 = h;
var G__6799 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6791,G__6792,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798,G__6799) : self__.afn.call(null,G__6791,G__6792,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798,G__6799));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6800 = a;
var G__6801 = b;
var G__6802 = c;
var G__6803 = d;
var G__6804 = e;
var G__6805 = f;
var G__6806 = g;
var G__6807 = h;
var G__6808 = i;
var G__6809 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6800,G__6801,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808,G__6809) : self__.afn.call(null,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808,G__6809));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6810 = a;
var G__6811 = b;
var G__6812 = c;
var G__6813 = d;
var G__6814 = e;
var G__6815 = f;
var G__6816 = g;
var G__6817 = h;
var G__6818 = i;
var G__6819 = j;
var G__6820 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820) : self__.afn.call(null,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6821 = a;
var G__6822 = b;
var G__6823 = c;
var G__6824 = d;
var G__6825 = e;
var G__6826 = f;
var G__6827 = g;
var G__6828 = h;
var G__6829 = i;
var G__6830 = j;
var G__6831 = k;
var G__6832 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832) : self__.afn.call(null,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6833 = a;
var G__6834 = b;
var G__6835 = c;
var G__6836 = d;
var G__6837 = e;
var G__6838 = f;
var G__6839 = g;
var G__6840 = h;
var G__6841 = i;
var G__6842 = j;
var G__6843 = k;
var G__6844 = l;
var G__6845 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845) : self__.afn.call(null,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6846 = a;
var G__6847 = b;
var G__6848 = c;
var G__6849 = d;
var G__6850 = e;
var G__6851 = f;
var G__6852 = g;
var G__6853 = h;
var G__6854 = i;
var G__6855 = j;
var G__6856 = k;
var G__6857 = l;
var G__6858 = m;
var G__6859 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6846,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859) : self__.afn.call(null,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6860 = a;
var G__6861 = b;
var G__6862 = c;
var G__6863 = d;
var G__6864 = e;
var G__6865 = f;
var G__6866 = g;
var G__6867 = h;
var G__6868 = i;
var G__6869 = j;
var G__6870 = k;
var G__6871 = l;
var G__6872 = m;
var G__6873 = n;
var G__6874 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870,G__6871,G__6872,G__6873,G__6874) : self__.afn.call(null,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870,G__6871,G__6872,G__6873,G__6874));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6875 = a;
var G__6876 = b;
var G__6877 = c;
var G__6878 = d;
var G__6879 = e;
var G__6880 = f;
var G__6881 = g;
var G__6882 = h;
var G__6883 = i;
var G__6884 = j;
var G__6885 = k;
var G__6886 = l;
var G__6887 = m;
var G__6888 = n;
var G__6889 = o;
var G__6890 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6875,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889,G__6890) : self__.afn.call(null,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889,G__6890));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6891 = a;
var G__6892 = b;
var G__6893 = c;
var G__6894 = d;
var G__6895 = e;
var G__6896 = f;
var G__6897 = g;
var G__6898 = h;
var G__6899 = i;
var G__6900 = j;
var G__6901 = k;
var G__6902 = l;
var G__6903 = m;
var G__6904 = n;
var G__6905 = o;
var G__6906 = p;
var G__6907 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900,G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907) : self__.afn.call(null,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900,G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6908 = a;
var G__6909 = b;
var G__6910 = c;
var G__6911 = d;
var G__6912 = e;
var G__6913 = f;
var G__6914 = g;
var G__6915 = h;
var G__6916 = i;
var G__6917 = j;
var G__6918 = k;
var G__6919 = l;
var G__6920 = m;
var G__6921 = n;
var G__6922 = o;
var G__6923 = p;
var G__6924 = q;
var G__6925 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6908,G__6909,G__6910,G__6911,G__6912,G__6913,G__6914,G__6915,G__6916,G__6917,G__6918,G__6919,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925) : self__.afn.call(null,G__6908,G__6909,G__6910,G__6911,G__6912,G__6913,G__6914,G__6915,G__6916,G__6917,G__6918,G__6919,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6926 = a;
var G__6927 = b;
var G__6928 = c;
var G__6929 = d;
var G__6930 = e;
var G__6931 = f;
var G__6932 = g;
var G__6933 = h;
var G__6934 = i;
var G__6935 = j;
var G__6936 = k;
var G__6937 = l;
var G__6938 = m;
var G__6939 = n;
var G__6940 = o;
var G__6941 = p;
var G__6942 = q;
var G__6943 = r;
var G__6944 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944) : self__.afn.call(null,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__6945 = a;
var G__6946 = b;
var G__6947 = c;
var G__6948 = d;
var G__6949 = e;
var G__6950 = f;
var G__6951 = g;
var G__6952 = h;
var G__6953 = i;
var G__6954 = j;
var G__6955 = k;
var G__6956 = l;
var G__6957 = m;
var G__6958 = n;
var G__6959 = o;
var G__6960 = p;
var G__6961 = q;
var G__6962 = r;
var G__6963 = s;
var G__6964 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6945,G__6946,G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964) : self__.afn.call(null,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6965 = self__.afn;
var G__6966 = a;
var G__6967 = b;
var G__6968 = c;
var G__6969 = d;
var G__6970 = e;
var G__6971 = f;
var G__6972 = g;
var G__6973 = h;
var G__6974 = i;
var G__6975 = j;
var G__6976 = k;
var G__6977 = l;
var G__6978 = m;
var G__6979 = n;
var G__6980 = o;
var G__6981 = p;
var G__6982 = q;
var G__6983 = r;
var G__6984 = s;
var G__6985 = t;
var G__6986 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6965,G__6966,G__6967,G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986) : cljs.core.apply.call(null,G__6965,G__6966,G__6967,G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__6991 = o;
if(G__6991){
var bit__4234__auto__ = (G__6991.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4234__auto__) || (G__6991.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__6991.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6991);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6991);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3541__auto__ = !((o == null));
if(and__3541__auto__){
var G__6995 = o;
if(G__6995){
var bit__4234__auto__ = (G__6995.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4234__auto__) || (G__6995.cljs$core$IMeta$)){
return true;
} else {
if((!G__6995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6995);
}
} else {
return and__3541__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__6998__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6999 = ret;
var G__7000 = cljs.core.first(ks);
var G__7001 = cljs.core.next(ks);
coll = G__6999;
k = G__7000;
ks = G__7001;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6998 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7002__i = 0, G__7002__a = new Array(arguments.length -  2);
while (G__7002__i < G__7002__a.length) {G__7002__a[G__7002__i] = arguments[G__7002__i + 2]; ++G__7002__i;}
  ks = new cljs.core.IndexedSeq(G__7002__a,0);
} 
return G__6998__delegate.call(this,coll,k,ks);};
G__6998.cljs$lang$maxFixedArity = 2;
G__6998.cljs$lang$applyTo = (function (arglist__7003){
var coll = cljs.core.first(arglist__7003);
arglist__7003 = cljs.core.next(arglist__7003);
var k = cljs.core.first(arglist__7003);
var ks = cljs.core.rest(arglist__7003);
return G__6998__delegate(coll,k,ks);
});
G__6998.cljs$core$IFn$_invoke$arity$variadic = G__6998__delegate;
return G__6998;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7004 = null;
if (arguments.length > 2) {
var G__7005__i = 0, G__7005__a = new Array(arguments.length -  2);
while (G__7005__i < G__7005__a.length) {G__7005__a[G__7005__i] = arguments[G__7005__i + 2]; ++G__7005__i;}
G__7004 = new cljs.core.IndexedSeq(G__7005__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7007 = x;
if(G__7007){
var bit__4234__auto__ = (G__7007.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4234__auto__) || (G__7007.cljs$core$ICollection$)){
return true;
} else {
if((!G__7007.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7007);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7007);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7009 = x;
if(G__7009){
var bit__4234__auto__ = (G__7009.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4234__auto__) || (G__7009.cljs$core$ISet$)){
return true;
} else {
if((!G__7009.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7009);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7009);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7011 = x;
if(G__7011){
var bit__4234__auto__ = (G__7011.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4234__auto__) || (G__7011.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7011.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7011);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7011);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7013 = x;
if(G__7013){
var bit__4234__auto__ = (G__7013.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4234__auto__) || (G__7013.cljs$core$ISequential$)){
return true;
} else {
if((!G__7013.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7013);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7013);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7015 = x;
if(G__7015){
var bit__4234__auto__ = (G__7015.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4234__auto__) || (G__7015.cljs$core$ISorted$)){
return true;
} else {
if((!G__7015.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7015);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7015);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7017 = x;
if(G__7017){
var bit__4234__auto__ = (G__7017.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4234__auto__) || (G__7017.cljs$core$IReduce$)){
return true;
} else {
if((!G__7017.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7017);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7017);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7019 = x;
if(G__7019){
var bit__4234__auto__ = (G__7019.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4234__auto__) || (G__7019.cljs$core$IMap$)){
return true;
} else {
if((!G__7019.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7019);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7019);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7021 = x;
if(G__7021){
var bit__4234__auto__ = (G__7021.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4234__auto__) || (G__7021.cljs$core$IVector$)){
return true;
} else {
if((!G__7021.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7021);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7021);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7023 = x;
if(G__7023){
var bit__4227__auto__ = (G__7023.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4227__auto__) || (G__7023.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7029 = {};
return obj7029;
});
var js_obj__1 = (function() { 
var G__7032__delegate = function (keyvals){
var G__7030 = goog.object.create;
var G__7031 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7030,G__7031) : cljs.core.apply.call(null,G__7030,G__7031));
};
var G__7032 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7033__i = 0, G__7033__a = new Array(arguments.length -  0);
while (G__7033__i < G__7033__a.length) {G__7033__a[G__7033__i] = arguments[G__7033__i + 0]; ++G__7033__i;}
  keyvals = new cljs.core.IndexedSeq(G__7033__a,0);
} 
return G__7032__delegate.call(this,keyvals);};
G__7032.cljs$lang$maxFixedArity = 0;
G__7032.cljs$lang$applyTo = (function (arglist__7034){
var keyvals = cljs.core.seq(arglist__7034);
return G__7032__delegate(keyvals);
});
G__7032.cljs$core$IFn$_invoke$arity$variadic = G__7032__delegate;
return G__7032;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7035 = null;
if (arguments.length > 0) {
var G__7036__i = 0, G__7036__a = new Array(arguments.length -  0);
while (G__7036__i < G__7036__a.length) {G__7036__a[G__7036__i] = arguments[G__7036__i + 0]; ++G__7036__i;}
G__7035 = new cljs.core.IndexedSeq(G__7036__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7039_7041 = obj;
var G__7040_7042 = ((function (G__7039_7041,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7039_7041,keys))
;
goog.object.forEach(G__7039_7041,G__7040_7042);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7043 = (i__$1 + (1));
var G__7044 = (j__$1 + (1));
var G__7045 = (len__$1 - (1));
i__$1 = G__7043;
j__$1 = G__7044;
len__$1 = G__7045;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7046 = (i__$1 - (1));
var G__7047 = (j__$1 - (1));
var G__7048 = (len__$1 - (1));
i__$1 = G__7046;
j__$1 = G__7047;
len__$1 = G__7048;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7050 = {};
return obj7050;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7052 = s;
if(G__7052){
var bit__4234__auto__ = (G__7052.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4234__auto__) || (G__7052.cljs$core$ISeq$)){
return true;
} else {
if((!G__7052.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7052);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7052);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7054 = s;
if(G__7054){
var bit__4234__auto__ = (G__7054.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4234__auto__) || (G__7054.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7054.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7054);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7054);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3553__auto__ = cljs.core.fn_QMARK_(f);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var G__7058 = f;
if(G__7058){
var bit__4234__auto__ = (G__7058.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4234__auto__) || (G__7058.cljs$core$IFn$)){
return true;
} else {
if((!G__7058.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7058);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7058);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7071 = n;
return isNaN(G__7071);
})())) && (!((n === Infinity))) && (((function (){var G__7072 = n;
return parseFloat(G__7072);
})() === (function (){var G__7073 = n;
var G__7074 = (10);
return parseInt(G__7073,G__7074);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7075__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7076 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7077 = etc;
s = G__7076;
xs = G__7077;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7075 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7078__i = 0, G__7078__a = new Array(arguments.length -  2);
while (G__7078__i < G__7078__a.length) {G__7078__a[G__7078__i] = arguments[G__7078__i + 2]; ++G__7078__i;}
  more = new cljs.core.IndexedSeq(G__7078__a,0);
} 
return G__7075__delegate.call(this,x,y,more);};
G__7075.cljs$lang$maxFixedArity = 2;
G__7075.cljs$lang$applyTo = (function (arglist__7079){
var x = cljs.core.first(arglist__7079);
arglist__7079 = cljs.core.next(arglist__7079);
var y = cljs.core.first(arglist__7079);
var more = cljs.core.rest(arglist__7079);
return G__7075__delegate(x,y,more);
});
G__7075.cljs$core$IFn$_invoke$arity$variadic = G__7075__delegate;
return G__7075;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__7080 = null;
if (arguments.length > 2) {
var G__7081__i = 0, G__7081__a = new Array(arguments.length -  2);
while (G__7081__i < G__7081__a.length) {G__7081__a[G__7081__i] = arguments[G__7081__i + 2]; ++G__7081__i;}
G__7080 = new cljs.core.IndexedSeq(G__7081__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7080);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7085 = x;
if(G__7085){
var bit__4227__auto__ = (G__7085.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4227__auto__) || (G__7085.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7086 = x;
var G__7087 = y;
return goog.array.defaultCompare(G__7086,G__7087);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7092 = xs;
var G__7093 = ys;
var G__7094 = len;
var G__7095 = (n + (1));
xs = G__7092;
ys = G__7093;
len = G__7094;
n = G__7095;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7100 = x;
var G__7101 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7100,G__7101) : f.call(null,G__7100,G__7101));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7102 = y;
var G__7103 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7102,G__7103) : f.call(null,G__7102,G__7103));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7109 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7109) : cljs.core.to_array.call(null,G__7109));
})();
var G__7110_7112 = a;
var G__7111_7113 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7110_7112,G__7111_7113);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7119 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7119) : keyfn.call(null,G__7119));
})(),(function (){var G__7120 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7120) : keyfn.call(null,G__7120));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7126 = f;
var G__7127 = cljs.core.first(s);
var G__7128 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7126,G__7127,G__7128) : cljs.core.reduce.call(null,G__7126,G__7127,G__7128));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7129 = val__$1;
var G__7130 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7129,G__7130) : f.call(null,G__7129,G__7130));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7131 = nval;
var G__7132 = cljs.core.next(coll__$1);
val__$1 = G__7131;
coll__$1 = G__7132;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__7136 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7136) : cljs.core.to_array.call(null,G__7136));
})();
var G__7137_7139 = a;
goog.array.shuffle(G__7137_7139);

var G__7138 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7138) : cljs.core.vec.call(null,G__7138));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__7142 = coll;
if(G__7142){
var bit__4227__auto__ = (G__7142.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4227__auto__) || (G__7142.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__7143 = coll;
if(G__7143){
var bit__4227__auto__ = (G__7143.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4227__auto__) || (G__7143.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__7152 = null;
var G__7152__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7152__1 = (function (x){
var G__7149 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7149) : cf.call(null,G__7149));
});
var G__7152__2 = (function (x,y){
var G__7150 = x;
var G__7151 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7150,G__7151) : f.call(null,G__7150,G__7151));
});
G__7152 = function(x,y){
switch(arguments.length){
case 0:
return G__7152__0.call(this);
case 1:
return G__7152__1.call(this,x);
case 2:
return G__7152__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7152.cljs$core$IFn$_invoke$arity$0 = G__7152__0;
G__7152.cljs$core$IFn$_invoke$arity$1 = G__7152__1;
G__7152.cljs$core$IFn$_invoke$arity$2 = G__7152__2;
return G__7152;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7159 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7159) : xform.call(null,G__7159));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7160 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7160) : f__$1.call(null,G__7160));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__7161__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__7161 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7162__i = 0, G__7162__a = new Array(arguments.length -  2);
while (G__7162__i < G__7162__a.length) {G__7162__a[G__7162__i] = arguments[G__7162__i + 2]; ++G__7162__i;}
  more = new cljs.core.IndexedSeq(G__7162__a,0);
} 
return G__7161__delegate.call(this,x,y,more);};
G__7161.cljs$lang$maxFixedArity = 2;
G__7161.cljs$lang$applyTo = (function (arglist__7163){
var x = cljs.core.first(arglist__7163);
arglist__7163 = cljs.core.next(arglist__7163);
var y = cljs.core.first(arglist__7163);
var more = cljs.core.rest(arglist__7163);
return G__7161__delegate(x,y,more);
});
G__7161.cljs$core$IFn$_invoke$arity$variadic = G__7161__delegate;
return G__7161;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__7164 = null;
if (arguments.length > 2) {
var G__7165__i = 0, G__7165__a = new Array(arguments.length -  2);
while (G__7165__i < G__7165__a.length) {G__7165__a[G__7165__i] = arguments[G__7165__i + 2]; ++G__7165__i;}
G__7164 = new cljs.core.IndexedSeq(G__7165__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__7166__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__7166 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7167__i = 0, G__7167__a = new Array(arguments.length -  2);
while (G__7167__i < G__7167__a.length) {G__7167__a[G__7167__i] = arguments[G__7167__i + 2]; ++G__7167__i;}
  more = new cljs.core.IndexedSeq(G__7167__a,0);
} 
return G__7166__delegate.call(this,x,y,more);};
G__7166.cljs$lang$maxFixedArity = 2;
G__7166.cljs$lang$applyTo = (function (arglist__7168){
var x = cljs.core.first(arglist__7168);
arglist__7168 = cljs.core.next(arglist__7168);
var y = cljs.core.first(arglist__7168);
var more = cljs.core.rest(arglist__7168);
return G__7166__delegate(x,y,more);
});
G__7166.cljs$core$IFn$_invoke$arity$variadic = G__7166__delegate;
return G__7166;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__7169 = null;
if (arguments.length > 2) {
var G__7170__i = 0, G__7170__a = new Array(arguments.length -  2);
while (G__7170__i < G__7170__a.length) {G__7170__a[G__7170__i] = arguments[G__7170__i + 2]; ++G__7170__i;}
G__7169 = new cljs.core.IndexedSeq(G__7170__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__7171__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__7171 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7172__i = 0, G__7172__a = new Array(arguments.length -  2);
while (G__7172__i < G__7172__a.length) {G__7172__a[G__7172__i] = arguments[G__7172__i + 2]; ++G__7172__i;}
  more = new cljs.core.IndexedSeq(G__7172__a,0);
} 
return G__7171__delegate.call(this,x,y,more);};
G__7171.cljs$lang$maxFixedArity = 2;
G__7171.cljs$lang$applyTo = (function (arglist__7173){
var x = cljs.core.first(arglist__7173);
arglist__7173 = cljs.core.next(arglist__7173);
var y = cljs.core.first(arglist__7173);
var more = cljs.core.rest(arglist__7173);
return G__7171__delegate(x,y,more);
});
G__7171.cljs$core$IFn$_invoke$arity$variadic = G__7171__delegate;
return G__7171;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__7174 = null;
if (arguments.length > 2) {
var G__7175__i = 0, G__7175__a = new Array(arguments.length -  2);
while (G__7175__i < G__7175__a.length) {G__7175__a[G__7175__i] = arguments[G__7175__i + 2]; ++G__7175__i;}
G__7174 = new cljs.core.IndexedSeq(G__7175__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__7180__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7180 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7181__i = 0, G__7181__a = new Array(arguments.length -  2);
while (G__7181__i < G__7181__a.length) {G__7181__a[G__7181__i] = arguments[G__7181__i + 2]; ++G__7181__i;}
  more = new cljs.core.IndexedSeq(G__7181__a,0);
} 
return G__7180__delegate.call(this,x,y,more);};
G__7180.cljs$lang$maxFixedArity = 2;
G__7180.cljs$lang$applyTo = (function (arglist__7182){
var x = cljs.core.first(arglist__7182);
arglist__7182 = cljs.core.next(arglist__7182);
var y = cljs.core.first(arglist__7182);
var more = cljs.core.rest(arglist__7182);
return G__7180__delegate(x,y,more);
});
G__7180.cljs$core$IFn$_invoke$arity$variadic = G__7180__delegate;
return G__7180;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__7183 = null;
if (arguments.length > 2) {
var G__7184__i = 0, G__7184__a = new Array(arguments.length -  2);
while (G__7184__i < G__7184__a.length) {G__7184__a[G__7184__i] = arguments[G__7184__i + 2]; ++G__7184__i;}
G__7183 = new cljs.core.IndexedSeq(G__7184__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__7185__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7186 = y;
var G__7187 = cljs.core.first(more);
var G__7188 = cljs.core.next(more);
x = G__7186;
y = G__7187;
more = G__7188;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7185 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7189__i = 0, G__7189__a = new Array(arguments.length -  2);
while (G__7189__i < G__7189__a.length) {G__7189__a[G__7189__i] = arguments[G__7189__i + 2]; ++G__7189__i;}
  more = new cljs.core.IndexedSeq(G__7189__a,0);
} 
return G__7185__delegate.call(this,x,y,more);};
G__7185.cljs$lang$maxFixedArity = 2;
G__7185.cljs$lang$applyTo = (function (arglist__7190){
var x = cljs.core.first(arglist__7190);
arglist__7190 = cljs.core.next(arglist__7190);
var y = cljs.core.first(arglist__7190);
var more = cljs.core.rest(arglist__7190);
return G__7185__delegate(x,y,more);
});
G__7185.cljs$core$IFn$_invoke$arity$variadic = G__7185__delegate;
return G__7185;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__7191 = null;
if (arguments.length > 2) {
var G__7192__i = 0, G__7192__a = new Array(arguments.length -  2);
while (G__7192__i < G__7192__a.length) {G__7192__a[G__7192__i] = arguments[G__7192__i + 2]; ++G__7192__i;}
G__7191 = new cljs.core.IndexedSeq(G__7192__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__7193__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7194 = y;
var G__7195 = cljs.core.first(more);
var G__7196 = cljs.core.next(more);
x = G__7194;
y = G__7195;
more = G__7196;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7193 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7197__i = 0, G__7197__a = new Array(arguments.length -  2);
while (G__7197__i < G__7197__a.length) {G__7197__a[G__7197__i] = arguments[G__7197__i + 2]; ++G__7197__i;}
  more = new cljs.core.IndexedSeq(G__7197__a,0);
} 
return G__7193__delegate.call(this,x,y,more);};
G__7193.cljs$lang$maxFixedArity = 2;
G__7193.cljs$lang$applyTo = (function (arglist__7198){
var x = cljs.core.first(arglist__7198);
arglist__7198 = cljs.core.next(arglist__7198);
var y = cljs.core.first(arglist__7198);
var more = cljs.core.rest(arglist__7198);
return G__7193__delegate(x,y,more);
});
G__7193.cljs$core$IFn$_invoke$arity$variadic = G__7193__delegate;
return G__7193;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__7199 = null;
if (arguments.length > 2) {
var G__7200__i = 0, G__7200__a = new Array(arguments.length -  2);
while (G__7200__i < G__7200__a.length) {G__7200__a[G__7200__i] = arguments[G__7200__i + 2]; ++G__7200__i;}
G__7199 = new cljs.core.IndexedSeq(G__7200__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__7201__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7202 = y;
var G__7203 = cljs.core.first(more);
var G__7204 = cljs.core.next(more);
x = G__7202;
y = G__7203;
more = G__7204;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7201 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7205__i = 0, G__7205__a = new Array(arguments.length -  2);
while (G__7205__i < G__7205__a.length) {G__7205__a[G__7205__i] = arguments[G__7205__i + 2]; ++G__7205__i;}
  more = new cljs.core.IndexedSeq(G__7205__a,0);
} 
return G__7201__delegate.call(this,x,y,more);};
G__7201.cljs$lang$maxFixedArity = 2;
G__7201.cljs$lang$applyTo = (function (arglist__7206){
var x = cljs.core.first(arglist__7206);
arglist__7206 = cljs.core.next(arglist__7206);
var y = cljs.core.first(arglist__7206);
var more = cljs.core.rest(arglist__7206);
return G__7201__delegate(x,y,more);
});
G__7201.cljs$core$IFn$_invoke$arity$variadic = G__7201__delegate;
return G__7201;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__7207 = null;
if (arguments.length > 2) {
var G__7208__i = 0, G__7208__a = new Array(arguments.length -  2);
while (G__7208__i < G__7208__a.length) {G__7208__a[G__7208__i] = arguments[G__7208__i + 2]; ++G__7208__i;}
G__7207 = new cljs.core.IndexedSeq(G__7208__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__7209__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7210 = y;
var G__7211 = cljs.core.first(more);
var G__7212 = cljs.core.next(more);
x = G__7210;
y = G__7211;
more = G__7212;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7213__i = 0, G__7213__a = new Array(arguments.length -  2);
while (G__7213__i < G__7213__a.length) {G__7213__a[G__7213__i] = arguments[G__7213__i + 2]; ++G__7213__i;}
  more = new cljs.core.IndexedSeq(G__7213__a,0);
} 
return G__7209__delegate.call(this,x,y,more);};
G__7209.cljs$lang$maxFixedArity = 2;
G__7209.cljs$lang$applyTo = (function (arglist__7214){
var x = cljs.core.first(arglist__7214);
arglist__7214 = cljs.core.next(arglist__7214);
var y = cljs.core.first(arglist__7214);
var more = cljs.core.rest(arglist__7214);
return G__7209__delegate(x,y,more);
});
G__7209.cljs$core$IFn$_invoke$arity$variadic = G__7209__delegate;
return G__7209;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__7215 = null;
if (arguments.length > 2) {
var G__7216__i = 0, G__7216__a = new Array(arguments.length -  2);
while (G__7216__i < G__7216__a.length) {G__7216__a[G__7216__i] = arguments[G__7216__i + 2]; ++G__7216__i;}
G__7215 = new cljs.core.IndexedSeq(G__7216__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3870__auto__ = x;
var y__3871__auto__ = y;
return ((x__3870__auto__ > y__3871__auto__) ? x__3870__auto__ : y__3871__auto__);
});
var max__3 = (function() { 
var G__7217__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3870__auto__ = x;
var y__3871__auto__ = y;
return ((x__3870__auto__ > y__3871__auto__) ? x__3870__auto__ : y__3871__auto__);
})(),more);
};
var G__7217 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7218__i = 0, G__7218__a = new Array(arguments.length -  2);
while (G__7218__i < G__7218__a.length) {G__7218__a[G__7218__i] = arguments[G__7218__i + 2]; ++G__7218__i;}
  more = new cljs.core.IndexedSeq(G__7218__a,0);
} 
return G__7217__delegate.call(this,x,y,more);};
G__7217.cljs$lang$maxFixedArity = 2;
G__7217.cljs$lang$applyTo = (function (arglist__7219){
var x = cljs.core.first(arglist__7219);
arglist__7219 = cljs.core.next(arglist__7219);
var y = cljs.core.first(arglist__7219);
var more = cljs.core.rest(arglist__7219);
return G__7217__delegate(x,y,more);
});
G__7217.cljs$core$IFn$_invoke$arity$variadic = G__7217__delegate;
return G__7217;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__7220 = null;
if (arguments.length > 2) {
var G__7221__i = 0, G__7221__a = new Array(arguments.length -  2);
while (G__7221__i < G__7221__a.length) {G__7221__a[G__7221__i] = arguments[G__7221__i + 2]; ++G__7221__i;}
G__7220 = new cljs.core.IndexedSeq(G__7221__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3877__auto__ = x;
var y__3878__auto__ = y;
return ((x__3877__auto__ < y__3878__auto__) ? x__3877__auto__ : y__3878__auto__);
});
var min__3 = (function() { 
var G__7222__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3877__auto__ = x;
var y__3878__auto__ = y;
return ((x__3877__auto__ < y__3878__auto__) ? x__3877__auto__ : y__3878__auto__);
})(),more);
};
var G__7222 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7223__i = 0, G__7223__a = new Array(arguments.length -  2);
while (G__7223__i < G__7223__a.length) {G__7223__a[G__7223__i] = arguments[G__7223__i + 2]; ++G__7223__i;}
  more = new cljs.core.IndexedSeq(G__7223__a,0);
} 
return G__7222__delegate.call(this,x,y,more);};
G__7222.cljs$lang$maxFixedArity = 2;
G__7222.cljs$lang$applyTo = (function (arglist__7224){
var x = cljs.core.first(arglist__7224);
arglist__7224 = cljs.core.next(arglist__7224);
var y = cljs.core.first(arglist__7224);
var more = cljs.core.rest(arglist__7224);
return G__7222__delegate(x,y,more);
});
G__7222.cljs$core$IFn$_invoke$arity$variadic = G__7222__delegate;
return G__7222;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__7225 = null;
if (arguments.length > 2) {
var G__7226__i = 0, G__7226__a = new Array(arguments.length -  2);
while (G__7226__i < G__7226__a.length) {G__7226__a[G__7226__i] = arguments[G__7226__i + 2]; ++G__7226__i;}
G__7225 = new cljs.core.IndexedSeq(G__7226__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__7227__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__7227 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7228__i = 0, G__7228__a = new Array(arguments.length -  2);
while (G__7228__i < G__7228__a.length) {G__7228__a[G__7228__i] = arguments[G__7228__i + 2]; ++G__7228__i;}
  more = new cljs.core.IndexedSeq(G__7228__a,0);
} 
return G__7227__delegate.call(this,x,y,more);};
G__7227.cljs$lang$maxFixedArity = 2;
G__7227.cljs$lang$applyTo = (function (arglist__7229){
var x = cljs.core.first(arglist__7229);
arglist__7229 = cljs.core.next(arglist__7229);
var y = cljs.core.first(arglist__7229);
var more = cljs.core.rest(arglist__7229);
return G__7227__delegate(x,y,more);
});
G__7227.cljs$core$IFn$_invoke$arity$variadic = G__7227__delegate;
return G__7227;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__7230 = null;
if (arguments.length > 2) {
var G__7231__i = 0, G__7231__a = new Array(arguments.length -  2);
while (G__7231__i < G__7231__a.length) {G__7231__a[G__7231__i] = arguments[G__7231__i + 2]; ++G__7231__i;}
G__7230 = new cljs.core.IndexedSeq(G__7231__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__7232__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__7232 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7233__i = 0, G__7233__a = new Array(arguments.length -  2);
while (G__7233__i < G__7233__a.length) {G__7233__a[G__7233__i] = arguments[G__7233__i + 2]; ++G__7233__i;}
  more = new cljs.core.IndexedSeq(G__7233__a,0);
} 
return G__7232__delegate.call(this,x,y,more);};
G__7232.cljs$lang$maxFixedArity = 2;
G__7232.cljs$lang$applyTo = (function (arglist__7234){
var x = cljs.core.first(arglist__7234);
arglist__7234 = cljs.core.next(arglist__7234);
var y = cljs.core.first(arglist__7234);
var more = cljs.core.rest(arglist__7234);
return G__7232__delegate(x,y,more);
});
G__7232.cljs$core$IFn$_invoke$arity$variadic = G__7232__delegate;
return G__7232;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__7235 = null;
if (arguments.length > 2) {
var G__7236__i = 0, G__7236__a = new Array(arguments.length -  2);
while (G__7236__i < G__7236__a.length) {G__7236__a[G__7236__i] = arguments[G__7236__i + 2]; ++G__7236__i;}
G__7235 = new cljs.core.IndexedSeq(G__7236__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__7241__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7241 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7242__i = 0, G__7242__a = new Array(arguments.length -  2);
while (G__7242__i < G__7242__a.length) {G__7242__a[G__7242__i] = arguments[G__7242__i + 2]; ++G__7242__i;}
  more = new cljs.core.IndexedSeq(G__7242__a,0);
} 
return G__7241__delegate.call(this,x,y,more);};
G__7241.cljs$lang$maxFixedArity = 2;
G__7241.cljs$lang$applyTo = (function (arglist__7243){
var x = cljs.core.first(arglist__7243);
arglist__7243 = cljs.core.next(arglist__7243);
var y = cljs.core.first(arglist__7243);
var more = cljs.core.rest(arglist__7243);
return G__7241__delegate(x,y,more);
});
G__7241.cljs$core$IFn$_invoke$arity$variadic = G__7241__delegate;
return G__7241;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__7244 = null;
if (arguments.length > 2) {
var G__7245__i = 0, G__7245__a = new Array(arguments.length -  2);
while (G__7245__i < G__7245__a.length) {G__7245__a[G__7245__i] = arguments[G__7245__i + 2]; ++G__7245__i;}
G__7244 = new cljs.core.IndexedSeq(G__7245__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__7246__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__7246 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7247__i = 0, G__7247__a = new Array(arguments.length -  2);
while (G__7247__i < G__7247__a.length) {G__7247__a[G__7247__i] = arguments[G__7247__i + 2]; ++G__7247__i;}
  more = new cljs.core.IndexedSeq(G__7247__a,0);
} 
return G__7246__delegate.call(this,x,y,more);};
G__7246.cljs$lang$maxFixedArity = 2;
G__7246.cljs$lang$applyTo = (function (arglist__7248){
var x = cljs.core.first(arglist__7248);
arglist__7248 = cljs.core.next(arglist__7248);
var y = cljs.core.first(arglist__7248);
var more = cljs.core.rest(arglist__7248);
return G__7246__delegate(x,y,more);
});
G__7246.cljs$core$IFn$_invoke$arity$variadic = G__7246__delegate;
return G__7246;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__7249 = null;
if (arguments.length > 2) {
var G__7250__i = 0, G__7250__a = new Array(arguments.length -  2);
while (G__7250__i < G__7250__a.length) {G__7250__a[G__7250__i] = arguments[G__7250__i + 2]; ++G__7250__i;}
G__7249 = new cljs.core.IndexedSeq(G__7250__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__7251__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__7251 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7252__i = 0, G__7252__a = new Array(arguments.length -  2);
while (G__7252__i < G__7252__a.length) {G__7252__a[G__7252__i] = arguments[G__7252__i + 2]; ++G__7252__i;}
  more = new cljs.core.IndexedSeq(G__7252__a,0);
} 
return G__7251__delegate.call(this,x,y,more);};
G__7251.cljs$lang$maxFixedArity = 2;
G__7251.cljs$lang$applyTo = (function (arglist__7253){
var x = cljs.core.first(arglist__7253);
arglist__7253 = cljs.core.next(arglist__7253);
var y = cljs.core.first(arglist__7253);
var more = cljs.core.rest(arglist__7253);
return G__7251__delegate(x,y,more);
});
G__7251.cljs$core$IFn$_invoke$arity$variadic = G__7251__delegate;
return G__7251;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__7254 = null;
if (arguments.length > 2) {
var G__7255__i = 0, G__7255__a = new Array(arguments.length -  2);
while (G__7255__i < G__7255__a.length) {G__7255__a[G__7255__i] = arguments[G__7255__i + 2]; ++G__7255__i;}
G__7254 = new cljs.core.IndexedSeq(G__7255__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__7258 = x;
var G__7259 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7258,G__7259) : cljs.core.mod.call(null,G__7258,G__7259));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__7260__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__7260 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7261__i = 0, G__7261__a = new Array(arguments.length -  2);
while (G__7261__i < G__7261__a.length) {G__7261__a[G__7261__i] = arguments[G__7261__i + 2]; ++G__7261__i;}
  more = new cljs.core.IndexedSeq(G__7261__a,0);
} 
return G__7260__delegate.call(this,x,y,more);};
G__7260.cljs$lang$maxFixedArity = 2;
G__7260.cljs$lang$applyTo = (function (arglist__7262){
var x = cljs.core.first(arglist__7262);
arglist__7262 = cljs.core.next(arglist__7262);
var y = cljs.core.first(arglist__7262);
var more = cljs.core.rest(arglist__7262);
return G__7260__delegate(x,y,more);
});
G__7260.cljs$core$IFn$_invoke$arity$variadic = G__7260__delegate;
return G__7260;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__7263 = null;
if (arguments.length > 2) {
var G__7264__i = 0, G__7264__a = new Array(arguments.length -  2);
while (G__7264__i < G__7264__a.length) {G__7264__a[G__7264__i] = arguments[G__7264__i + 2]; ++G__7264__i;}
G__7263 = new cljs.core.IndexedSeq(G__7264__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__7265__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__7265 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7266__i = 0, G__7266__a = new Array(arguments.length -  2);
while (G__7266__i < G__7266__a.length) {G__7266__a[G__7266__i] = arguments[G__7266__i + 2]; ++G__7266__i;}
  more = new cljs.core.IndexedSeq(G__7266__a,0);
} 
return G__7265__delegate.call(this,x,y,more);};
G__7265.cljs$lang$maxFixedArity = 2;
G__7265.cljs$lang$applyTo = (function (arglist__7267){
var x = cljs.core.first(arglist__7267);
arglist__7267 = cljs.core.next(arglist__7267);
var y = cljs.core.first(arglist__7267);
var more = cljs.core.rest(arglist__7267);
return G__7265__delegate(x,y,more);
});
G__7265.cljs$core$IFn$_invoke$arity$variadic = G__7265__delegate;
return G__7265;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__7268 = null;
if (arguments.length > 2) {
var G__7269__i = 0, G__7269__a = new Array(arguments.length -  2);
while (G__7269__i < G__7269__a.length) {G__7269__a[G__7269__i] = arguments[G__7269__i + 2]; ++G__7269__i;}
G__7268 = new cljs.core.IndexedSeq(G__7269__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7268);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__7272 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7272) : Math.floor.call(null,G__7272));
} else {
var G__7273 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7273) : Math.ceil.call(null,G__7273));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__7274__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__7274 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7275__i = 0, G__7275__a = new Array(arguments.length -  2);
while (G__7275__i < G__7275__a.length) {G__7275__a[G__7275__i] = arguments[G__7275__i + 2]; ++G__7275__i;}
  more = new cljs.core.IndexedSeq(G__7275__a,0);
} 
return G__7274__delegate.call(this,x,y,more);};
G__7274.cljs$lang$maxFixedArity = 2;
G__7274.cljs$lang$applyTo = (function (arglist__7276){
var x = cljs.core.first(arglist__7276);
arglist__7276 = cljs.core.next(arglist__7276);
var y = cljs.core.first(arglist__7276);
var more = cljs.core.rest(arglist__7276);
return G__7274__delegate(x,y,more);
});
G__7274.cljs$core$IFn$_invoke$arity$variadic = G__7274__delegate;
return G__7274;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__7277 = null;
if (arguments.length > 2) {
var G__7278__i = 0, G__7278__a = new Array(arguments.length -  2);
while (G__7278__i < G__7278__a.length) {G__7278__a[G__7278__i] = arguments[G__7278__i + 2]; ++G__7278__i;}
G__7277 = new cljs.core.IndexedSeq(G__7278__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__7279__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__7279 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7280__i = 0, G__7280__a = new Array(arguments.length -  2);
while (G__7280__i < G__7280__a.length) {G__7280__a[G__7280__i] = arguments[G__7280__i + 2]; ++G__7280__i;}
  more = new cljs.core.IndexedSeq(G__7280__a,0);
} 
return G__7279__delegate.call(this,x,y,more);};
G__7279.cljs$lang$maxFixedArity = 2;
G__7279.cljs$lang$applyTo = (function (arglist__7281){
var x = cljs.core.first(arglist__7281);
arglist__7281 = cljs.core.next(arglist__7281);
var y = cljs.core.first(arglist__7281);
var more = cljs.core.rest(arglist__7281);
return G__7279__delegate(x,y,more);
});
G__7279.cljs$core$IFn$_invoke$arity$variadic = G__7279__delegate;
return G__7279;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__7282 = null;
if (arguments.length > 2) {
var G__7283__i = 0, G__7283__a = new Array(arguments.length -  2);
while (G__7283__i < G__7283__a.length) {G__7283__a[G__7283__i] = arguments[G__7283__i + 2]; ++G__7283__i;}
G__7282 = new cljs.core.IndexedSeq(G__7283__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__7284__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__7284 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7285__i = 0, G__7285__a = new Array(arguments.length -  2);
while (G__7285__i < G__7285__a.length) {G__7285__a[G__7285__i] = arguments[G__7285__i + 2]; ++G__7285__i;}
  more = new cljs.core.IndexedSeq(G__7285__a,0);
} 
return G__7284__delegate.call(this,x,y,more);};
G__7284.cljs$lang$maxFixedArity = 2;
G__7284.cljs$lang$applyTo = (function (arglist__7286){
var x = cljs.core.first(arglist__7286);
arglist__7286 = cljs.core.next(arglist__7286);
var y = cljs.core.first(arglist__7286);
var more = cljs.core.rest(arglist__7286);
return G__7284__delegate(x,y,more);
});
G__7284.cljs$core$IFn$_invoke$arity$variadic = G__7284__delegate;
return G__7284;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__7287 = null;
if (arguments.length > 2) {
var G__7288__i = 0, G__7288__a = new Array(arguments.length -  2);
while (G__7288__i < G__7288__a.length) {G__7288__a[G__7288__i] = arguments[G__7288__i + 2]; ++G__7288__i;}
G__7287 = new cljs.core.IndexedSeq(G__7288__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__7289__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__7289 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7290__i = 0, G__7290__a = new Array(arguments.length -  2);
while (G__7290__i < G__7290__a.length) {G__7290__a[G__7290__i] = arguments[G__7290__i + 2]; ++G__7290__i;}
  more = new cljs.core.IndexedSeq(G__7290__a,0);
} 
return G__7289__delegate.call(this,x,y,more);};
G__7289.cljs$lang$maxFixedArity = 2;
G__7289.cljs$lang$applyTo = (function (arglist__7291){
var x = cljs.core.first(arglist__7291);
arglist__7291 = cljs.core.next(arglist__7291);
var y = cljs.core.first(arglist__7291);
var more = cljs.core.rest(arglist__7291);
return G__7289__delegate(x,y,more);
});
G__7289.cljs$core$IFn$_invoke$arity$variadic = G__7289__delegate;
return G__7289;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__7292 = null;
if (arguments.length > 2) {
var G__7293__i = 0, G__7293__a = new Array(arguments.length -  2);
while (G__7293__i < G__7293__a.length) {G__7293__a[G__7293__i] = arguments[G__7293__i + 2]; ++G__7293__i;}
G__7292 = new cljs.core.IndexedSeq(G__7293__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7298__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7299 = y;
var G__7300 = cljs.core.first(more);
var G__7301 = cljs.core.next(more);
x = G__7299;
y = G__7300;
more = G__7301;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7298 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7302__i = 0, G__7302__a = new Array(arguments.length -  2);
while (G__7302__i < G__7302__a.length) {G__7302__a[G__7302__i] = arguments[G__7302__i + 2]; ++G__7302__i;}
  more = new cljs.core.IndexedSeq(G__7302__a,0);
} 
return G__7298__delegate.call(this,x,y,more);};
G__7298.cljs$lang$maxFixedArity = 2;
G__7298.cljs$lang$applyTo = (function (arglist__7303){
var x = cljs.core.first(arglist__7303);
arglist__7303 = cljs.core.next(arglist__7303);
var y = cljs.core.first(arglist__7303);
var more = cljs.core.rest(arglist__7303);
return G__7298__delegate(x,y,more);
});
G__7298.cljs$core$IFn$_invoke$arity$variadic = G__7298__delegate;
return G__7298;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7304 = null;
if (arguments.length > 2) {
var G__7305__i = 0, G__7305__a = new Array(arguments.length -  2);
while (G__7305__i < G__7305__a.length) {G__7305__a[G__7305__i] = arguments[G__7305__i + 2]; ++G__7305__i;}
G__7304 = new cljs.core.IndexedSeq(G__7305__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7306 = (n__$1 - (1));
var G__7307 = cljs.core.next(xs);
n__$1 = G__7306;
xs = G__7307;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7311 = x;
return goog.string.buildString(G__7311);
}
});
var str__2 = (function() { 
var G__7312__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7313 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7314 = cljs.core.next(more);
sb = G__7313;
more = G__7314;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7312 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7315__i = 0, G__7315__a = new Array(arguments.length -  1);
while (G__7315__i < G__7315__a.length) {G__7315__a[G__7315__i] = arguments[G__7315__i + 1]; ++G__7315__i;}
  ys = new cljs.core.IndexedSeq(G__7315__a,0);
} 
return G__7312__delegate.call(this,x,ys);};
G__7312.cljs$lang$maxFixedArity = 1;
G__7312.cljs$lang$applyTo = (function (arglist__7316){
var x = cljs.core.first(arglist__7316);
var ys = cljs.core.rest(arglist__7316);
return G__7312__delegate(x,ys);
});
G__7312.cljs$core$IFn$_invoke$arity$variadic = G__7312__delegate;
return G__7312;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7317 = null;
if (arguments.length > 1) {
var G__7318__i = 0, G__7318__a = new Array(arguments.length -  1);
while (G__7318__i < G__7318__a.length) {G__7318__a[G__7318__i] = arguments[G__7318__i + 1]; ++G__7318__i;}
G__7317 = new cljs.core.IndexedSeq(G__7318__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7319 = cljs.core.next(xs);
var G__7320 = cljs.core.next(ys);
xs = G__7319;
ys = G__7320;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7321 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7322 = cljs.core.next(s);
res = G__7321;
s = G__7322;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7327 = ((h + (cljs.core.hash((function (){var G__7325 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7325) : cljs.core.key.call(null,G__7325));
})()) ^ cljs.core.hash((function (){var G__7326 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7326) : cljs.core.val.call(null,G__7326));
})()))) % (4503599627370496));
var G__7328 = cljs.core.next(s);
h = G__7327;
s = G__7328;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7329 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7330 = cljs.core.next(s__$1);
h = G__7329;
s__$1 = G__7330;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7341_7351 = cljs.core.seq(fn_map);
var chunk__7342_7352 = null;
var count__7343_7353 = (0);
var i__7344_7354 = (0);
while(true){
if((i__7344_7354 < count__7343_7353)){
var vec__7345_7355 = chunk__7342_7352.cljs$core$IIndexed$_nth$arity$2(null,i__7344_7354);
var key_name_7356 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7345_7355,(0),null);
var f_7357 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7345_7355,(1),null);
var str_name_7358 = (function (){var G__7346 = key_name_7356;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7346) : cljs.core.name.call(null,G__7346));
})();
(obj[str_name_7358] = f_7357);

var G__7359 = seq__7341_7351;
var G__7360 = chunk__7342_7352;
var G__7361 = count__7343_7353;
var G__7362 = (i__7344_7354 + (1));
seq__7341_7351 = G__7359;
chunk__7342_7352 = G__7360;
count__7343_7353 = G__7361;
i__7344_7354 = G__7362;
continue;
} else {
var temp__4126__auto___7363 = cljs.core.seq(seq__7341_7351);
if(temp__4126__auto___7363){
var seq__7341_7364__$1 = temp__4126__auto___7363;
if(cljs.core.chunked_seq_QMARK_(seq__7341_7364__$1)){
var c__4340__auto___7365 = (function (){var G__7347 = seq__7341_7364__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7347) : cljs.core.chunk_first.call(null,G__7347));
})();
var G__7366 = (function (){var G__7348 = seq__7341_7364__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7348) : cljs.core.chunk_rest.call(null,G__7348));
})();
var G__7367 = c__4340__auto___7365;
var G__7368 = cljs.core.count(c__4340__auto___7365);
var G__7369 = (0);
seq__7341_7351 = G__7366;
chunk__7342_7352 = G__7367;
count__7343_7353 = G__7368;
i__7344_7354 = G__7369;
continue;
} else {
var vec__7349_7370 = cljs.core.first(seq__7341_7364__$1);
var key_name_7371 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7349_7370,(0),null);
var f_7372 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7349_7370,(1),null);
var str_name_7373 = (function (){var G__7350 = key_name_7371;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7350) : cljs.core.name.call(null,G__7350));
})();
(obj[str_name_7373] = f_7372);

var G__7374 = cljs.core.next(seq__7341_7364__$1);
var G__7375 = null;
var G__7376 = (0);
var G__7377 = (0);
seq__7341_7351 = G__7374;
chunk__7342_7352 = G__7375;
count__7343_7353 = G__7376;
i__7344_7354 = G__7377;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7379 = coll;
if(G__7379){
var bit__4234__auto__ = (G__7379.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4234__auto__) || (G__7379.cljs$core$IReversible$)){
return true;
} else {
if((!G__7379.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7379);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7379);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7380 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7380;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7381 = (i - (1));
var G__7382 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7381;
r = G__7382;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7383__i = 0, G__7383__a = new Array(arguments.length -  0);
while (G__7383__i < G__7383__a.length) {G__7383__a[G__7383__i] = arguments[G__7383__i + 0]; ++G__7383__i;}
  xs = new cljs.core.IndexedSeq(G__7383__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7384){
var xs = cljs.core.seq(arglist__7384);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3553__auto__ = (coll == null);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var G__7388 = coll;
if(G__7388){
var bit__4227__auto__ = (G__7388.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4227__auto__) || (G__7388.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7390 = x;
if(G__7390){
var bit__4234__auto__ = (G__7390.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4234__auto__) || (G__7390.cljs$core$IList$)){
return true;
} else {
if((!G__7390.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7390);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7390);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3541__auto__ = cljs.core.not(a.ns);
if(and__3541__auto__){
return b.ns;
} else {
return and__3541__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7397 = a.ns;
var G__7398 = b.ns;
return goog.array.defaultCompare(G__7397,G__7398);
})();
if(((0) === nsc)){
var G__7399 = a.name;
var G__7400 = b.name;
return goog.array.defaultCompare(G__7399,G__7400);
} else {
return nsc;
}
}
} else {
var G__7401 = a.name;
var G__7402 = b.name;
return goog.array.defaultCompare(G__7401,G__7402);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__3974__auto__ = self__._hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7404 = null;
var G__7404__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7404__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7404 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7404__2.call(this,self__,coll);
case 3:
return G__7404__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7404.cljs$core$IFn$_invoke$arity$2 = G__7404__2;
G__7404.cljs$core$IFn$_invoke$arity$3 = G__7404__3;
return G__7404;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7403){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7403)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7406 = x;
if(G__7406){
var bit__4227__auto__ = (G__7406.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4227__auto__) || (G__7406.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7408 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7408) : cljs.core.name.call(null,G__7408));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7409 = ls.sval();
ls = G__7409;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7411 = s;
if(G__7411){
var bit__4227__auto__ = (G__7411.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4227__auto__) || (G__7411.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7412 = cljs.core.next(s__$1);
s__$1 = G__7412;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7413 = (0);
var xs_7414 = cljs.core.seq(coll);
while(true){
if(xs_7414){
(ret[i_7413] = cljs.core.to_array(cljs.core.first(xs_7414)));

var G__7415 = (i_7413 + (1));
var G__7416 = cljs.core.next(xs_7414);
i_7413 = G__7415;
xs_7414 = G__7416;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7419 = (i + (1));
var G__7420 = cljs.core.next(s__$1);
i = G__7419;
s__$1 = G__7420;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___7421 = size;
var i_7422 = (0);
while(true){
if((i_7422 < n__4440__auto___7421)){
(a[i_7422] = init_val_or_seq);

var G__7423 = (i_7422 + (1));
i_7422 = G__7423;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7426 = (i + (1));
var G__7427 = cljs.core.next(s__$1);
i = G__7426;
s__$1 = G__7427;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___7428 = size;
var i_7429 = (0);
while(true){
if((i_7429 < n__4440__auto___7428)){
(a[i_7429] = init_val_or_seq);

var G__7430 = (i_7429 + (1));
i_7429 = G__7430;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7433 = (i + (1));
var G__7434 = cljs.core.next(s__$1);
i = G__7433;
s__$1 = G__7434;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___7435 = size;
var i_7436 = (0);
while(true){
if((i_7436 < n__4440__auto___7435)){
(a[i_7436] = init_val_or_seq);

var G__7437 = (i_7436 + (1));
i_7436 = G__7437;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7440 = (i + (1));
var G__7441 = cljs.core.next(s__$1);
i = G__7440;
s__$1 = G__7441;
continue;
} else {
return a;
}
break;
}
} else {
var n__4440__auto___7442 = size;
var i_7443 = (0);
while(true){
if((i_7443 < n__4440__auto___7442)){
(a[i_7443] = init_val_or_seq);

var G__7444 = (i_7443 + (1));
i_7443 = G__7444;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7445 = cljs.core.next(s__$1);
var G__7446 = (i - (1));
var G__7447 = (sum + (1));
s__$1 = G__7445;
i = G__7446;
sum = G__7447;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7467__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7467 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7468__i = 0, G__7468__a = new Array(arguments.length -  2);
while (G__7468__i < G__7468__a.length) {G__7468__a[G__7468__i] = arguments[G__7468__i + 2]; ++G__7468__i;}
  zs = new cljs.core.IndexedSeq(G__7468__a,0);
} 
return G__7467__delegate.call(this,x,y,zs);};
G__7467.cljs$lang$maxFixedArity = 2;
G__7467.cljs$lang$applyTo = (function (arglist__7469){
var x = cljs.core.first(arglist__7469);
arglist__7469 = cljs.core.next(arglist__7469);
var y = cljs.core.first(arglist__7469);
var zs = cljs.core.rest(arglist__7469);
return G__7467__delegate(x,y,zs);
});
G__7467.cljs$core$IFn$_invoke$arity$variadic = G__7467__delegate;
return G__7467;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7470 = null;
if (arguments.length > 2) {
var G__7471__i = 0, G__7471__a = new Array(arguments.length -  2);
while (G__7471__i < G__7471__a.length) {G__7471__a[G__7471__i] = arguments[G__7471__i + 2]; ++G__7471__i;}
G__7470 = new cljs.core.IndexedSeq(G__7471__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7472__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7472 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7473__i = 0, G__7473__a = new Array(arguments.length -  4);
while (G__7473__i < G__7473__a.length) {G__7473__a[G__7473__i] = arguments[G__7473__i + 4]; ++G__7473__i;}
  more = new cljs.core.IndexedSeq(G__7473__a,0);
} 
return G__7472__delegate.call(this,a,b,c,d,more);};
G__7472.cljs$lang$maxFixedArity = 4;
G__7472.cljs$lang$applyTo = (function (arglist__7474){
var a = cljs.core.first(arglist__7474);
arglist__7474 = cljs.core.next(arglist__7474);
var b = cljs.core.first(arglist__7474);
arglist__7474 = cljs.core.next(arglist__7474);
var c = cljs.core.first(arglist__7474);
arglist__7474 = cljs.core.next(arglist__7474);
var d = cljs.core.first(arglist__7474);
var more = cljs.core.rest(arglist__7474);
return G__7472__delegate(a,b,c,d,more);
});
G__7472.cljs$core$IFn$_invoke$arity$variadic = G__7472__delegate;
return G__7472;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7475 = null;
if (arguments.length > 4) {
var G__7476__i = 0, G__7476__a = new Array(arguments.length -  4);
while (G__7476__i < G__7476__a.length) {G__7476__a[G__7476__i] = arguments[G__7476__i + 4]; ++G__7476__i;}
G__7475 = new cljs.core.IndexedSeq(G__7476__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7477__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7478 = ntcoll;
var G__7479 = cljs.core.first(vals);
var G__7480 = cljs.core.next(vals);
tcoll = G__7478;
val = G__7479;
vals = G__7480;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7477 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7481__i = 0, G__7481__a = new Array(arguments.length -  2);
while (G__7481__i < G__7481__a.length) {G__7481__a[G__7481__i] = arguments[G__7481__i + 2]; ++G__7481__i;}
  vals = new cljs.core.IndexedSeq(G__7481__a,0);
} 
return G__7477__delegate.call(this,tcoll,val,vals);};
G__7477.cljs$lang$maxFixedArity = 2;
G__7477.cljs$lang$applyTo = (function (arglist__7482){
var tcoll = cljs.core.first(arglist__7482);
arglist__7482 = cljs.core.next(arglist__7482);
var val = cljs.core.first(arglist__7482);
var vals = cljs.core.rest(arglist__7482);
return G__7477__delegate(tcoll,val,vals);
});
G__7477.cljs$core$IFn$_invoke$arity$variadic = G__7477__delegate;
return G__7477;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7483 = null;
if (arguments.length > 2) {
var G__7484__i = 0, G__7484__a = new Array(arguments.length -  2);
while (G__7484__i < G__7484__a.length) {G__7484__a[G__7484__i] = arguments[G__7484__i + 2]; ++G__7484__i;}
G__7483 = new cljs.core.IndexedSeq(G__7484__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7485__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7486 = ntcoll;
var G__7487 = cljs.core.first(kvs);
var G__7488 = cljs.core.second(kvs);
var G__7489 = cljs.core.nnext(kvs);
tcoll = G__7486;
key = G__7487;
val = G__7488;
kvs = G__7489;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7485 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7490__i = 0, G__7490__a = new Array(arguments.length -  3);
while (G__7490__i < G__7490__a.length) {G__7490__a[G__7490__i] = arguments[G__7490__i + 3]; ++G__7490__i;}
  kvs = new cljs.core.IndexedSeq(G__7490__a,0);
} 
return G__7485__delegate.call(this,tcoll,key,val,kvs);};
G__7485.cljs$lang$maxFixedArity = 3;
G__7485.cljs$lang$applyTo = (function (arglist__7491){
var tcoll = cljs.core.first(arglist__7491);
arglist__7491 = cljs.core.next(arglist__7491);
var key = cljs.core.first(arglist__7491);
arglist__7491 = cljs.core.next(arglist__7491);
var val = cljs.core.first(arglist__7491);
var kvs = cljs.core.rest(arglist__7491);
return G__7485__delegate(tcoll,key,val,kvs);
});
G__7485.cljs$core$IFn$_invoke$arity$variadic = G__7485__delegate;
return G__7485;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7492 = null;
if (arguments.length > 3) {
var G__7493__i = 0, G__7493__a = new Array(arguments.length -  3);
while (G__7493__i < G__7493__a.length) {G__7493__a[G__7493__i] = arguments[G__7493__i + 3]; ++G__7493__i;}
G__7492 = new cljs.core.IndexedSeq(G__7493__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7494__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7495 = ntcoll;
var G__7496 = cljs.core.first(ks);
var G__7497 = cljs.core.next(ks);
tcoll = G__7495;
key = G__7496;
ks = G__7497;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7494 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7498__i = 0, G__7498__a = new Array(arguments.length -  2);
while (G__7498__i < G__7498__a.length) {G__7498__a[G__7498__i] = arguments[G__7498__i + 2]; ++G__7498__i;}
  ks = new cljs.core.IndexedSeq(G__7498__a,0);
} 
return G__7494__delegate.call(this,tcoll,key,ks);};
G__7494.cljs$lang$maxFixedArity = 2;
G__7494.cljs$lang$applyTo = (function (arglist__7499){
var tcoll = cljs.core.first(arglist__7499);
arglist__7499 = cljs.core.next(arglist__7499);
var key = cljs.core.first(arglist__7499);
var ks = cljs.core.rest(arglist__7499);
return G__7494__delegate(tcoll,key,ks);
});
G__7494.cljs$core$IFn$_invoke$arity$variadic = G__7494__delegate;
return G__7494;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7500 = null;
if (arguments.length > 2) {
var G__7501__i = 0, G__7501__a = new Array(arguments.length -  2);
while (G__7501__i < G__7501__a.length) {G__7501__a[G__7501__i] = arguments[G__7501__i + 2]; ++G__7501__i;}
G__7500 = new cljs.core.IndexedSeq(G__7501__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7502__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7503 = ntcoll;
var G__7504 = cljs.core.first(vals);
var G__7505 = cljs.core.next(vals);
tcoll = G__7503;
val = G__7504;
vals = G__7505;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7502 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7506__i = 0, G__7506__a = new Array(arguments.length -  2);
while (G__7506__i < G__7506__a.length) {G__7506__a[G__7506__i] = arguments[G__7506__i + 2]; ++G__7506__i;}
  vals = new cljs.core.IndexedSeq(G__7506__a,0);
} 
return G__7502__delegate.call(this,tcoll,val,vals);};
G__7502.cljs$lang$maxFixedArity = 2;
G__7502.cljs$lang$applyTo = (function (arglist__7507){
var tcoll = cljs.core.first(arglist__7507);
arglist__7507 = cljs.core.next(arglist__7507);
var val = cljs.core.first(arglist__7507);
var vals = cljs.core.rest(arglist__7507);
return G__7502__delegate(tcoll,val,vals);
});
G__7502.cljs$core$IFn$_invoke$arity$variadic = G__7502__delegate;
return G__7502;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7508 = null;
if (arguments.length > 2) {
var G__7509__i = 0, G__7509__a = new Array(arguments.length -  2);
while (G__7509__i < G__7509__a.length) {G__7509__a[G__7509__i] = arguments[G__7509__i + 2]; ++G__7509__i;}
G__7508 = new cljs.core.IndexedSeq(G__7509__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4484 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4484);
} else {
var G__7720 = a4484;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7720) : f.call(null,G__7720));
}
} else {
var b4485 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4484,b4485);
} else {
var G__7721 = a4484;
var G__7722 = b4485;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7721,G__7722) : f.call(null,G__7721,G__7722));
}
} else {
var c4486 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4484,b4485,c4486);
} else {
var G__7723 = a4484;
var G__7724 = b4485;
var G__7725 = c4486;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7723,G__7724,G__7725) : f.call(null,G__7723,G__7724,G__7725));
}
} else {
var d4487 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4484,b4485,c4486,d4487);
} else {
var G__7726 = a4484;
var G__7727 = b4485;
var G__7728 = c4486;
var G__7729 = d4487;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7726,G__7727,G__7728,G__7729) : f.call(null,G__7726,G__7727,G__7728,G__7729));
}
} else {
var e4488 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4484,b4485,c4486,d4487,e4488);
} else {
var G__7730 = a4484;
var G__7731 = b4485;
var G__7732 = c4486;
var G__7733 = d4487;
var G__7734 = e4488;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7730,G__7731,G__7732,G__7733,G__7734) : f.call(null,G__7730,G__7731,G__7732,G__7733,G__7734));
}
} else {
var f4489 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4484,b4485,c4486,d4487,e4488,f4489);
} else {
var G__7735 = a4484;
var G__7736 = b4485;
var G__7737 = c4486;
var G__7738 = d4487;
var G__7739 = e4488;
var G__7740 = f4489;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7735,G__7736,G__7737,G__7738,G__7739,G__7740) : f.call(null,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740));
}
} else {
var g4490 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4484,b4485,c4486,d4487,e4488,f4489,g4490);
} else {
var G__7741 = a4484;
var G__7742 = b4485;
var G__7743 = c4486;
var G__7744 = d4487;
var G__7745 = e4488;
var G__7746 = f4489;
var G__7747 = g4490;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7741,G__7742,G__7743,G__7744,G__7745,G__7746,G__7747) : f.call(null,G__7741,G__7742,G__7743,G__7744,G__7745,G__7746,G__7747));
}
} else {
var h4491 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491);
} else {
var G__7748 = a4484;
var G__7749 = b4485;
var G__7750 = c4486;
var G__7751 = d4487;
var G__7752 = e4488;
var G__7753 = f4489;
var G__7754 = g4490;
var G__7755 = h4491;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7748,G__7749,G__7750,G__7751,G__7752,G__7753,G__7754,G__7755) : f.call(null,G__7748,G__7749,G__7750,G__7751,G__7752,G__7753,G__7754,G__7755));
}
} else {
var i4492 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492);
} else {
var G__7756 = a4484;
var G__7757 = b4485;
var G__7758 = c4486;
var G__7759 = d4487;
var G__7760 = e4488;
var G__7761 = f4489;
var G__7762 = g4490;
var G__7763 = h4491;
var G__7764 = i4492;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7756,G__7757,G__7758,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764) : f.call(null,G__7756,G__7757,G__7758,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764));
}
} else {
var j4493 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493);
} else {
var G__7765 = a4484;
var G__7766 = b4485;
var G__7767 = c4486;
var G__7768 = d4487;
var G__7769 = e4488;
var G__7770 = f4489;
var G__7771 = g4490;
var G__7772 = h4491;
var G__7773 = i4492;
var G__7774 = j4493;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7765,G__7766,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774) : f.call(null,G__7765,G__7766,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774));
}
} else {
var k4494 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494);
} else {
var G__7775 = a4484;
var G__7776 = b4485;
var G__7777 = c4486;
var G__7778 = d4487;
var G__7779 = e4488;
var G__7780 = f4489;
var G__7781 = g4490;
var G__7782 = h4491;
var G__7783 = i4492;
var G__7784 = j4493;
var G__7785 = k4494;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7775,G__7776,G__7777,G__7778,G__7779,G__7780,G__7781,G__7782,G__7783,G__7784,G__7785) : f.call(null,G__7775,G__7776,G__7777,G__7778,G__7779,G__7780,G__7781,G__7782,G__7783,G__7784,G__7785));
}
} else {
var l4495 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495);
} else {
var G__7786 = a4484;
var G__7787 = b4485;
var G__7788 = c4486;
var G__7789 = d4487;
var G__7790 = e4488;
var G__7791 = f4489;
var G__7792 = g4490;
var G__7793 = h4491;
var G__7794 = i4492;
var G__7795 = j4493;
var G__7796 = k4494;
var G__7797 = l4495;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797) : f.call(null,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797));
}
} else {
var m4496 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496);
} else {
var G__7798 = a4484;
var G__7799 = b4485;
var G__7800 = c4486;
var G__7801 = d4487;
var G__7802 = e4488;
var G__7803 = f4489;
var G__7804 = g4490;
var G__7805 = h4491;
var G__7806 = i4492;
var G__7807 = j4493;
var G__7808 = k4494;
var G__7809 = l4495;
var G__7810 = m4496;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810) : f.call(null,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810));
}
} else {
var n4497 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497);
} else {
var G__7811 = a4484;
var G__7812 = b4485;
var G__7813 = c4486;
var G__7814 = d4487;
var G__7815 = e4488;
var G__7816 = f4489;
var G__7817 = g4490;
var G__7818 = h4491;
var G__7819 = i4492;
var G__7820 = j4493;
var G__7821 = k4494;
var G__7822 = l4495;
var G__7823 = m4496;
var G__7824 = n4497;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7811,G__7812,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824) : f.call(null,G__7811,G__7812,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824));
}
} else {
var o4498 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498);
} else {
var G__7825 = a4484;
var G__7826 = b4485;
var G__7827 = c4486;
var G__7828 = d4487;
var G__7829 = e4488;
var G__7830 = f4489;
var G__7831 = g4490;
var G__7832 = h4491;
var G__7833 = i4492;
var G__7834 = j4493;
var G__7835 = k4494;
var G__7836 = l4495;
var G__7837 = m4496;
var G__7838 = n4497;
var G__7839 = o4498;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838,G__7839) : f.call(null,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838,G__7839));
}
} else {
var p4499 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499);
} else {
var G__7840 = a4484;
var G__7841 = b4485;
var G__7842 = c4486;
var G__7843 = d4487;
var G__7844 = e4488;
var G__7845 = f4489;
var G__7846 = g4490;
var G__7847 = h4491;
var G__7848 = i4492;
var G__7849 = j4493;
var G__7850 = k4494;
var G__7851 = l4495;
var G__7852 = m4496;
var G__7853 = n4497;
var G__7854 = o4498;
var G__7855 = p4499;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855) : f.call(null,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855));
}
} else {
var q4500 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500);
} else {
var G__7856 = a4484;
var G__7857 = b4485;
var G__7858 = c4486;
var G__7859 = d4487;
var G__7860 = e4488;
var G__7861 = f4489;
var G__7862 = g4490;
var G__7863 = h4491;
var G__7864 = i4492;
var G__7865 = j4493;
var G__7866 = k4494;
var G__7867 = l4495;
var G__7868 = m4496;
var G__7869 = n4497;
var G__7870 = o4498;
var G__7871 = p4499;
var G__7872 = q4500;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7856,G__7857,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872) : f.call(null,G__7856,G__7857,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872));
}
} else {
var r4501 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500,r4501);
} else {
var G__7873 = a4484;
var G__7874 = b4485;
var G__7875 = c4486;
var G__7876 = d4487;
var G__7877 = e4488;
var G__7878 = f4489;
var G__7879 = g4490;
var G__7880 = h4491;
var G__7881 = i4492;
var G__7882 = j4493;
var G__7883 = k4494;
var G__7884 = l4495;
var G__7885 = m4496;
var G__7886 = n4497;
var G__7887 = o4498;
var G__7888 = p4499;
var G__7889 = q4500;
var G__7890 = r4501;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890) : f.call(null,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890));
}
} else {
var s4502 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500,r4501,s4502);
} else {
var G__7891 = a4484;
var G__7892 = b4485;
var G__7893 = c4486;
var G__7894 = d4487;
var G__7895 = e4488;
var G__7896 = f4489;
var G__7897 = g4490;
var G__7898 = h4491;
var G__7899 = i4492;
var G__7900 = j4493;
var G__7901 = k4494;
var G__7902 = l4495;
var G__7903 = m4496;
var G__7904 = n4497;
var G__7905 = o4498;
var G__7906 = p4499;
var G__7907 = q4500;
var G__7908 = r4501;
var G__7909 = s4502;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909) : f.call(null,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909));
}
} else {
var t4503 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4484,b4485,c4486,d4487,e4488,f4489,g4490,h4491,i4492,j4493,k4494,l4495,m4496,n4497,o4498,p4499,q4500,r4501,s4502,t4503);
} else {
var G__7910 = a4484;
var G__7911 = b4485;
var G__7912 = c4486;
var G__7913 = d4487;
var G__7914 = e4488;
var G__7915 = f4489;
var G__7916 = g4490;
var G__7917 = h4491;
var G__7918 = i4492;
var G__7919 = j4493;
var G__7920 = k4494;
var G__7921 = l4495;
var G__7922 = m4496;
var G__7923 = n4497;
var G__7924 = o4498;
var G__7925 = p4499;
var G__7926 = q4500;
var G__7927 = r4501;
var G__7928 = s4502;
var G__7929 = t4503;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7910,G__7911,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929) : f.call(null,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__7930__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7930 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7931__i = 0, G__7931__a = new Array(arguments.length -  5);
while (G__7931__i < G__7931__a.length) {G__7931__a[G__7931__i] = arguments[G__7931__i + 5]; ++G__7931__i;}
  args = new cljs.core.IndexedSeq(G__7931__a,0);
} 
return G__7930__delegate.call(this,f,a,b,c,d,args);};
G__7930.cljs$lang$maxFixedArity = 5;
G__7930.cljs$lang$applyTo = (function (arglist__7932){
var f = cljs.core.first(arglist__7932);
arglist__7932 = cljs.core.next(arglist__7932);
var a = cljs.core.first(arglist__7932);
arglist__7932 = cljs.core.next(arglist__7932);
var b = cljs.core.first(arglist__7932);
arglist__7932 = cljs.core.next(arglist__7932);
var c = cljs.core.first(arglist__7932);
arglist__7932 = cljs.core.next(arglist__7932);
var d = cljs.core.first(arglist__7932);
var args = cljs.core.rest(arglist__7932);
return G__7930__delegate(f,a,b,c,d,args);
});
G__7930.cljs$core$IFn$_invoke$arity$variadic = G__7930__delegate;
return G__7930;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__7933 = null;
if (arguments.length > 5) {
var G__7934__i = 0, G__7934__a = new Array(arguments.length -  5);
while (G__7934__i < G__7934__a.length) {G__7934__a[G__7934__i] = arguments[G__7934__i + 5]; ++G__7934__i;}
G__7933 = new cljs.core.IndexedSeq(G__7934__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7933);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__7950 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7950) : f.call(null,G__7950));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__7951 = cljs.core.meta(obj);
var G__7952 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7951,G__7952) : f.call(null,G__7951,G__7952));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__7953 = cljs.core.meta(obj);
var G__7954 = a;
var G__7955 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7953,G__7954,G__7955) : f.call(null,G__7953,G__7954,G__7955));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__7956 = cljs.core.meta(obj);
var G__7957 = a;
var G__7958 = b;
var G__7959 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7956,G__7957,G__7958,G__7959) : f.call(null,G__7956,G__7957,G__7958,G__7959));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__7960 = cljs.core.meta(obj);
var G__7961 = a;
var G__7962 = b;
var G__7963 = c;
var G__7964 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7960,G__7961,G__7962,G__7963,G__7964) : f.call(null,G__7960,G__7961,G__7962,G__7963,G__7964));
})());
});
var vary_meta__7 = (function() { 
var G__7965__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__7965 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__7966__i = 0, G__7966__a = new Array(arguments.length -  6);
while (G__7966__i < G__7966__a.length) {G__7966__a[G__7966__i] = arguments[G__7966__i + 6]; ++G__7966__i;}
  args = new cljs.core.IndexedSeq(G__7966__a,0);
} 
return G__7965__delegate.call(this,obj,f,a,b,c,d,args);};
G__7965.cljs$lang$maxFixedArity = 6;
G__7965.cljs$lang$applyTo = (function (arglist__7967){
var obj = cljs.core.first(arglist__7967);
arglist__7967 = cljs.core.next(arglist__7967);
var f = cljs.core.first(arglist__7967);
arglist__7967 = cljs.core.next(arglist__7967);
var a = cljs.core.first(arglist__7967);
arglist__7967 = cljs.core.next(arglist__7967);
var b = cljs.core.first(arglist__7967);
arglist__7967 = cljs.core.next(arglist__7967);
var c = cljs.core.first(arglist__7967);
arglist__7967 = cljs.core.next(arglist__7967);
var d = cljs.core.first(arglist__7967);
var args = cljs.core.rest(arglist__7967);
return G__7965__delegate(obj,f,a,b,c,d,args);
});
G__7965.cljs$core$IFn$_invoke$arity$variadic = G__7965__delegate;
return G__7965;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__7968 = null;
if (arguments.length > 6) {
var G__7969__i = 0, G__7969__a = new Array(arguments.length -  6);
while (G__7969__i < G__7969__a.length) {G__7969__a[G__7969__i] = arguments[G__7969__i + 6]; ++G__7969__i;}
G__7968 = new cljs.core.IndexedSeq(G__7969__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__7968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__7970__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__7970 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7971__i = 0, G__7971__a = new Array(arguments.length -  2);
while (G__7971__i < G__7971__a.length) {G__7971__a[G__7971__i] = arguments[G__7971__i + 2]; ++G__7971__i;}
  more = new cljs.core.IndexedSeq(G__7971__a,0);
} 
return G__7970__delegate.call(this,x,y,more);};
G__7970.cljs$lang$maxFixedArity = 2;
G__7970.cljs$lang$applyTo = (function (arglist__7972){
var x = cljs.core.first(arglist__7972);
arglist__7972 = cljs.core.next(arglist__7972);
var y = cljs.core.first(arglist__7972);
var more = cljs.core.rest(arglist__7972);
return G__7970__delegate(x,y,more);
});
G__7970.cljs$core$IFn$_invoke$arity$variadic = G__7970__delegate;
return G__7970;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__7973 = null;
if (arguments.length > 2) {
var G__7974__i = 0, G__7974__a = new Array(arguments.length -  2);
while (G__7974__i < G__7974__a.length) {G__7974__a[G__7974__i] = arguments[G__7974__i + 2]; ++G__7974__i;}
G__7973 = new cljs.core.IndexedSeq(G__7974__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t7978 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t7978 = (function (nil_iter,meta7979){
this.nil_iter = nil_iter;
this.meta7979 = meta7979;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t7978.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t7978.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t7978.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t7978.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_7980){
var self__ = this;
var _7980__$1 = this;
return self__.meta7979;
});

cljs.core.t7978.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_7980,meta7979__$1){
var self__ = this;
var _7980__$1 = this;
return (new cljs.core.t7978(self__.nil_iter,meta7979__$1));
});

cljs.core.t7978.cljs$lang$type = true;

cljs.core.t7978.cljs$lang$ctorStr = "cljs.core/t7978";

cljs.core.t7978.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/t7978");
});

cljs.core.__GT_t7978 = (function __GT_t7978(nil_iter__$1,meta7979){
return (new cljs.core.t7978(nil_iter__$1,meta7979));
});

}

return (new cljs.core.t7978(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/john/.boot/tmp/home/john/reagent-test/79i/-ytkm87/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3541__auto__ = !((lt.stepper == null));
if(and__3541__auto__){
return self__.iter.hasNext();
} else {
return and__3541__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__7981 = lt;
var G__7982 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7981,G__7982) : self__.xform.call(null,G__7981,G__7982));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7983 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7983) : self__.xform.call(null,G__7983));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__7985 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7985) : xform.call(null,G__7985));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__7987 = cljs.core.next(iters__$1);
iters__$1 = G__7987;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4440__auto___7988 = self__.iters.length;
var i_7989 = (0);
while(true){
if((i_7989 < n__4440__auto___7988)){
(self__.nexts[i_7989] = (self__.iters[i_7989]).next());

var G__7990 = (i_7989 + (1));
i_7989 = G__7990;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3541__auto__ = !((lt.stepper == null));
if(and__3541__auto__){
return this$.hasNext();
} else {
return and__3541__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7986 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7986) : self__.xform.call(null,G__7986));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__7995 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7995) : xform.call(null,G__7995));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__7996_8000 = cljs.core.seq(colls);
var chunk__7997_8001 = null;
var count__7998_8002 = (0);
var i__7999_8003 = (0);
while(true){
if((i__7999_8003 < count__7998_8002)){
var coll_8004 = chunk__7997_8001.cljs$core$IIndexed$_nth$arity$2(null,i__7999_8003);
iters.push(cljs.core.iter(coll_8004));

var G__8005 = seq__7996_8000;
var G__8006 = chunk__7997_8001;
var G__8007 = count__7998_8002;
var G__8008 = (i__7999_8003 + (1));
seq__7996_8000 = G__8005;
chunk__7997_8001 = G__8006;
count__7998_8002 = G__8007;
i__7999_8003 = G__8008;
continue;
} else {
var temp__4126__auto___8009 = cljs.core.seq(seq__7996_8000);
if(temp__4126__auto___8009){
var seq__7996_8010__$1 = temp__4126__auto___8009;
if(cljs.core.chunked_seq_QMARK_(seq__7996_8010__$1)){
var c__4340__auto___8011 = cljs.core.chunk_first(seq__7996_8010__$1);
var G__8012 = cljs.core.chunk_rest(seq__7996_8010__$1);
var G__8013 = c__4340__auto___8011;
var G__8014 = cljs.core.count(c__4340__auto___8011);
var G__8015 = (0);
seq__7996_8000 = G__8012;
chunk__7997_8001 = G__8013;
count__7998_8002 = G__8014;
i__7999_8003 = G__8015;
continue;
} else {
var coll_8016 = cljs.core.first(seq__7996_8010__$1);
iters.push(cljs.core.iter(coll_8016));

var G__8017 = cljs.core.next(seq__7996_8010__$1);
var G__8018 = null;
var G__8019 = (0);
var G__8020 = (0);
seq__7996_8000 = G__8017;
chunk__7997_8001 = G__8018;
count__7998_8002 = G__8019;
i__7999_8003 = G__8020;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3553__auto__ = cljs.core.seq(coll);
if(or__3553__auto__){
return or__3553__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8021__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8021 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8022__i = 0, G__8022__a = new Array(arguments.length -  2);
while (G__8022__i < G__8022__a.length) {G__8022__a[G__8022__i] = arguments[G__8022__i + 2]; ++G__8022__i;}
  colls = new cljs.core.IndexedSeq(G__8022__a,0);
} 
return G__8021__delegate.call(this,xform,coll,colls);};
G__8021.cljs$lang$maxFixedArity = 2;
G__8021.cljs$lang$applyTo = (function (arglist__8023){
var xform = cljs.core.first(arglist__8023);
arglist__8023 = cljs.core.next(arglist__8023);
var coll = cljs.core.first(arglist__8023);
var colls = cljs.core.rest(arglist__8023);
return G__8021__delegate(xform,coll,colls);
});
G__8021.cljs$core$IFn$_invoke$arity$variadic = G__8021__delegate;
return G__8021;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8024 = null;
if (arguments.length > 2) {
var G__8025__i = 0, G__8025__a = new Array(arguments.length -  2);
while (G__8025__i < G__8025__a.length) {G__8025__a[G__8025__i] = arguments[G__8025__i + 2]; ++G__8025__i;}
G__8024 = new cljs.core.IndexedSeq(G__8025__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8027 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8027) : pred.call(null,G__8027));
})())){
var G__8028 = pred;
var G__8029 = cljs.core.next(coll);
pred = G__8028;
coll = G__8029;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3553__auto__ = (function (){var G__8033 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8033) : pred.call(null,G__8033));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__8034 = pred;
var G__8035 = cljs.core.next(coll);
pred = G__8034;
coll = G__8035;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__8042 = null;
var G__8042__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8042__1 = (function (x){
return cljs.core.not((function (){var G__8039 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8039) : f.call(null,G__8039));
})());
});
var G__8042__2 = (function (x,y){
return cljs.core.not((function (){var G__8040 = x;
var G__8041 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8040,G__8041) : f.call(null,G__8040,G__8041));
})());
});
var G__8042__3 = (function() { 
var G__8043__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8043 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8044__i = 0, G__8044__a = new Array(arguments.length -  2);
while (G__8044__i < G__8044__a.length) {G__8044__a[G__8044__i] = arguments[G__8044__i + 2]; ++G__8044__i;}
  zs = new cljs.core.IndexedSeq(G__8044__a,0);
} 
return G__8043__delegate.call(this,x,y,zs);};
G__8043.cljs$lang$maxFixedArity = 2;
G__8043.cljs$lang$applyTo = (function (arglist__8045){
var x = cljs.core.first(arglist__8045);
arglist__8045 = cljs.core.next(arglist__8045);
var y = cljs.core.first(arglist__8045);
var zs = cljs.core.rest(arglist__8045);
return G__8043__delegate(x,y,zs);
});
G__8043.cljs$core$IFn$_invoke$arity$variadic = G__8043__delegate;
return G__8043;
})()
;
G__8042 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8042__0.call(this);
case 1:
return G__8042__1.call(this,x);
case 2:
return G__8042__2.call(this,x,y);
default:
var G__8046 = null;
if (arguments.length > 2) {
var G__8047__i = 0, G__8047__a = new Array(arguments.length -  2);
while (G__8047__i < G__8047__a.length) {G__8047__a[G__8047__i] = arguments[G__8047__i + 2]; ++G__8047__i;}
G__8046 = new cljs.core.IndexedSeq(G__8047__a,0);
}
return G__8042__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8042.cljs$lang$maxFixedArity = 2;
G__8042.cljs$lang$applyTo = G__8042__3.cljs$lang$applyTo;
G__8042.cljs$core$IFn$_invoke$arity$0 = G__8042__0;
G__8042.cljs$core$IFn$_invoke$arity$1 = G__8042__1;
G__8042.cljs$core$IFn$_invoke$arity$2 = G__8042__2;
G__8042.cljs$core$IFn$_invoke$arity$variadic = G__8042__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8042;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8048__delegate = function (args){
return x;
};
var G__8048 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8049__i = 0, G__8049__a = new Array(arguments.length -  0);
while (G__8049__i < G__8049__a.length) {G__8049__a[G__8049__i] = arguments[G__8049__i + 0]; ++G__8049__i;}
  args = new cljs.core.IndexedSeq(G__8049__a,0);
} 
return G__8048__delegate.call(this,args);};
G__8048.cljs$lang$maxFixedArity = 0;
G__8048.cljs$lang$applyTo = (function (arglist__8050){
var args = cljs.core.seq(arglist__8050);
return G__8048__delegate(args);
});
G__8048.cljs$core$IFn$_invoke$arity$variadic = G__8048__delegate;
return G__8048;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__8105 = null;
var G__8105__0 = (function (){
var G__8078 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8078) : f.call(null,G__8078));
});
var G__8105__1 = (function (x){
var G__8079 = (function (){var G__8080 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8080) : g.call(null,G__8080));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8079) : f.call(null,G__8079));
});
var G__8105__2 = (function (x,y){
var G__8081 = (function (){var G__8082 = x;
var G__8083 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8082,G__8083) : g.call(null,G__8082,G__8083));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8081) : f.call(null,G__8081));
});
var G__8105__3 = (function (x,y,z){
var G__8084 = (function (){var G__8085 = x;
var G__8086 = y;
var G__8087 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8085,G__8086,G__8087) : g.call(null,G__8085,G__8086,G__8087));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8084) : f.call(null,G__8084));
});
var G__8105__4 = (function() { 
var G__8106__delegate = function (x,y,z,args){
var G__8088 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8088) : f.call(null,G__8088));
};
var G__8106 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8107__i = 0, G__8107__a = new Array(arguments.length -  3);
while (G__8107__i < G__8107__a.length) {G__8107__a[G__8107__i] = arguments[G__8107__i + 3]; ++G__8107__i;}
  args = new cljs.core.IndexedSeq(G__8107__a,0);
} 
return G__8106__delegate.call(this,x,y,z,args);};
G__8106.cljs$lang$maxFixedArity = 3;
G__8106.cljs$lang$applyTo = (function (arglist__8108){
var x = cljs.core.first(arglist__8108);
arglist__8108 = cljs.core.next(arglist__8108);
var y = cljs.core.first(arglist__8108);
arglist__8108 = cljs.core.next(arglist__8108);
var z = cljs.core.first(arglist__8108);
var args = cljs.core.rest(arglist__8108);
return G__8106__delegate(x,y,z,args);
});
G__8106.cljs$core$IFn$_invoke$arity$variadic = G__8106__delegate;
return G__8106;
})()
;
G__8105 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8105__0.call(this);
case 1:
return G__8105__1.call(this,x);
case 2:
return G__8105__2.call(this,x,y);
case 3:
return G__8105__3.call(this,x,y,z);
default:
var G__8109 = null;
if (arguments.length > 3) {
var G__8110__i = 0, G__8110__a = new Array(arguments.length -  3);
while (G__8110__i < G__8110__a.length) {G__8110__a[G__8110__i] = arguments[G__8110__i + 3]; ++G__8110__i;}
G__8109 = new cljs.core.IndexedSeq(G__8110__a,0);
}
return G__8105__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8105.cljs$lang$maxFixedArity = 3;
G__8105.cljs$lang$applyTo = G__8105__4.cljs$lang$applyTo;
G__8105.cljs$core$IFn$_invoke$arity$0 = G__8105__0;
G__8105.cljs$core$IFn$_invoke$arity$1 = G__8105__1;
G__8105.cljs$core$IFn$_invoke$arity$2 = G__8105__2;
G__8105.cljs$core$IFn$_invoke$arity$3 = G__8105__3;
G__8105.cljs$core$IFn$_invoke$arity$variadic = G__8105__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8105;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__8111 = null;
var G__8111__0 = (function (){
var G__8089 = (function (){var G__8090 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8090) : g.call(null,G__8090));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8089) : f.call(null,G__8089));
});
var G__8111__1 = (function (x){
var G__8091 = (function (){var G__8092 = (function (){var G__8093 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8093) : h.call(null,G__8093));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8092) : g.call(null,G__8092));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8091) : f.call(null,G__8091));
});
var G__8111__2 = (function (x,y){
var G__8094 = (function (){var G__8095 = (function (){var G__8096 = x;
var G__8097 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8096,G__8097) : h.call(null,G__8096,G__8097));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8095) : g.call(null,G__8095));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8094) : f.call(null,G__8094));
});
var G__8111__3 = (function (x,y,z){
var G__8098 = (function (){var G__8099 = (function (){var G__8100 = x;
var G__8101 = y;
var G__8102 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8100,G__8101,G__8102) : h.call(null,G__8100,G__8101,G__8102));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8099) : g.call(null,G__8099));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8098) : f.call(null,G__8098));
});
var G__8111__4 = (function() { 
var G__8112__delegate = function (x,y,z,args){
var G__8103 = (function (){var G__8104 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8104) : g.call(null,G__8104));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8103) : f.call(null,G__8103));
};
var G__8112 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8113__i = 0, G__8113__a = new Array(arguments.length -  3);
while (G__8113__i < G__8113__a.length) {G__8113__a[G__8113__i] = arguments[G__8113__i + 3]; ++G__8113__i;}
  args = new cljs.core.IndexedSeq(G__8113__a,0);
} 
return G__8112__delegate.call(this,x,y,z,args);};
G__8112.cljs$lang$maxFixedArity = 3;
G__8112.cljs$lang$applyTo = (function (arglist__8114){
var x = cljs.core.first(arglist__8114);
arglist__8114 = cljs.core.next(arglist__8114);
var y = cljs.core.first(arglist__8114);
arglist__8114 = cljs.core.next(arglist__8114);
var z = cljs.core.first(arglist__8114);
var args = cljs.core.rest(arglist__8114);
return G__8112__delegate(x,y,z,args);
});
G__8112.cljs$core$IFn$_invoke$arity$variadic = G__8112__delegate;
return G__8112;
})()
;
G__8111 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8111__0.call(this);
case 1:
return G__8111__1.call(this,x);
case 2:
return G__8111__2.call(this,x,y);
case 3:
return G__8111__3.call(this,x,y,z);
default:
var G__8115 = null;
if (arguments.length > 3) {
var G__8116__i = 0, G__8116__a = new Array(arguments.length -  3);
while (G__8116__i < G__8116__a.length) {G__8116__a[G__8116__i] = arguments[G__8116__i + 3]; ++G__8116__i;}
G__8115 = new cljs.core.IndexedSeq(G__8116__a,0);
}
return G__8111__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8111.cljs$lang$maxFixedArity = 3;
G__8111.cljs$lang$applyTo = G__8111__4.cljs$lang$applyTo;
G__8111.cljs$core$IFn$_invoke$arity$0 = G__8111__0;
G__8111.cljs$core$IFn$_invoke$arity$1 = G__8111__1;
G__8111.cljs$core$IFn$_invoke$arity$2 = G__8111__2;
G__8111.cljs$core$IFn$_invoke$arity$3 = G__8111__3;
G__8111.cljs$core$IFn$_invoke$arity$variadic = G__8111__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8111;
})()
});
var comp__4 = (function() { 
var G__8117__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8118__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8119 = cljs.core.first(fs__$2).call(null,ret);
var G__8120 = cljs.core.next(fs__$2);
ret = G__8119;
fs__$2 = G__8120;
continue;
} else {
return ret;
}
break;
}
};
var G__8118 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8121__i = 0, G__8121__a = new Array(arguments.length -  0);
while (G__8121__i < G__8121__a.length) {G__8121__a[G__8121__i] = arguments[G__8121__i + 0]; ++G__8121__i;}
  args = new cljs.core.IndexedSeq(G__8121__a,0);
} 
return G__8118__delegate.call(this,args);};
G__8118.cljs$lang$maxFixedArity = 0;
G__8118.cljs$lang$applyTo = (function (arglist__8122){
var args = cljs.core.seq(arglist__8122);
return G__8118__delegate(args);
});
G__8118.cljs$core$IFn$_invoke$arity$variadic = G__8118__delegate;
return G__8118;
})()
;
;})(fs__$1))
};
var G__8117 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8123__i = 0, G__8123__a = new Array(arguments.length -  3);
while (G__8123__i < G__8123__a.length) {G__8123__a[G__8123__i] = arguments[G__8123__i + 3]; ++G__8123__i;}
  fs = new cljs.core.IndexedSeq(G__8123__a,0);
} 
return G__8117__delegate.call(this,f1,f2,f3,fs);};
G__8117.cljs$lang$maxFixedArity = 3;
G__8117.cljs$lang$applyTo = (function (arglist__8124){
var f1 = cljs.core.first(arglist__8124);
arglist__8124 = cljs.core.next(arglist__8124);
var f2 = cljs.core.first(arglist__8124);
arglist__8124 = cljs.core.next(arglist__8124);
var f3 = cljs.core.first(arglist__8124);
var fs = cljs.core.rest(arglist__8124);
return G__8117__delegate(f1,f2,f3,fs);
});
G__8117.cljs$core$IFn$_invoke$arity$variadic = G__8117__delegate;
return G__8117;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__8125 = null;
if (arguments.length > 3) {
var G__8126__i = 0, G__8126__a = new Array(arguments.length -  3);
while (G__8126__i < G__8126__a.length) {G__8126__a[G__8126__i] = arguments[G__8126__i + 3]; ++G__8126__i;}
G__8125 = new cljs.core.IndexedSeq(G__8126__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8125);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__8211 = null;
var G__8211__0 = (function (){
var G__8169 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8169) : f.call(null,G__8169));
});
var G__8211__1 = (function (x){
var G__8170 = arg1;
var G__8171 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8170,G__8171) : f.call(null,G__8170,G__8171));
});
var G__8211__2 = (function (x,y){
var G__8172 = arg1;
var G__8173 = x;
var G__8174 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8172,G__8173,G__8174) : f.call(null,G__8172,G__8173,G__8174));
});
var G__8211__3 = (function (x,y,z){
var G__8175 = arg1;
var G__8176 = x;
var G__8177 = y;
var G__8178 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8175,G__8176,G__8177,G__8178) : f.call(null,G__8175,G__8176,G__8177,G__8178));
});
var G__8211__4 = (function() { 
var G__8212__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8212 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8213__i = 0, G__8213__a = new Array(arguments.length -  3);
while (G__8213__i < G__8213__a.length) {G__8213__a[G__8213__i] = arguments[G__8213__i + 3]; ++G__8213__i;}
  args = new cljs.core.IndexedSeq(G__8213__a,0);
} 
return G__8212__delegate.call(this,x,y,z,args);};
G__8212.cljs$lang$maxFixedArity = 3;
G__8212.cljs$lang$applyTo = (function (arglist__8214){
var x = cljs.core.first(arglist__8214);
arglist__8214 = cljs.core.next(arglist__8214);
var y = cljs.core.first(arglist__8214);
arglist__8214 = cljs.core.next(arglist__8214);
var z = cljs.core.first(arglist__8214);
var args = cljs.core.rest(arglist__8214);
return G__8212__delegate(x,y,z,args);
});
G__8212.cljs$core$IFn$_invoke$arity$variadic = G__8212__delegate;
return G__8212;
})()
;
G__8211 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8211__0.call(this);
case 1:
return G__8211__1.call(this,x);
case 2:
return G__8211__2.call(this,x,y);
case 3:
return G__8211__3.call(this,x,y,z);
default:
var G__8215 = null;
if (arguments.length > 3) {
var G__8216__i = 0, G__8216__a = new Array(arguments.length -  3);
while (G__8216__i < G__8216__a.length) {G__8216__a[G__8216__i] = arguments[G__8216__i + 3]; ++G__8216__i;}
G__8215 = new cljs.core.IndexedSeq(G__8216__a,0);
}
return G__8211__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8211.cljs$lang$maxFixedArity = 3;
G__8211.cljs$lang$applyTo = G__8211__4.cljs$lang$applyTo;
G__8211.cljs$core$IFn$_invoke$arity$0 = G__8211__0;
G__8211.cljs$core$IFn$_invoke$arity$1 = G__8211__1;
G__8211.cljs$core$IFn$_invoke$arity$2 = G__8211__2;
G__8211.cljs$core$IFn$_invoke$arity$3 = G__8211__3;
G__8211.cljs$core$IFn$_invoke$arity$variadic = G__8211__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8211;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8217 = null;
var G__8217__0 = (function (){
var G__8179 = arg1;
var G__8180 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8179,G__8180) : f.call(null,G__8179,G__8180));
});
var G__8217__1 = (function (x){
var G__8181 = arg1;
var G__8182 = arg2;
var G__8183 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8181,G__8182,G__8183) : f.call(null,G__8181,G__8182,G__8183));
});
var G__8217__2 = (function (x,y){
var G__8184 = arg1;
var G__8185 = arg2;
var G__8186 = x;
var G__8187 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8184,G__8185,G__8186,G__8187) : f.call(null,G__8184,G__8185,G__8186,G__8187));
});
var G__8217__3 = (function (x,y,z){
var G__8188 = arg1;
var G__8189 = arg2;
var G__8190 = x;
var G__8191 = y;
var G__8192 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8188,G__8189,G__8190,G__8191,G__8192) : f.call(null,G__8188,G__8189,G__8190,G__8191,G__8192));
});
var G__8217__4 = (function() { 
var G__8218__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8218 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8219__i = 0, G__8219__a = new Array(arguments.length -  3);
while (G__8219__i < G__8219__a.length) {G__8219__a[G__8219__i] = arguments[G__8219__i + 3]; ++G__8219__i;}
  args = new cljs.core.IndexedSeq(G__8219__a,0);
} 
return G__8218__delegate.call(this,x,y,z,args);};
G__8218.cljs$lang$maxFixedArity = 3;
G__8218.cljs$lang$applyTo = (function (arglist__8220){
var x = cljs.core.first(arglist__8220);
arglist__8220 = cljs.core.next(arglist__8220);
var y = cljs.core.first(arglist__8220);
arglist__8220 = cljs.core.next(arglist__8220);
var z = cljs.core.first(arglist__8220);
var args = cljs.core.rest(arglist__8220);
return G__8218__delegate(x,y,z,args);
});
G__8218.cljs$core$IFn$_invoke$arity$variadic = G__8218__delegate;
return G__8218;
})()
;
G__8217 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8217__0.call(this);
case 1:
return G__8217__1.call(this,x);
case 2:
return G__8217__2.call(this,x,y);
case 3:
return G__8217__3.call(this,x,y,z);
default:
var G__8221 = null;
if (arguments.length > 3) {
var G__8222__i = 0, G__8222__a = new Array(arguments.length -  3);
while (G__8222__i < G__8222__a.length) {G__8222__a[G__8222__i] = arguments[G__8222__i + 3]; ++G__8222__i;}
G__8221 = new cljs.core.IndexedSeq(G__8222__a,0);
}
return G__8217__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8217.cljs$lang$maxFixedArity = 3;
G__8217.cljs$lang$applyTo = G__8217__4.cljs$lang$applyTo;
G__8217.cljs$core$IFn$_invoke$arity$0 = G__8217__0;
G__8217.cljs$core$IFn$_invoke$arity$1 = G__8217__1;
G__8217.cljs$core$IFn$_invoke$arity$2 = G__8217__2;
G__8217.cljs$core$IFn$_invoke$arity$3 = G__8217__3;
G__8217.cljs$core$IFn$_invoke$arity$variadic = G__8217__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8217;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8223 = null;
var G__8223__0 = (function (){
var G__8193 = arg1;
var G__8194 = arg2;
var G__8195 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8193,G__8194,G__8195) : f.call(null,G__8193,G__8194,G__8195));
});
var G__8223__1 = (function (x){
var G__8196 = arg1;
var G__8197 = arg2;
var G__8198 = arg3;
var G__8199 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8196,G__8197,G__8198,G__8199) : f.call(null,G__8196,G__8197,G__8198,G__8199));
});
var G__8223__2 = (function (x,y){
var G__8200 = arg1;
var G__8201 = arg2;
var G__8202 = arg3;
var G__8203 = x;
var G__8204 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8200,G__8201,G__8202,G__8203,G__8204) : f.call(null,G__8200,G__8201,G__8202,G__8203,G__8204));
});
var G__8223__3 = (function (x,y,z){
var G__8205 = arg1;
var G__8206 = arg2;
var G__8207 = arg3;
var G__8208 = x;
var G__8209 = y;
var G__8210 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8205,G__8206,G__8207,G__8208,G__8209,G__8210) : f.call(null,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210));
});
var G__8223__4 = (function() { 
var G__8224__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8224 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8225__i = 0, G__8225__a = new Array(arguments.length -  3);
while (G__8225__i < G__8225__a.length) {G__8225__a[G__8225__i] = arguments[G__8225__i + 3]; ++G__8225__i;}
  args = new cljs.core.IndexedSeq(G__8225__a,0);
} 
return G__8224__delegate.call(this,x,y,z,args);};
G__8224.cljs$lang$maxFixedArity = 3;
G__8224.cljs$lang$applyTo = (function (arglist__8226){
var x = cljs.core.first(arglist__8226);
arglist__8226 = cljs.core.next(arglist__8226);
var y = cljs.core.first(arglist__8226);
arglist__8226 = cljs.core.next(arglist__8226);
var z = cljs.core.first(arglist__8226);
var args = cljs.core.rest(arglist__8226);
return G__8224__delegate(x,y,z,args);
});
G__8224.cljs$core$IFn$_invoke$arity$variadic = G__8224__delegate;
return G__8224;
})()
;
G__8223 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8223__0.call(this);
case 1:
return G__8223__1.call(this,x);
case 2:
return G__8223__2.call(this,x,y);
case 3:
return G__8223__3.call(this,x,y,z);
default:
var G__8227 = null;
if (arguments.length > 3) {
var G__8228__i = 0, G__8228__a = new Array(arguments.length -  3);
while (G__8228__i < G__8228__a.length) {G__8228__a[G__8228__i] = arguments[G__8228__i + 3]; ++G__8228__i;}
G__8227 = new cljs.core.IndexedSeq(G__8228__a,0);
}
return G__8223__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8223.cljs$lang$maxFixedArity = 3;
G__8223.cljs$lang$applyTo = G__8223__4.cljs$lang$applyTo;
G__8223.cljs$core$IFn$_invoke$arity$0 = G__8223__0;
G__8223.cljs$core$IFn$_invoke$arity$1 = G__8223__1;
G__8223.cljs$core$IFn$_invoke$arity$2 = G__8223__2;
G__8223.cljs$core$IFn$_invoke$arity$3 = G__8223__3;
G__8223.cljs$core$IFn$_invoke$arity$variadic = G__8223__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8223;
})()
});
var partial__5 = (function() { 
var G__8229__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8230__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8230 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8231__i = 0, G__8231__a = new Array(arguments.length -  0);
while (G__8231__i < G__8231__a.length) {G__8231__a[G__8231__i] = arguments[G__8231__i + 0]; ++G__8231__i;}
  args = new cljs.core.IndexedSeq(G__8231__a,0);
} 
return G__8230__delegate.call(this,args);};
G__8230.cljs$lang$maxFixedArity = 0;
G__8230.cljs$lang$applyTo = (function (arglist__8232){
var args = cljs.core.seq(arglist__8232);
return G__8230__delegate(args);
});
G__8230.cljs$core$IFn$_invoke$arity$variadic = G__8230__delegate;
return G__8230;
})()
;
};
var G__8229 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8233__i = 0, G__8233__a = new Array(arguments.length -  4);
while (G__8233__i < G__8233__a.length) {G__8233__a[G__8233__i] = arguments[G__8233__i + 4]; ++G__8233__i;}
  more = new cljs.core.IndexedSeq(G__8233__a,0);
} 
return G__8229__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8229.cljs$lang$maxFixedArity = 4;
G__8229.cljs$lang$applyTo = (function (arglist__8234){
var f = cljs.core.first(arglist__8234);
arglist__8234 = cljs.core.next(arglist__8234);
var arg1 = cljs.core.first(arglist__8234);
arglist__8234 = cljs.core.next(arglist__8234);
var arg2 = cljs.core.first(arglist__8234);
arglist__8234 = cljs.core.next(arglist__8234);
var arg3 = cljs.core.first(arglist__8234);
var more = cljs.core.rest(arglist__8234);
return G__8229__delegate(f,arg1,arg2,arg3,more);
});
G__8229.cljs$core$IFn$_invoke$arity$variadic = G__8229__delegate;
return G__8229;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8235 = null;
if (arguments.length > 4) {
var G__8236__i = 0, G__8236__a = new Array(arguments.length -  4);
while (G__8236__i < G__8236__a.length) {G__8236__a[G__8236__i] = arguments[G__8236__i + 4]; ++G__8236__i;}
G__8235 = new cljs.core.IndexedSeq(G__8236__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__8269 = null;
var G__8269__1 = (function (a){
var G__8253 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8253) : f.call(null,G__8253));
});
var G__8269__2 = (function (a,b){
var G__8254 = (((a == null))?x:a);
var G__8255 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8254,G__8255) : f.call(null,G__8254,G__8255));
});
var G__8269__3 = (function (a,b,c){
var G__8256 = (((a == null))?x:a);
var G__8257 = b;
var G__8258 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8256,G__8257,G__8258) : f.call(null,G__8256,G__8257,G__8258));
});
var G__8269__4 = (function() { 
var G__8270__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8270 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8271__i = 0, G__8271__a = new Array(arguments.length -  3);
while (G__8271__i < G__8271__a.length) {G__8271__a[G__8271__i] = arguments[G__8271__i + 3]; ++G__8271__i;}
  ds = new cljs.core.IndexedSeq(G__8271__a,0);
} 
return G__8270__delegate.call(this,a,b,c,ds);};
G__8270.cljs$lang$maxFixedArity = 3;
G__8270.cljs$lang$applyTo = (function (arglist__8272){
var a = cljs.core.first(arglist__8272);
arglist__8272 = cljs.core.next(arglist__8272);
var b = cljs.core.first(arglist__8272);
arglist__8272 = cljs.core.next(arglist__8272);
var c = cljs.core.first(arglist__8272);
var ds = cljs.core.rest(arglist__8272);
return G__8270__delegate(a,b,c,ds);
});
G__8270.cljs$core$IFn$_invoke$arity$variadic = G__8270__delegate;
return G__8270;
})()
;
G__8269 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8269__1.call(this,a);
case 2:
return G__8269__2.call(this,a,b);
case 3:
return G__8269__3.call(this,a,b,c);
default:
var G__8273 = null;
if (arguments.length > 3) {
var G__8274__i = 0, G__8274__a = new Array(arguments.length -  3);
while (G__8274__i < G__8274__a.length) {G__8274__a[G__8274__i] = arguments[G__8274__i + 3]; ++G__8274__i;}
G__8273 = new cljs.core.IndexedSeq(G__8274__a,0);
}
return G__8269__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8269.cljs$lang$maxFixedArity = 3;
G__8269.cljs$lang$applyTo = G__8269__4.cljs$lang$applyTo;
G__8269.cljs$core$IFn$_invoke$arity$1 = G__8269__1;
G__8269.cljs$core$IFn$_invoke$arity$2 = G__8269__2;
G__8269.cljs$core$IFn$_invoke$arity$3 = G__8269__3;
G__8269.cljs$core$IFn$_invoke$arity$variadic = G__8269__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8269;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__8275 = null;
var G__8275__2 = (function (a,b){
var G__8259 = (((a == null))?x:a);
var G__8260 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8259,G__8260) : f.call(null,G__8259,G__8260));
});
var G__8275__3 = (function (a,b,c){
var G__8261 = (((a == null))?x:a);
var G__8262 = (((b == null))?y:b);
var G__8263 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8261,G__8262,G__8263) : f.call(null,G__8261,G__8262,G__8263));
});
var G__8275__4 = (function() { 
var G__8276__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8276 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8277__i = 0, G__8277__a = new Array(arguments.length -  3);
while (G__8277__i < G__8277__a.length) {G__8277__a[G__8277__i] = arguments[G__8277__i + 3]; ++G__8277__i;}
  ds = new cljs.core.IndexedSeq(G__8277__a,0);
} 
return G__8276__delegate.call(this,a,b,c,ds);};
G__8276.cljs$lang$maxFixedArity = 3;
G__8276.cljs$lang$applyTo = (function (arglist__8278){
var a = cljs.core.first(arglist__8278);
arglist__8278 = cljs.core.next(arglist__8278);
var b = cljs.core.first(arglist__8278);
arglist__8278 = cljs.core.next(arglist__8278);
var c = cljs.core.first(arglist__8278);
var ds = cljs.core.rest(arglist__8278);
return G__8276__delegate(a,b,c,ds);
});
G__8276.cljs$core$IFn$_invoke$arity$variadic = G__8276__delegate;
return G__8276;
})()
;
G__8275 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8275__2.call(this,a,b);
case 3:
return G__8275__3.call(this,a,b,c);
default:
var G__8279 = null;
if (arguments.length > 3) {
var G__8280__i = 0, G__8280__a = new Array(arguments.length -  3);
while (G__8280__i < G__8280__a.length) {G__8280__a[G__8280__i] = arguments[G__8280__i + 3]; ++G__8280__i;}
G__8279 = new cljs.core.IndexedSeq(G__8280__a,0);
}
return G__8275__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8275.cljs$lang$maxFixedArity = 3;
G__8275.cljs$lang$applyTo = G__8275__4.cljs$lang$applyTo;
G__8275.cljs$core$IFn$_invoke$arity$2 = G__8275__2;
G__8275.cljs$core$IFn$_invoke$arity$3 = G__8275__3;
G__8275.cljs$core$IFn$_invoke$arity$variadic = G__8275__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8275;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__8281 = null;
var G__8281__2 = (function (a,b){
var G__8264 = (((a == null))?x:a);
var G__8265 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8264,G__8265) : f.call(null,G__8264,G__8265));
});
var G__8281__3 = (function (a,b,c){
var G__8266 = (((a == null))?x:a);
var G__8267 = (((b == null))?y:b);
var G__8268 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8266,G__8267,G__8268) : f.call(null,G__8266,G__8267,G__8268));
});
var G__8281__4 = (function() { 
var G__8282__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8282 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8283__i = 0, G__8283__a = new Array(arguments.length -  3);
while (G__8283__i < G__8283__a.length) {G__8283__a[G__8283__i] = arguments[G__8283__i + 3]; ++G__8283__i;}
  ds = new cljs.core.IndexedSeq(G__8283__a,0);
} 
return G__8282__delegate.call(this,a,b,c,ds);};
G__8282.cljs$lang$maxFixedArity = 3;
G__8282.cljs$lang$applyTo = (function (arglist__8284){
var a = cljs.core.first(arglist__8284);
arglist__8284 = cljs.core.next(arglist__8284);
var b = cljs.core.first(arglist__8284);
arglist__8284 = cljs.core.next(arglist__8284);
var c = cljs.core.first(arglist__8284);
var ds = cljs.core.rest(arglist__8284);
return G__8282__delegate(a,b,c,ds);
});
G__8282.cljs$core$IFn$_invoke$arity$variadic = G__8282__delegate;
return G__8282;
})()
;
G__8281 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8281__2.call(this,a,b);
case 3:
return G__8281__3.call(this,a,b,c);
default:
var G__8285 = null;
if (arguments.length > 3) {
var G__8286__i = 0, G__8286__a = new Array(arguments.length -  3);
while (G__8286__i < G__8286__a.length) {G__8286__a[G__8286__i] = arguments[G__8286__i + 3]; ++G__8286__i;}
G__8285 = new cljs.core.IndexedSeq(G__8286__a,0);
}
return G__8281__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8281.cljs$lang$maxFixedArity = 3;
G__8281.cljs$lang$applyTo = G__8281__4.cljs$lang$applyTo;
G__8281.cljs$core$IFn$_invoke$arity$2 = G__8281__2;
G__8281.cljs$core$IFn$_invoke$arity$3 = G__8281__3;
G__8281.cljs$core$IFn$_invoke$arity$variadic = G__8281__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8281;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8317 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8317) : cljs.core.volatile_BANG_.call(null,G__8317));
})();
return ((function (i){
return (function() {
var G__8347 = null;
var G__8347__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8347__1 = (function (result){
var G__8318 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8318) : rf.call(null,G__8318));
});
var G__8347__2 = (function (result,input){
var G__8319 = result;
var G__8320 = (function (){var G__8321 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8322 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8321,G__8322) : f.call(null,G__8321,G__8322));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8319,G__8320) : rf.call(null,G__8319,G__8320));
});
G__8347 = function(result,input){
switch(arguments.length){
case 0:
return G__8347__0.call(this);
case 1:
return G__8347__1.call(this,result);
case 2:
return G__8347__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8347.cljs$core$IFn$_invoke$arity$0 = G__8347__0;
G__8347.cljs$core$IFn$_invoke$arity$1 = G__8347__1;
G__8347.cljs$core$IFn$_invoke$arity$2 = G__8347__2;
return G__8347;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___8348 = size;
var i_8349 = (0);
while(true){
if((i_8349 < n__4440__auto___8348)){
cljs.core.chunk_append(b,(function (){var G__8343 = (idx + i_8349);
var G__8344 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8349);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8343,G__8344) : f.call(null,G__8343,G__8344));
})());

var G__8350 = (i_8349 + (1));
i_8349 = G__8350;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8345 = idx;
var G__8346 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8345,G__8346) : f.call(null,G__8345,G__8346));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8369 = null;
var G__8369__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8369__1 = (function (result){
var G__8363 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8363) : rf.call(null,G__8363));
});
var G__8369__2 = (function (result,input){
var v = (function (){var G__8364 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8364) : f.call(null,G__8364));
})();
if((v == null)){
return result;
} else {
var G__8365 = result;
var G__8366 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8365,G__8366) : rf.call(null,G__8365,G__8366));
}
});
G__8369 = function(result,input){
switch(arguments.length){
case 0:
return G__8369__0.call(this);
case 1:
return G__8369__1.call(this,result);
case 2:
return G__8369__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8369.cljs$core$IFn$_invoke$arity$0 = G__8369__0;
G__8369.cljs$core$IFn$_invoke$arity$1 = G__8369__1;
G__8369.cljs$core$IFn$_invoke$arity$2 = G__8369__2;
return G__8369;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___8370 = size;
var i_8371 = (0);
while(true){
if((i_8371 < n__4440__auto___8370)){
var x_8372 = (function (){var G__8367 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8371);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8367) : f.call(null,G__8367));
})();
if((x_8372 == null)){
} else {
cljs.core.chunk_append(b,x_8372);
}

var G__8373 = (i_8371 + (1));
i_8371 = G__8373;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8368 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8368) : f.call(null,G__8368));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8374 = this$__$1;
return goog.getUid(G__8374);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8375 = cljs.core.seq(self__.watches);
var chunk__8376 = null;
var count__8377 = (0);
var i__8378 = (0);
while(true){
if((i__8378 < count__8377)){
var vec__8379 = chunk__8376.cljs$core$IIndexed$_nth$arity$2(null,i__8378);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8379,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8379,(1),null);
var G__8380_8389 = key;
var G__8381_8390 = this$__$1;
var G__8382_8391 = oldval;
var G__8383_8392 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8380_8389,G__8381_8390,G__8382_8391,G__8383_8392) : f.call(null,G__8380_8389,G__8381_8390,G__8382_8391,G__8383_8392));

var G__8393 = seq__8375;
var G__8394 = chunk__8376;
var G__8395 = count__8377;
var G__8396 = (i__8378 + (1));
seq__8375 = G__8393;
chunk__8376 = G__8394;
count__8377 = G__8395;
i__8378 = G__8396;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8375);
if(temp__4126__auto__){
var seq__8375__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8375__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__8375__$1);
var G__8397 = cljs.core.chunk_rest(seq__8375__$1);
var G__8398 = c__4340__auto__;
var G__8399 = cljs.core.count(c__4340__auto__);
var G__8400 = (0);
seq__8375 = G__8397;
chunk__8376 = G__8398;
count__8377 = G__8399;
i__8378 = G__8400;
continue;
} else {
var vec__8384 = cljs.core.first(seq__8375__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8384,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8384,(1),null);
var G__8385_8401 = key;
var G__8386_8402 = this$__$1;
var G__8387_8403 = oldval;
var G__8388_8404 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8385_8401,G__8386_8402,G__8387_8403,G__8388_8404) : f.call(null,G__8385_8401,G__8386_8402,G__8387_8403,G__8388_8404));

var G__8405 = cljs.core.next(seq__8375__$1);
var G__8406 = null;
var G__8407 = (0);
var G__8408 = (0);
seq__8375 = G__8405;
chunk__8376 = G__8406;
count__8377 = G__8407;
i__8378 = G__8408;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8412__delegate = function (x,p__8409){
var map__8411 = p__8409;
var map__8411__$1 = ((cljs.core.seq_QMARK_(map__8411))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8411):map__8411);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8411__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8411__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8412 = function (x,var_args){
var p__8409 = null;
if (arguments.length > 1) {
var G__8413__i = 0, G__8413__a = new Array(arguments.length -  1);
while (G__8413__i < G__8413__a.length) {G__8413__a[G__8413__i] = arguments[G__8413__i + 1]; ++G__8413__i;}
  p__8409 = new cljs.core.IndexedSeq(G__8413__a,0);
} 
return G__8412__delegate.call(this,x,p__8409);};
G__8412.cljs$lang$maxFixedArity = 1;
G__8412.cljs$lang$applyTo = (function (arglist__8414){
var x = cljs.core.first(arglist__8414);
var p__8409 = cljs.core.rest(arglist__8414);
return G__8412__delegate(x,p__8409);
});
G__8412.cljs$core$IFn$_invoke$arity$variadic = G__8412__delegate;
return G__8412;
})()
;
atom = function(x,var_args){
var p__8409 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8415 = null;
if (arguments.length > 1) {
var G__8416__i = 0, G__8416__a = new Array(arguments.length -  1);
while (G__8416__i < G__8416__a.length) {G__8416__a[G__8416__i] = arguments[G__8416__i + 1]; ++G__8416__i;}
G__8415 = new cljs.core.IndexedSeq(G__8416__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8419 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8419) : validate.call(null,G__8419));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8420 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8420) : cljs.core.pr_str.call(null,G__8420));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8427 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8427) : f.call(null,G__8427));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8428 = a.state;
var G__8429 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8428,G__8429) : f.call(null,G__8428,G__8429));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8430 = a.state;
var G__8431 = x;
var G__8432 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8430,G__8431,G__8432) : f.call(null,G__8430,G__8431,G__8432));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8433__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8433 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8434__i = 0, G__8434__a = new Array(arguments.length -  4);
while (G__8434__i < G__8434__a.length) {G__8434__a[G__8434__i] = arguments[G__8434__i + 4]; ++G__8434__i;}
  more = new cljs.core.IndexedSeq(G__8434__a,0);
} 
return G__8433__delegate.call(this,a,f,x,y,more);};
G__8433.cljs$lang$maxFixedArity = 4;
G__8433.cljs$lang$applyTo = (function (arglist__8435){
var a = cljs.core.first(arglist__8435);
arglist__8435 = cljs.core.next(arglist__8435);
var f = cljs.core.first(arglist__8435);
arglist__8435 = cljs.core.next(arglist__8435);
var x = cljs.core.first(arglist__8435);
arglist__8435 = cljs.core.next(arglist__8435);
var y = cljs.core.first(arglist__8435);
var more = cljs.core.rest(arglist__8435);
return G__8433__delegate(a,f,x,y,more);
});
G__8433.cljs$core$IFn$_invoke$arity$variadic = G__8433__delegate;
return G__8433;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8436 = null;
if (arguments.length > 4) {
var G__8437__i = 0, G__8437__a = new Array(arguments.length -  4);
while (G__8437__i < G__8437__a.length) {G__8437__a[G__8437__i] = arguments[G__8437__i + 4]; ++G__8437__i;}
G__8436 = new cljs.core.IndexedSeq(G__8437__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8504 = null;
var G__8504__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8504__1 = (function (result){
var G__8471 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8471) : rf.call(null,G__8471));
});
var G__8504__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8472 = i;
var G__8473 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8472,G__8473) : f.call(null,G__8472,G__8473));
})();
if((v == null)){
return result;
} else {
var G__8474 = result;
var G__8475 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8474,G__8475) : rf.call(null,G__8474,G__8475));
}
});
G__8504 = function(result,input){
switch(arguments.length){
case 0:
return G__8504__0.call(this);
case 1:
return G__8504__1.call(this,result);
case 2:
return G__8504__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8504.cljs$core$IFn$_invoke$arity$0 = G__8504__0;
G__8504.cljs$core$IFn$_invoke$arity$1 = G__8504__1;
G__8504.cljs$core$IFn$_invoke$arity$2 = G__8504__2;
return G__8504;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___8505 = size;
var i_8506 = (0);
while(true){
if((i_8506 < n__4440__auto___8505)){
var x_8507 = (function (){var G__8500 = (idx + i_8506);
var G__8501 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8506);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8500,G__8501) : f.call(null,G__8500,G__8501));
})();
if((x_8507 == null)){
} else {
cljs.core.chunk_append(b,x_8507);
}

var G__8508 = (i_8506 + (1));
i_8506 = G__8508;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8502 = idx;
var G__8503 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8502,G__8503) : f.call(null,G__8502,G__8503));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8722 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8722) : p.call(null,G__8722));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8724 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8724) : p.call(null,G__8724));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__8725 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8725) : p.call(null,G__8725));
} else {
return and__3541__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8727 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8727) : p.call(null,G__8727));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8729 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8729) : p.call(null,G__8729));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__8730 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8730) : p.call(null,G__8730));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__8899__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8899 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8900__i = 0, G__8900__a = new Array(arguments.length -  3);
while (G__8900__i < G__8900__a.length) {G__8900__a[G__8900__i] = arguments[G__8900__i + 3]; ++G__8900__i;}
  args = new cljs.core.IndexedSeq(G__8900__a,0);
} 
return G__8899__delegate.call(this,x,y,z,args);};
G__8899.cljs$lang$maxFixedArity = 3;
G__8899.cljs$lang$applyTo = (function (arglist__8901){
var x = cljs.core.first(arglist__8901);
arglist__8901 = cljs.core.next(arglist__8901);
var y = cljs.core.first(arglist__8901);
arglist__8901 = cljs.core.next(arglist__8901);
var z = cljs.core.first(arglist__8901);
var args = cljs.core.rest(arglist__8901);
return G__8899__delegate(x,y,z,args);
});
G__8899.cljs$core$IFn$_invoke$arity$variadic = G__8899__delegate;
return G__8899;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__8902 = null;
if (arguments.length > 3) {
var G__8903__i = 0, G__8903__a = new Array(arguments.length -  3);
while (G__8903__i < G__8903__a.length) {G__8903__a[G__8903__i] = arguments[G__8903__i + 3]; ++G__8903__i;}
G__8902 = new cljs.core.IndexedSeq(G__8903__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8762 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8762) : p1.call(null,G__8762));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__8763 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8763) : p2.call(null,G__8763));
} else {
return and__3541__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8765 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8765) : p1.call(null,G__8765));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8767 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8767) : p1.call(null,G__8767));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__8769 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8769) : p2.call(null,G__8769));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var G__8770 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8770) : p2.call(null,G__8770));
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8772 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8772) : p1.call(null,G__8772));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8774 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8774) : p1.call(null,G__8774));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__8776 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8776) : p1.call(null,G__8776));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var and__3541__auto____$3 = (function (){var G__8778 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8778) : p2.call(null,G__8778));
})();
if(cljs.core.truth_(and__3541__auto____$3)){
var and__3541__auto____$4 = (function (){var G__8780 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8780) : p2.call(null,G__8780));
})();
if(cljs.core.truth_(and__3541__auto____$4)){
var G__8781 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8781) : p2.call(null,G__8781));
} else {
return and__3541__auto____$4;
}
} else {
return and__3541__auto____$3;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__8904__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8509_SHARP_){
var and__3541__auto__ = (function (){var G__8786 = p1__8509_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8786) : p1.call(null,G__8786));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__8787 = p1__8509_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8787) : p2.call(null,G__8787));
} else {
return and__3541__auto__;
}
}),args)));
};
var G__8904 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8905__i = 0, G__8905__a = new Array(arguments.length -  3);
while (G__8905__i < G__8905__a.length) {G__8905__a[G__8905__i] = arguments[G__8905__i + 3]; ++G__8905__i;}
  args = new cljs.core.IndexedSeq(G__8905__a,0);
} 
return G__8904__delegate.call(this,x,y,z,args);};
G__8904.cljs$lang$maxFixedArity = 3;
G__8904.cljs$lang$applyTo = (function (arglist__8906){
var x = cljs.core.first(arglist__8906);
arglist__8906 = cljs.core.next(arglist__8906);
var y = cljs.core.first(arglist__8906);
arglist__8906 = cljs.core.next(arglist__8906);
var z = cljs.core.first(arglist__8906);
var args = cljs.core.rest(arglist__8906);
return G__8904__delegate(x,y,z,args);
});
G__8904.cljs$core$IFn$_invoke$arity$variadic = G__8904__delegate;
return G__8904;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__8907 = null;
if (arguments.length > 3) {
var G__8908__i = 0, G__8908__a = new Array(arguments.length -  3);
while (G__8908__i < G__8908__a.length) {G__8908__a[G__8908__i] = arguments[G__8908__i + 3]; ++G__8908__i;}
G__8907 = new cljs.core.IndexedSeq(G__8908__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8833 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8833) : p1.call(null,G__8833));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8835 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8835) : p2.call(null,G__8835));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__8836 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8836) : p3.call(null,G__8836));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8838 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8838) : p1.call(null,G__8838));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8840 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8840) : p2.call(null,G__8840));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__8842 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8842) : p3.call(null,G__8842));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var and__3541__auto____$3 = (function (){var G__8844 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8844) : p1.call(null,G__8844));
})();
if(cljs.core.truth_(and__3541__auto____$3)){
var and__3541__auto____$4 = (function (){var G__8846 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8846) : p2.call(null,G__8846));
})();
if(cljs.core.truth_(and__3541__auto____$4)){
var G__8847 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8847) : p3.call(null,G__8847));
} else {
return and__3541__auto____$4;
}
} else {
return and__3541__auto____$3;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3541__auto__ = (function (){var G__8849 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8849) : p1.call(null,G__8849));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8851 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8851) : p2.call(null,G__8851));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var and__3541__auto____$2 = (function (){var G__8853 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8853) : p3.call(null,G__8853));
})();
if(cljs.core.truth_(and__3541__auto____$2)){
var and__3541__auto____$3 = (function (){var G__8855 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8855) : p1.call(null,G__8855));
})();
if(cljs.core.truth_(and__3541__auto____$3)){
var and__3541__auto____$4 = (function (){var G__8857 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8857) : p2.call(null,G__8857));
})();
if(cljs.core.truth_(and__3541__auto____$4)){
var and__3541__auto____$5 = (function (){var G__8859 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8859) : p3.call(null,G__8859));
})();
if(cljs.core.truth_(and__3541__auto____$5)){
var and__3541__auto____$6 = (function (){var G__8861 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8861) : p1.call(null,G__8861));
})();
if(cljs.core.truth_(and__3541__auto____$6)){
var and__3541__auto____$7 = (function (){var G__8863 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8863) : p2.call(null,G__8863));
})();
if(cljs.core.truth_(and__3541__auto____$7)){
var G__8864 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8864) : p3.call(null,G__8864));
} else {
return and__3541__auto____$7;
}
} else {
return and__3541__auto____$6;
}
} else {
return and__3541__auto____$5;
}
} else {
return and__3541__auto____$4;
}
} else {
return and__3541__auto____$3;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__8909__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8510_SHARP_){
var and__3541__auto__ = (function (){var G__8871 = p1__8510_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8871) : p1.call(null,G__8871));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8873 = p1__8510_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8873) : p2.call(null,G__8873));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__8874 = p1__8510_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8874) : p3.call(null,G__8874));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
}),args)));
};
var G__8909 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8910__i = 0, G__8910__a = new Array(arguments.length -  3);
while (G__8910__i < G__8910__a.length) {G__8910__a[G__8910__i] = arguments[G__8910__i + 3]; ++G__8910__i;}
  args = new cljs.core.IndexedSeq(G__8910__a,0);
} 
return G__8909__delegate.call(this,x,y,z,args);};
G__8909.cljs$lang$maxFixedArity = 3;
G__8909.cljs$lang$applyTo = (function (arglist__8911){
var x = cljs.core.first(arglist__8911);
arglist__8911 = cljs.core.next(arglist__8911);
var y = cljs.core.first(arglist__8911);
arglist__8911 = cljs.core.next(arglist__8911);
var z = cljs.core.first(arglist__8911);
var args = cljs.core.rest(arglist__8911);
return G__8909__delegate(x,y,z,args);
});
G__8909.cljs$core$IFn$_invoke$arity$variadic = G__8909__delegate;
return G__8909;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__8912 = null;
if (arguments.length > 3) {
var G__8913__i = 0, G__8913__a = new Array(arguments.length -  3);
while (G__8913__i < G__8913__a.length) {G__8913__a[G__8913__i] = arguments[G__8913__i + 3]; ++G__8913__i;}
G__8912 = new cljs.core.IndexedSeq(G__8913__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__8914__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8511_SHARP_){
var G__8890 = x;
return (p1__8511_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8511_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8890) : p1__8511_SHARP_.call(null,G__8890));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8512_SHARP_){
var and__3541__auto__ = (function (){var G__8892 = x;
return (p1__8512_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8512_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8892) : p1__8512_SHARP_.call(null,G__8892));
})();
if(cljs.core.truth_(and__3541__auto__)){
var G__8893 = y;
return (p1__8512_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8512_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8893) : p1__8512_SHARP_.call(null,G__8893));
} else {
return and__3541__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8513_SHARP_){
var and__3541__auto__ = (function (){var G__8895 = x;
return (p1__8513_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8513_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8895) : p1__8513_SHARP_.call(null,G__8895));
})();
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__8897 = y;
return (p1__8513_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8513_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8897) : p1__8513_SHARP_.call(null,G__8897));
})();
if(cljs.core.truth_(and__3541__auto____$1)){
var G__8898 = z;
return (p1__8513_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8513_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8898) : p1__8513_SHARP_.call(null,G__8898));
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__8915__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8514_SHARP_){
return cljs.core.every_QMARK_(p1__8514_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8915 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8916__i = 0, G__8916__a = new Array(arguments.length -  3);
while (G__8916__i < G__8916__a.length) {G__8916__a[G__8916__i] = arguments[G__8916__i + 3]; ++G__8916__i;}
  args = new cljs.core.IndexedSeq(G__8916__a,0);
} 
return G__8915__delegate.call(this,x,y,z,args);};
G__8915.cljs$lang$maxFixedArity = 3;
G__8915.cljs$lang$applyTo = (function (arglist__8917){
var x = cljs.core.first(arglist__8917);
arglist__8917 = cljs.core.next(arglist__8917);
var y = cljs.core.first(arglist__8917);
arglist__8917 = cljs.core.next(arglist__8917);
var z = cljs.core.first(arglist__8917);
var args = cljs.core.rest(arglist__8917);
return G__8915__delegate(x,y,z,args);
});
G__8915.cljs$core$IFn$_invoke$arity$variadic = G__8915__delegate;
return G__8915;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__8918 = null;
if (arguments.length > 3) {
var G__8919__i = 0, G__8919__a = new Array(arguments.length -  3);
while (G__8919__i < G__8919__a.length) {G__8919__a[G__8919__i] = arguments[G__8919__i + 3]; ++G__8919__i;}
G__8918 = new cljs.core.IndexedSeq(G__8919__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8918);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__8914 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8920__i = 0, G__8920__a = new Array(arguments.length -  3);
while (G__8920__i < G__8920__a.length) {G__8920__a[G__8920__i] = arguments[G__8920__i + 3]; ++G__8920__i;}
  ps = new cljs.core.IndexedSeq(G__8920__a,0);
} 
return G__8914__delegate.call(this,p1,p2,p3,ps);};
G__8914.cljs$lang$maxFixedArity = 3;
G__8914.cljs$lang$applyTo = (function (arglist__8921){
var p1 = cljs.core.first(arglist__8921);
arglist__8921 = cljs.core.next(arglist__8921);
var p2 = cljs.core.first(arglist__8921);
arglist__8921 = cljs.core.next(arglist__8921);
var p3 = cljs.core.first(arglist__8921);
var ps = cljs.core.rest(arglist__8921);
return G__8914__delegate(p1,p2,p3,ps);
});
G__8914.cljs$core$IFn$_invoke$arity$variadic = G__8914__delegate;
return G__8914;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__8922 = null;
if (arguments.length > 3) {
var G__8923__i = 0, G__8923__a = new Array(arguments.length -  3);
while (G__8923__i < G__8923__a.length) {G__8923__a[G__8923__i] = arguments[G__8923__i + 3]; ++G__8923__i;}
G__8922 = new cljs.core.IndexedSeq(G__8923__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__9129 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9129) : p.call(null,G__9129));
});
var sp1__2 = (function (x,y){
var or__3553__auto__ = (function (){var G__9131 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9131) : p.call(null,G__9131));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__9132 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9132) : p.call(null,G__9132));
}
});
var sp1__3 = (function (x,y,z){
var or__3553__auto__ = (function (){var G__9134 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9134) : p.call(null,G__9134));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9136 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9136) : p.call(null,G__9136));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__9137 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9137) : p.call(null,G__9137));
}
}
});
var sp1__4 = (function() { 
var G__9298__delegate = function (x,y,z,args){
var or__3553__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9298 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9299__i = 0, G__9299__a = new Array(arguments.length -  3);
while (G__9299__i < G__9299__a.length) {G__9299__a[G__9299__i] = arguments[G__9299__i + 3]; ++G__9299__i;}
  args = new cljs.core.IndexedSeq(G__9299__a,0);
} 
return G__9298__delegate.call(this,x,y,z,args);};
G__9298.cljs$lang$maxFixedArity = 3;
G__9298.cljs$lang$applyTo = (function (arglist__9300){
var x = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var y = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var z = cljs.core.first(arglist__9300);
var args = cljs.core.rest(arglist__9300);
return G__9298__delegate(x,y,z,args);
});
G__9298.cljs$core$IFn$_invoke$arity$variadic = G__9298__delegate;
return G__9298;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9301 = null;
if (arguments.length > 3) {
var G__9302__i = 0, G__9302__a = new Array(arguments.length -  3);
while (G__9302__i < G__9302__a.length) {G__9302__a[G__9302__i] = arguments[G__9302__i + 3]; ++G__9302__i;}
G__9301 = new cljs.core.IndexedSeq(G__9302__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3553__auto__ = (function (){var G__9169 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9169) : p1.call(null,G__9169));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__9170 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9170) : p2.call(null,G__9170));
}
});
var sp2__2 = (function (x,y){
var or__3553__auto__ = (function (){var G__9172 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9172) : p1.call(null,G__9172));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9174 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9174) : p1.call(null,G__9174));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__9176 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9176) : p2.call(null,G__9176));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var G__9177 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9177) : p2.call(null,G__9177));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3553__auto__ = (function (){var G__9179 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9179) : p1.call(null,G__9179));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9181 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9181) : p1.call(null,G__9181));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__9183 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9183) : p1.call(null,G__9183));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var or__3553__auto____$3 = (function (){var G__9185 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9185) : p2.call(null,G__9185));
})();
if(cljs.core.truth_(or__3553__auto____$3)){
return or__3553__auto____$3;
} else {
var or__3553__auto____$4 = (function (){var G__9187 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9187) : p2.call(null,G__9187));
})();
if(cljs.core.truth_(or__3553__auto____$4)){
return or__3553__auto____$4;
} else {
var G__9188 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9188) : p2.call(null,G__9188));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9303__delegate = function (x,y,z,args){
var or__3553__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(((function (or__3553__auto__){
return (function (p1__8924_SHARP_){
var or__3553__auto____$1 = (function (){var G__9190 = p1__8924_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9190) : p1.call(null,G__9190));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__9191 = p1__8924_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9191) : p2.call(null,G__9191));
}
});})(or__3553__auto__))
,args);
}
};
var G__9303 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9304__i = 0, G__9304__a = new Array(arguments.length -  3);
while (G__9304__i < G__9304__a.length) {G__9304__a[G__9304__i] = arguments[G__9304__i + 3]; ++G__9304__i;}
  args = new cljs.core.IndexedSeq(G__9304__a,0);
} 
return G__9303__delegate.call(this,x,y,z,args);};
G__9303.cljs$lang$maxFixedArity = 3;
G__9303.cljs$lang$applyTo = (function (arglist__9305){
var x = cljs.core.first(arglist__9305);
arglist__9305 = cljs.core.next(arglist__9305);
var y = cljs.core.first(arglist__9305);
arglist__9305 = cljs.core.next(arglist__9305);
var z = cljs.core.first(arglist__9305);
var args = cljs.core.rest(arglist__9305);
return G__9303__delegate(x,y,z,args);
});
G__9303.cljs$core$IFn$_invoke$arity$variadic = G__9303__delegate;
return G__9303;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9306 = null;
if (arguments.length > 3) {
var G__9307__i = 0, G__9307__a = new Array(arguments.length -  3);
while (G__9307__i < G__9307__a.length) {G__9307__a[G__9307__i] = arguments[G__9307__i + 3]; ++G__9307__i;}
G__9306 = new cljs.core.IndexedSeq(G__9307__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9306);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3553__auto__ = (function (){var G__9237 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9237) : p1.call(null,G__9237));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9239 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9239) : p2.call(null,G__9239));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__9240 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9240) : p3.call(null,G__9240));
}
}
});
var sp3__2 = (function (x,y){
var or__3553__auto__ = (function (){var G__9242 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9242) : p1.call(null,G__9242));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9244 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9244) : p2.call(null,G__9244));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__9246 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9246) : p3.call(null,G__9246));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var or__3553__auto____$3 = (function (){var G__9248 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9248) : p1.call(null,G__9248));
})();
if(cljs.core.truth_(or__3553__auto____$3)){
return or__3553__auto____$3;
} else {
var or__3553__auto____$4 = (function (){var G__9250 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9250) : p2.call(null,G__9250));
})();
if(cljs.core.truth_(or__3553__auto____$4)){
return or__3553__auto____$4;
} else {
var G__9251 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9251) : p3.call(null,G__9251));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3553__auto__ = (function (){var G__9253 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9253) : p1.call(null,G__9253));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9255 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9255) : p2.call(null,G__9255));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__9257 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9257) : p3.call(null,G__9257));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var or__3553__auto____$3 = (function (){var G__9259 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9259) : p1.call(null,G__9259));
})();
if(cljs.core.truth_(or__3553__auto____$3)){
return or__3553__auto____$3;
} else {
var or__3553__auto____$4 = (function (){var G__9261 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9261) : p2.call(null,G__9261));
})();
if(cljs.core.truth_(or__3553__auto____$4)){
return or__3553__auto____$4;
} else {
var or__3553__auto____$5 = (function (){var G__9263 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9263) : p3.call(null,G__9263));
})();
if(cljs.core.truth_(or__3553__auto____$5)){
return or__3553__auto____$5;
} else {
var or__3553__auto____$6 = (function (){var G__9265 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9265) : p1.call(null,G__9265));
})();
if(cljs.core.truth_(or__3553__auto____$6)){
return or__3553__auto____$6;
} else {
var or__3553__auto____$7 = (function (){var G__9267 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9267) : p2.call(null,G__9267));
})();
if(cljs.core.truth_(or__3553__auto____$7)){
return or__3553__auto____$7;
} else {
var G__9268 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9268) : p3.call(null,G__9268));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9308__delegate = function (x,y,z,args){
var or__3553__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(((function (or__3553__auto__){
return (function (p1__8925_SHARP_){
var or__3553__auto____$1 = (function (){var G__9270 = p1__8925_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9270) : p1.call(null,G__9270));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var G__9272 = p1__8925_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9272) : p2.call(null,G__9272));
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
var G__9273 = p1__8925_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9273) : p3.call(null,G__9273));
}
}
});})(or__3553__auto__))
,args);
}
};
var G__9308 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9309__i = 0, G__9309__a = new Array(arguments.length -  3);
while (G__9309__i < G__9309__a.length) {G__9309__a[G__9309__i] = arguments[G__9309__i + 3]; ++G__9309__i;}
  args = new cljs.core.IndexedSeq(G__9309__a,0);
} 
return G__9308__delegate.call(this,x,y,z,args);};
G__9308.cljs$lang$maxFixedArity = 3;
G__9308.cljs$lang$applyTo = (function (arglist__9310){
var x = cljs.core.first(arglist__9310);
arglist__9310 = cljs.core.next(arglist__9310);
var y = cljs.core.first(arglist__9310);
arglist__9310 = cljs.core.next(arglist__9310);
var z = cljs.core.first(arglist__9310);
var args = cljs.core.rest(arglist__9310);
return G__9308__delegate(x,y,z,args);
});
G__9308.cljs$core$IFn$_invoke$arity$variadic = G__9308__delegate;
return G__9308;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9311 = null;
if (arguments.length > 3) {
var G__9312__i = 0, G__9312__a = new Array(arguments.length -  3);
while (G__9312__i < G__9312__a.length) {G__9312__a[G__9312__i] = arguments[G__9312__i + 3]; ++G__9312__i;}
G__9311 = new cljs.core.IndexedSeq(G__9312__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9313__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8926_SHARP_){
var G__9289 = x;
return (p1__8926_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8926_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9289) : p1__8926_SHARP_.call(null,G__9289));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8927_SHARP_){
var or__3553__auto__ = (function (){var G__9291 = x;
return (p1__8927_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8927_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9291) : p1__8927_SHARP_.call(null,G__9291));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var G__9292 = y;
return (p1__8927_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8927_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9292) : p1__8927_SHARP_.call(null,G__9292));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8928_SHARP_){
var or__3553__auto__ = (function (){var G__9294 = x;
return (p1__8928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9294) : p1__8928_SHARP_.call(null,G__9294));
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var G__9296 = y;
return (p1__8928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9296) : p1__8928_SHARP_.call(null,G__9296));
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var G__9297 = z;
return (p1__8928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9297) : p1__8928_SHARP_.call(null,G__9297));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9314__delegate = function (x,y,z,args){
var or__3553__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.some(((function (or__3553__auto__,ps__$1){
return (function (p1__8929_SHARP_){
return cljs.core.some(p1__8929_SHARP_,args);
});})(or__3553__auto__,ps__$1))
,ps__$1);
}
};
var G__9314 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9315__i = 0, G__9315__a = new Array(arguments.length -  3);
while (G__9315__i < G__9315__a.length) {G__9315__a[G__9315__i] = arguments[G__9315__i + 3]; ++G__9315__i;}
  args = new cljs.core.IndexedSeq(G__9315__a,0);
} 
return G__9314__delegate.call(this,x,y,z,args);};
G__9314.cljs$lang$maxFixedArity = 3;
G__9314.cljs$lang$applyTo = (function (arglist__9316){
var x = cljs.core.first(arglist__9316);
arglist__9316 = cljs.core.next(arglist__9316);
var y = cljs.core.first(arglist__9316);
arglist__9316 = cljs.core.next(arglist__9316);
var z = cljs.core.first(arglist__9316);
var args = cljs.core.rest(arglist__9316);
return G__9314__delegate(x,y,z,args);
});
G__9314.cljs$core$IFn$_invoke$arity$variadic = G__9314__delegate;
return G__9314;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9317 = null;
if (arguments.length > 3) {
var G__9318__i = 0, G__9318__a = new Array(arguments.length -  3);
while (G__9318__i < G__9318__a.length) {G__9318__a[G__9318__i] = arguments[G__9318__i + 3]; ++G__9318__i;}
G__9317 = new cljs.core.IndexedSeq(G__9318__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9313 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9319__i = 0, G__9319__a = new Array(arguments.length -  3);
while (G__9319__i < G__9319__a.length) {G__9319__a[G__9319__i] = arguments[G__9319__i + 3]; ++G__9319__i;}
  ps = new cljs.core.IndexedSeq(G__9319__a,0);
} 
return G__9313__delegate.call(this,p1,p2,p3,ps);};
G__9313.cljs$lang$maxFixedArity = 3;
G__9313.cljs$lang$applyTo = (function (arglist__9320){
var p1 = cljs.core.first(arglist__9320);
arglist__9320 = cljs.core.next(arglist__9320);
var p2 = cljs.core.first(arglist__9320);
arglist__9320 = cljs.core.next(arglist__9320);
var p3 = cljs.core.first(arglist__9320);
var ps = cljs.core.rest(arglist__9320);
return G__9313__delegate(p1,p2,p3,ps);
});
G__9313.cljs$core$IFn$_invoke$arity$variadic = G__9313__delegate;
return G__9313;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9321 = null;
if (arguments.length > 3) {
var G__9322__i = 0, G__9322__a = new Array(arguments.length -  3);
while (G__9322__i < G__9322__a.length) {G__9322__a[G__9322__i] = arguments[G__9322__i + 3]; ++G__9322__i;}
G__9321 = new cljs.core.IndexedSeq(G__9322__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9377 = null;
var G__9377__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9377__1 = (function (result){
var G__9363 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9363) : rf.call(null,G__9363));
});
var G__9377__2 = (function (result,input){
var G__9364 = result;
var G__9365 = (function (){var G__9366 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9366) : f.call(null,G__9366));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9364,G__9365) : rf.call(null,G__9364,G__9365));
});
var G__9377__3 = (function() { 
var G__9378__delegate = function (result,input,inputs){
var G__9367 = result;
var G__9368 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9367,G__9368) : rf.call(null,G__9367,G__9368));
};
var G__9378 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9379__i = 0, G__9379__a = new Array(arguments.length -  2);
while (G__9379__i < G__9379__a.length) {G__9379__a[G__9379__i] = arguments[G__9379__i + 2]; ++G__9379__i;}
  inputs = new cljs.core.IndexedSeq(G__9379__a,0);
} 
return G__9378__delegate.call(this,result,input,inputs);};
G__9378.cljs$lang$maxFixedArity = 2;
G__9378.cljs$lang$applyTo = (function (arglist__9380){
var result = cljs.core.first(arglist__9380);
arglist__9380 = cljs.core.next(arglist__9380);
var input = cljs.core.first(arglist__9380);
var inputs = cljs.core.rest(arglist__9380);
return G__9378__delegate(result,input,inputs);
});
G__9378.cljs$core$IFn$_invoke$arity$variadic = G__9378__delegate;
return G__9378;
})()
;
G__9377 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9377__0.call(this);
case 1:
return G__9377__1.call(this,result);
case 2:
return G__9377__2.call(this,result,input);
default:
var G__9381 = null;
if (arguments.length > 2) {
var G__9382__i = 0, G__9382__a = new Array(arguments.length -  2);
while (G__9382__i < G__9382__a.length) {G__9382__a[G__9382__i] = arguments[G__9382__i + 2]; ++G__9382__i;}
G__9381 = new cljs.core.IndexedSeq(G__9382__a,0);
}
return G__9377__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9377.cljs$lang$maxFixedArity = 2;
G__9377.cljs$lang$applyTo = G__9377__3.cljs$lang$applyTo;
G__9377.cljs$core$IFn$_invoke$arity$0 = G__9377__0;
G__9377.cljs$core$IFn$_invoke$arity$1 = G__9377__1;
G__9377.cljs$core$IFn$_invoke$arity$2 = G__9377__2;
G__9377.cljs$core$IFn$_invoke$arity$variadic = G__9377__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9377;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___9383 = size;
var i_9384 = (0);
while(true){
if((i_9384 < n__4440__auto___9383)){
cljs.core.chunk_append(b,(function (){var G__9369 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9384);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9369) : f.call(null,G__9369));
})());

var G__9385 = (i_9384 + (1));
i_9384 = G__9385;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9370 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9370) : f.call(null,G__9370));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9371 = cljs.core.first(s1);
var G__9372 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9371,G__9372) : f.call(null,G__9371,G__9372));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9373 = cljs.core.first(s1);
var G__9374 = cljs.core.first(s2);
var G__9375 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9373,G__9374,G__9375) : f.call(null,G__9373,G__9374,G__9375));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9386__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9323_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9323_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9386 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9387__i = 0, G__9387__a = new Array(arguments.length -  4);
while (G__9387__i < G__9387__a.length) {G__9387__a[G__9387__i] = arguments[G__9387__i + 4]; ++G__9387__i;}
  colls = new cljs.core.IndexedSeq(G__9387__a,0);
} 
return G__9386__delegate.call(this,f,c1,c2,c3,colls);};
G__9386.cljs$lang$maxFixedArity = 4;
G__9386.cljs$lang$applyTo = (function (arglist__9388){
var f = cljs.core.first(arglist__9388);
arglist__9388 = cljs.core.next(arglist__9388);
var c1 = cljs.core.first(arglist__9388);
arglist__9388 = cljs.core.next(arglist__9388);
var c2 = cljs.core.first(arglist__9388);
arglist__9388 = cljs.core.next(arglist__9388);
var c3 = cljs.core.first(arglist__9388);
var colls = cljs.core.rest(arglist__9388);
return G__9386__delegate(f,c1,c2,c3,colls);
});
G__9386.cljs$core$IFn$_invoke$arity$variadic = G__9386__delegate;
return G__9386;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9389 = null;
if (arguments.length > 4) {
var G__9390__i = 0, G__9390__a = new Array(arguments.length -  4);
while (G__9390__i < G__9390__a.length) {G__9390__a[G__9390__i] = arguments[G__9390__i + 4]; ++G__9390__i;}
G__9389 = new cljs.core.IndexedSeq(G__9390__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9399 = null;
var G__9399__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9399__1 = (function (result){
var G__9396 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9396) : rf.call(null,G__9396));
});
var G__9399__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9397 = result;
var G__9398 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9397,G__9398) : rf.call(null,G__9397,G__9398));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9399 = function(result,input){
switch(arguments.length){
case 0:
return G__9399__0.call(this);
case 1:
return G__9399__1.call(this,result);
case 2:
return G__9399__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9399.cljs$core$IFn$_invoke$arity$0 = G__9399__0;
G__9399.cljs$core$IFn$_invoke$arity$1 = G__9399__1;
G__9399.cljs$core$IFn$_invoke$arity$2 = G__9399__2;
return G__9399;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9406 = null;
var G__9406__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9406__1 = (function (result){
var G__9403 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9403) : rf.call(null,G__9403));
});
var G__9406__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9404 = result;
var G__9405 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9404,G__9405) : rf.call(null,G__9404,G__9405));
}
});
G__9406 = function(result,input){
switch(arguments.length){
case 0:
return G__9406__0.call(this);
case 1:
return G__9406__1.call(this,result);
case 2:
return G__9406__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9406.cljs$core$IFn$_invoke$arity$0 = G__9406__0;
G__9406.cljs$core$IFn$_invoke$arity$1 = G__9406__1;
G__9406.cljs$core$IFn$_invoke$arity$2 = G__9406__2;
return G__9406;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9407 = (n__$1 - (1));
var G__9408 = cljs.core.rest(s);
n__$1 = G__9407;
coll__$1 = G__9408;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9411 = cljs.core.next(s);
var G__9412 = cljs.core.next(lead);
s = G__9411;
lead = G__9412;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9425 = null;
var G__9425__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9425__1 = (function (result){
var G__9419 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9419) : rf.call(null,G__9419));
});
var G__9425__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3541__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3541__auto__)){
var G__9420 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9420) : pred.call(null,G__9420));
} else {
return and__3541__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9421 = result;
var G__9422 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9421,G__9422) : rf.call(null,G__9421,G__9422));
}
});
G__9425 = function(result,input){
switch(arguments.length){
case 0:
return G__9425__0.call(this);
case 1:
return G__9425__1.call(this,result);
case 2:
return G__9425__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9425.cljs$core$IFn$_invoke$arity$0 = G__9425__0;
G__9425.cljs$core$IFn$_invoke$arity$1 = G__9425__1;
G__9425.cljs$core$IFn$_invoke$arity$2 = G__9425__2;
return G__9425;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3541__auto__ = s;
if(and__3541__auto__){
var G__9424 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9424) : pred__$1.call(null,G__9424));
} else {
return and__3541__auto__;
}
})())){
var G__9426 = pred__$1;
var G__9427 = cljs.core.rest(s);
pred__$1 = G__9426;
coll__$1 = G__9427;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9436 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9436) : f.call(null,G__9436));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9439__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9439 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9440__i = 0, G__9440__a = new Array(arguments.length -  2);
while (G__9440__i < G__9440__a.length) {G__9440__a[G__9440__i] = arguments[G__9440__i + 2]; ++G__9440__i;}
  colls = new cljs.core.IndexedSeq(G__9440__a,0);
} 
return G__9439__delegate.call(this,c1,c2,colls);};
G__9439.cljs$lang$maxFixedArity = 2;
G__9439.cljs$lang$applyTo = (function (arglist__9441){
var c1 = cljs.core.first(arglist__9441);
arglist__9441 = cljs.core.next(arglist__9441);
var c2 = cljs.core.first(arglist__9441);
var colls = cljs.core.rest(arglist__9441);
return G__9439__delegate(c1,c2,colls);
});
G__9439.cljs$core$IFn$_invoke$arity$variadic = G__9439__delegate;
return G__9439;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9442 = null;
if (arguments.length > 2) {
var G__9443__i = 0, G__9443__a = new Array(arguments.length -  2);
while (G__9443__i < G__9443__a.length) {G__9443__a[G__9443__i] = arguments[G__9443__i + 2]; ++G__9443__i;}
G__9442 = new cljs.core.IndexedSeq(G__9443__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9458 = null;
var G__9458__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9458__1 = (function (result){
var G__9451 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9451) : rf.call(null,G__9451));
});
var G__9458__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9452 = result;
var G__9453 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9452,G__9453) : rf.call(null,G__9452,G__9453));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9454 = sepr;
var G__9455 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9454,G__9455) : rf.call(null,G__9454,G__9455));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9456 = result;
var G__9457 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9456,G__9457) : rf.call(null,G__9456,G__9457));
}
});
G__9458 = function(result,input){
switch(arguments.length){
case 0:
return G__9458__0.call(this);
case 1:
return G__9458__1.call(this,result);
case 2:
return G__9458__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9458.cljs$core$IFn$_invoke$arity$0 = G__9458__0;
G__9458.cljs$core$IFn$_invoke$arity$1 = G__9458__1;
G__9458.cljs$core$IFn$_invoke$arity$2 = G__9458__2;
return G__9458;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9467__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9467 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9468__i = 0, G__9468__a = new Array(arguments.length -  1);
while (G__9468__i < G__9468__a.length) {G__9468__a[G__9468__i] = arguments[G__9468__i + 1]; ++G__9468__i;}
  colls = new cljs.core.IndexedSeq(G__9468__a,0);
} 
return G__9467__delegate.call(this,f,colls);};
G__9467.cljs$lang$maxFixedArity = 1;
G__9467.cljs$lang$applyTo = (function (arglist__9469){
var f = cljs.core.first(arglist__9469);
var colls = cljs.core.rest(arglist__9469);
return G__9467__delegate(f,colls);
});
G__9467.cljs$core$IFn$_invoke$arity$variadic = G__9467__delegate;
return G__9467;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9470 = null;
if (arguments.length > 1) {
var G__9471__i = 0, G__9471__a = new Array(arguments.length -  1);
while (G__9471__i < G__9471__a.length) {G__9471__a[G__9471__i] = arguments[G__9471__i + 1]; ++G__9471__i;}
G__9470 = new cljs.core.IndexedSeq(G__9471__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9490 = null;
var G__9490__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9490__1 = (function (result){
var G__9484 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9484) : rf.call(null,G__9484));
});
var G__9490__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9485 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9485) : pred.call(null,G__9485));
})())){
var G__9486 = result;
var G__9487 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9486,G__9487) : rf.call(null,G__9486,G__9487));
} else {
return result;
}
});
G__9490 = function(result,input){
switch(arguments.length){
case 0:
return G__9490__0.call(this);
case 1:
return G__9490__1.call(this,result);
case 2:
return G__9490__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9490.cljs$core$IFn$_invoke$arity$0 = G__9490__0;
G__9490.cljs$core$IFn$_invoke$arity$1 = G__9490__1;
G__9490.cljs$core$IFn$_invoke$arity$2 = G__9490__2;
return G__9490;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4440__auto___9491 = size;
var i_9492 = (0);
while(true){
if((i_9492 < n__4440__auto___9491)){
if(cljs.core.truth_((function (){var G__9488 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9492);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9488) : pred.call(null,G__9488));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9492));
} else {
}

var G__9493 = (i_9492 + (1));
i_9492 = G__9493;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9489 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9489) : pred.call(null,G__9489));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9500 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9500) : branch_QMARK_.call(null,G__9500));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9501 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9501) : children.call(null,G__9501));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9502_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9502_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9505 = to;
if(G__9505){
var bit__4227__auto__ = (G__9505.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4227__auto__) || (G__9505.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9506 = to;
if(G__9506){
var bit__4227__auto__ = (G__9506.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4227__auto__) || (G__9506.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9508 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9508) : f.call(null,G__9508));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9509__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9509 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9510__i = 0, G__9510__a = new Array(arguments.length -  4);
while (G__9510__i < G__9510__a.length) {G__9510__a[G__9510__i] = arguments[G__9510__i + 4]; ++G__9510__i;}
  colls = new cljs.core.IndexedSeq(G__9510__a,0);
} 
return G__9509__delegate.call(this,f,c1,c2,c3,colls);};
G__9509.cljs$lang$maxFixedArity = 4;
G__9509.cljs$lang$applyTo = (function (arglist__9511){
var f = cljs.core.first(arglist__9511);
arglist__9511 = cljs.core.next(arglist__9511);
var c1 = cljs.core.first(arglist__9511);
arglist__9511 = cljs.core.next(arglist__9511);
var c2 = cljs.core.first(arglist__9511);
arglist__9511 = cljs.core.next(arglist__9511);
var c3 = cljs.core.first(arglist__9511);
var colls = cljs.core.rest(arglist__9511);
return G__9509__delegate(f,c1,c2,c3,colls);
});
G__9509.cljs$core$IFn$_invoke$arity$variadic = G__9509__delegate;
return G__9509;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9512 = null;
if (arguments.length > 4) {
var G__9513__i = 0, G__9513__a = new Array(arguments.length -  4);
while (G__9513__i < G__9513__a.length) {G__9513__a[G__9513__i] = arguments[G__9513__i + 4]; ++G__9513__i;}
G__9512 = new cljs.core.IndexedSeq(G__9513__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9515 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9515) : pred.call(null,G__9515));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9530 = m__$1;
if(G__9530){
var bit__4234__auto__ = (G__9530.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4234__auto__) || (G__9530.cljs$core$ILookup$)){
return true;
} else {
if((!G__9530.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9530);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9530);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9531 = sentinel;
var G__9532 = m__$2;
var G__9533 = cljs.core.next(ks__$1);
sentinel = G__9531;
m__$1 = G__9532;
ks__$1 = G__9533;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9534,v){
var vec__9539 = p__9534;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9539,(0),null);
var ks = cljs.core.nthnext(vec__9539,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9540,f){
var vec__9578 = p__9540;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9578,(0),null);
var ks = cljs.core.nthnext(vec__9578,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9579 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9579) : f.call(null,G__9579));
})());
}
});
var update_in__4 = (function (m,p__9541,f,a){
var vec__9580 = p__9541;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9580,(0),null);
var ks = cljs.core.nthnext(vec__9580,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9581 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9582 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9581,G__9582) : f.call(null,G__9581,G__9582));
})());
}
});
var update_in__5 = (function (m,p__9542,f,a,b){
var vec__9583 = p__9542;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9583,(0),null);
var ks = cljs.core.nthnext(vec__9583,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9584 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9585 = a;
var G__9586 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9584,G__9585,G__9586) : f.call(null,G__9584,G__9585,G__9586));
})());
}
});
var update_in__6 = (function (m,p__9543,f,a,b,c){
var vec__9587 = p__9543;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9587,(0),null);
var ks = cljs.core.nthnext(vec__9587,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9588 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9589 = a;
var G__9590 = b;
var G__9591 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9588,G__9589,G__9590,G__9591) : f.call(null,G__9588,G__9589,G__9590,G__9591));
})());
}
});
var update_in__7 = (function() { 
var G__9593__delegate = function (m,p__9544,f,a,b,c,args){
var vec__9592 = p__9544;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9592,(0),null);
var ks = cljs.core.nthnext(vec__9592,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9593 = function (m,p__9544,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9594__i = 0, G__9594__a = new Array(arguments.length -  6);
while (G__9594__i < G__9594__a.length) {G__9594__a[G__9594__i] = arguments[G__9594__i + 6]; ++G__9594__i;}
  args = new cljs.core.IndexedSeq(G__9594__a,0);
} 
return G__9593__delegate.call(this,m,p__9544,f,a,b,c,args);};
G__9593.cljs$lang$maxFixedArity = 6;
G__9593.cljs$lang$applyTo = (function (arglist__9595){
var m = cljs.core.first(arglist__9595);
arglist__9595 = cljs.core.next(arglist__9595);
var p__9544 = cljs.core.first(arglist__9595);
arglist__9595 = cljs.core.next(arglist__9595);
var f = cljs.core.first(arglist__9595);
arglist__9595 = cljs.core.next(arglist__9595);
var a = cljs.core.first(arglist__9595);
arglist__9595 = cljs.core.next(arglist__9595);
var b = cljs.core.first(arglist__9595);
arglist__9595 = cljs.core.next(arglist__9595);
var c = cljs.core.first(arglist__9595);
var args = cljs.core.rest(arglist__9595);
return G__9593__delegate(m,p__9544,f,a,b,c,args);
});
G__9593.cljs$core$IFn$_invoke$arity$variadic = G__9593__delegate;
return G__9593;
})()
;
update_in = function(m,p__9544,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9544,f);
case 4:
return update_in__4.call(this,m,p__9544,f,a);
case 5:
return update_in__5.call(this,m,p__9544,f,a,b);
case 6:
return update_in__6.call(this,m,p__9544,f,a,b,c);
default:
var G__9596 = null;
if (arguments.length > 6) {
var G__9597__i = 0, G__9597__a = new Array(arguments.length -  6);
while (G__9597__i < G__9597__a.length) {G__9597__a[G__9597__i] = arguments[G__9597__i + 6]; ++G__9597__i;}
G__9596 = new cljs.core.IndexedSeq(G__9597__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9544,f,a,b,c, G__9596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9608 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9608) : f.call(null,G__9608));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9609 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9610 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9609,G__9610) : f.call(null,G__9609,G__9610));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9611 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9612 = x;
var G__9613 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9611,G__9612,G__9613) : f.call(null,G__9611,G__9612,G__9613));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9614 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9615 = x;
var G__9616 = y;
var G__9617 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9614,G__9615,G__9616,G__9617) : f.call(null,G__9614,G__9615,G__9616,G__9617));
})());
});
var update__7 = (function() { 
var G__9618__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9618 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9619__i = 0, G__9619__a = new Array(arguments.length -  6);
while (G__9619__i < G__9619__a.length) {G__9619__a[G__9619__i] = arguments[G__9619__i + 6]; ++G__9619__i;}
  more = new cljs.core.IndexedSeq(G__9619__a,0);
} 
return G__9618__delegate.call(this,m,k,f,x,y,z,more);};
G__9618.cljs$lang$maxFixedArity = 6;
G__9618.cljs$lang$applyTo = (function (arglist__9620){
var m = cljs.core.first(arglist__9620);
arglist__9620 = cljs.core.next(arglist__9620);
var k = cljs.core.first(arglist__9620);
arglist__9620 = cljs.core.next(arglist__9620);
var f = cljs.core.first(arglist__9620);
arglist__9620 = cljs.core.next(arglist__9620);
var x = cljs.core.first(arglist__9620);
arglist__9620 = cljs.core.next(arglist__9620);
var y = cljs.core.first(arglist__9620);
arglist__9620 = cljs.core.next(arglist__9620);
var z = cljs.core.first(arglist__9620);
var more = cljs.core.rest(arglist__9620);
return G__9618__delegate(m,k,f,x,y,z,more);
});
G__9618.cljs$core$IFn$_invoke$arity$variadic = G__9618__delegate;
return G__9618;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__9621 = null;
if (arguments.length > 6) {
var G__9622__i = 0, G__9622__a = new Array(arguments.length -  6);
while (G__9622__i < G__9622__a.length) {G__9622__a[G__9622__i] = arguments[G__9622__i + 6]; ++G__9622__i;}
G__9621 = new cljs.core.IndexedSeq(G__9622__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9623 = (ll - (5));
var G__9624 = r;
ll = G__9623;
ret = G__9624;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9629 = cljs.core.pv_aget(node,(0));
var G__9630 = (level - (5));
node = G__9629;
level = G__9630;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9631 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9632 = (level - (5));
node = G__9631;
level = G__9632;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9642 = init__$2;
var G__9643 = (j + i);
var G__9644 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9642,G__9643,G__9644) : f.call(null,G__9642,G__9643,G__9644));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9655 = (j + (1));
var G__9656 = init__$3;
j = G__9655;
init__$2 = G__9656;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9645 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9645) : cljs.core.deref.call(null,G__9645));
} else {
var G__9657 = (i + len);
var G__9658 = init__$2;
i = G__9657;
init__$1 = G__9658;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9646 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9646) : cljs.core.tv_editable_root.call(null,G__9646));
})(),(function (){var G__9647 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9647) : cljs.core.tv_editable_tail.call(null,G__9647));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9648 = init__$2;
var G__9649 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9648,G__9649) : f.call(null,G__9648,G__9649));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9659 = (j + (1));
var G__9660 = init__$3;
j = G__9659;
init__$2 = G__9660;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9650 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9650) : cljs.core.deref.call(null,G__9650));
} else {
var G__9661 = (i + len);
var G__9662 = init__$2;
i = G__9661;
init__$1 = G__9662;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9651 = coll__$1;
var G__9652 = cljs.core.first_array_for_longvec(coll__$1);
var G__9653 = (0);
var G__9654 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9651,G__9652,G__9653,G__9654) : cljs.core.chunked_seq.call(null,G__9651,G__9652,G__9653,G__9654));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4440__auto___9663 = len;
var i_9664 = (0);
while(true){
if((i_9664 < n__4440__auto___9663)){
(new_tail[i_9664] = (self__.tail[i_9664]));

var G__9665 = (i_9664 + (1));
i_9664 = G__9665;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9666 = null;
var G__9666__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9666__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9666 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9666__2.call(this,self__,k);
case 3:
return G__9666__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9666.cljs$core$IFn$_invoke$arity$2 = G__9666__2;
G__9666.cljs$core$IFn$_invoke$arity$3 = G__9666__3;
return G__9666;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9641){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9641)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9667 = (i + (1));
var G__9668 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9667;
out = G__9668;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9669__i = 0, G__9669__a = new Array(arguments.length -  0);
while (G__9669__i < G__9669__a.length) {G__9669__a[G__9669__i] = arguments[G__9669__i + 0]; ++G__9669__i;}
  args = new cljs.core.IndexedSeq(G__9669__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9670){
var args = cljs.core.seq(arglist__9670);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9671 = self__.vec;
var G__9672 = self__.node;
var G__9673 = self__.i;
var G__9674 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9671,G__9672,G__9673,G__9674) : cljs.core.chunked_seq.call(null,G__9671,G__9672,G__9673,G__9674));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9675 = self__.vec;
var G__9676 = (self__.i + self__.off);
var G__9677 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9675,G__9676,G__9677) : cljs.core.subvec.call(null,G__9675,G__9676,G__9677));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9678 = self__.vec;
var G__9679 = (self__.i + self__.off);
var G__9680 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9678,G__9679,G__9680) : cljs.core.subvec.call(null,G__9678,G__9679,G__9680));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9681 = self__.vec;
var G__9682 = self__.node;
var G__9683 = self__.i;
var G__9684 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9681,G__9682,G__9683,G__9684) : cljs.core.chunked_seq.call(null,G__9681,G__9682,G__9683,G__9684));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9685 = self__.vec;
var G__9686 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9687 = end;
var G__9688 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9685,G__9686,G__9687,G__9688) : cljs.core.chunked_seq.call(null,G__9685,G__9686,G__9687,G__9688));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9689 = self__.vec;
var G__9690 = self__.node;
var G__9691 = self__.i;
var G__9692 = self__.off;
var G__9693 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9689,G__9690,G__9691,G__9692,G__9693) : cljs.core.chunked_seq.call(null,G__9689,G__9690,G__9691,G__9692,G__9693));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9694 = self__.vec;
var G__9695 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9696 = end;
var G__9697 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9694,G__9695,G__9696,G__9697) : cljs.core.chunked_seq.call(null,G__9694,G__9695,G__9696,G__9697));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9699 = self__.meta;
var G__9700 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9701 = self__.start;
var G__9702 = (function (){var x__3870__auto__ = self__.end;
var y__3871__auto__ = (v_pos + (1));
return ((x__3870__auto__ > y__3871__auto__) ? x__3870__auto__ : y__3871__auto__);
})();
var G__9703 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9699,G__9700,G__9701,G__9702,G__9703) : cljs.core.build_subvec.call(null,G__9699,G__9700,G__9701,G__9702,G__9703));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9704 = self__.meta;
var G__9705 = self__.v;
var G__9706 = self__.start;
var G__9707 = (self__.end - (1));
var G__9708 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9704,G__9705,G__9706,G__9707,G__9708) : cljs.core.build_subvec.call(null,G__9704,G__9705,G__9706,G__9707,G__9708));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9710 = meta__$1;
var G__9711 = self__.v;
var G__9712 = self__.start;
var G__9713 = self__.end;
var G__9714 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9710,G__9711,G__9712,G__9713,G__9714) : cljs.core.build_subvec.call(null,G__9710,G__9711,G__9712,G__9713,G__9714));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9715 = self__.meta;
var G__9716 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9717 = self__.start;
var G__9718 = (self__.end + (1));
var G__9719 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9715,G__9716,G__9717,G__9718,G__9719) : cljs.core.build_subvec.call(null,G__9715,G__9716,G__9717,G__9718,G__9719));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9720 = null;
var G__9720__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9720__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9720 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9720__2.call(this,self__,k);
case 3:
return G__9720__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9720.cljs$core$IFn$_invoke$arity$2 = G__9720__2;
G__9720.cljs$core$IFn$_invoke$arity$3 = G__9720__3;
return G__9720;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9698){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9698)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9721 = meta;
var G__9722 = v.v;
var G__9723 = (v.start + start);
var G__9724 = (v.start + end);
var G__9725 = __hash;
meta = G__9721;
v = G__9722;
start = G__9723;
end = G__9724;
__hash = G__9725;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9732 = {};
return obj9732;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9740 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9741 = (level - (5));
node = G__9740;
level = G__9741;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9745 = null;
var G__9745__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9745__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9745 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9745__2.call(this,self__,k);
case 3:
return G__9745__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9745.cljs$core$IFn$_invoke$arity$2 = G__9745__2;
G__9745.cljs$core$IFn$_invoke$arity$3 = G__9745__3;
return G__9745;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9742){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9742)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3553__auto__ = self__.front;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3553__auto__ = self__.rear;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9746 = (i + incr);
i = G__9746;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9747 = (i + (1));
var G__9748 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9747;
out = G__9748;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj9752 = {};
return obj9752;
})();
var l = ks.length;
var i_9753 = (0);
while(true){
if((i_9753 < l)){
var k_9754 = (ks[i_9753]);
(new_obj[k_9754] = (obj[k_9754]));

var G__9755 = (i_9753 + (1));
i_9753 = G__9755;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3541__auto__ = (function (){var G__9759 = k;
return goog.isString(G__9759);
})();
if(cljs.core.truth_(and__3541__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3541__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9760 = init__$1;
var G__9761 = k;
var G__9762 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9760,G__9761,G__9762) : f.call(null,G__9760,G__9761,G__9762));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9763 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9763) : cljs.core.deref.call(null,G__9763));
} else {
var G__9769 = cljs.core.rest(keys__$1);
var G__9770 = init__$2;
keys__$1 = G__9769;
init__$1 = G__9770;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3541__auto__ = (function (){var G__9765 = k;
return goog.isString(G__9765);
})();
if(cljs.core.truth_(and__3541__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3541__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9766 = k;
return goog.isString(G__9766);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3541__auto__ = (function (){var G__9768 = k;
return goog.isString(G__9768);
})();
if(cljs.core.truth_(and__3541__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3541__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9756_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9756_SHARP_,(self__.strobj[p1__9756_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9771 = null;
var G__9771__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9771__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9771 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9771__2.call(this,self__,k);
case 3:
return G__9771__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9771.cljs$core$IFn$_invoke$arity$2 = G__9771__2;
G__9771.cljs$core$IFn$_invoke$arity$3 = G__9771__3;
return G__9771;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9757){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9757)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9773 = {};
return obj9773;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9774 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9774,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9774,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9775 = (i + (2));
i = G__9775;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9776 = (i + (2));
i = G__9776;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9777 = (i + (2));
i = G__9777;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9778 = (i + (2));
i = G__9778;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9779 = (i + (2));
i = G__9779;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3553__auto__ = (function (){var G__9783 = k;
return goog.isString(G__9783);
})();
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9784 = (0);
while(true){
if((i_9784 < l)){
(narr[i_9784] = (arr[i_9784]));

var G__9785 = (i_9784 + (1));
i_9784 = G__9785;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9787 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9787) : cljs.core.keys.call(null,G__9787));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9788 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9788) : cljs.core.vals.call(null,G__9788));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9789 = cljs.core.seq(coll);
var chunk__9790 = null;
var count__9791 = (0);
var i__9792 = (0);
while(true){
if((i__9792 < count__9791)){
var vec__9793 = chunk__9790.cljs$core$IIndexed$_nth$arity$2(null,i__9792);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9793,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9793,(1),null);
var G__9794_9807 = v;
var G__9795_9808 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9794_9807,G__9795_9808) : f.call(null,G__9794_9807,G__9795_9808));

var G__9809 = seq__9789;
var G__9810 = chunk__9790;
var G__9811 = count__9791;
var G__9812 = (i__9792 + (1));
seq__9789 = G__9809;
chunk__9790 = G__9810;
count__9791 = G__9811;
i__9792 = G__9812;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9789);
if(temp__4126__auto__){
var seq__9789__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9789__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__9789__$1);
var G__9813 = cljs.core.chunk_rest(seq__9789__$1);
var G__9814 = c__4340__auto__;
var G__9815 = cljs.core.count(c__4340__auto__);
var G__9816 = (0);
seq__9789 = G__9813;
chunk__9790 = G__9814;
count__9791 = G__9815;
i__9792 = G__9816;
continue;
} else {
var vec__9796 = cljs.core.first(seq__9789__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9796,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9796,(1),null);
var G__9797_9817 = v;
var G__9798_9818 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9797_9817,G__9798_9818) : f.call(null,G__9797_9817,G__9798_9818));

var G__9819 = cljs.core.next(seq__9789__$1);
var G__9820 = null;
var G__9821 = (0);
var G__9822 = (0);
seq__9789 = G__9819;
chunk__9790 = G__9820;
count__9791 = G__9821;
i__9792 = G__9822;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9799 = init__$1;
var G__9800 = (self__.arr[i]);
var G__9801 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9799,G__9800,G__9801) : f.call(null,G__9799,G__9800,G__9801));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9802 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9802) : cljs.core.deref.call(null,G__9802));
} else {
var G__9823 = (i + (2));
var G__9824 = init__$2;
i = G__9823;
init__$1 = G__9824;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9803 = other;
if(G__9803){
var bit__4227__auto__ = (G__9803.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4227__auto__) || (G__9803.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9825 = (i + (2));
i = G__9825;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9805 = {};
return obj9805;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9826 = (s + (2));
var G__9827 = d;
s = G__9826;
d = G__9827;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9828 = (s + (2));
var G__9829 = (d + (2));
s = G__9828;
d = G__9829;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9806 = cljs.core.aclone(self__.arr);
(G__9806[(idx + (1))] = v);

return G__9806;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9830 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9831 = cljs.core.next(es);
ret = G__9830;
es = G__9831;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9832 = null;
var G__9832__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9832__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9832 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9832__2.call(this,self__,k);
case 3:
return G__9832__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9832.cljs$core$IFn$_invoke$arity$2 = G__9832__2;
G__9832.cljs$core$IFn$_invoke$arity$3 = G__9832__3;
return G__9832;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9786){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9786)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9833 = (i + (2));
var G__9834 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9833;
ret = G__9834;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9835_9843 = self__.arr;
G__9835_9843.pop();

G__9835_9843.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9836 = self__.len;
var G__9837 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9836,G__9837) : cljs.core.array__GT_transient_hash_map.call(null,G__9836,G__9837));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9838 = o;
if(G__9838){
var bit__4234__auto__ = (G__9838.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4234__auto__) || (G__9838.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9838.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9838);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9838);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9839 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9839) : cljs.core.key.call(null,G__9839));
})(),(function (){var G__9840 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9840) : cljs.core.val.call(null,G__9840));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9844 = cljs.core.next(es);
var G__9845 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9841 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9841) : cljs.core.key.call(null,G__9841));
})(),(function (){var G__9842 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9842) : cljs.core.val.call(null,G__9842));
})());
es = G__9844;
tcoll__$2 = G__9845;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9846 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9847 = (i + (2));
out = G__9846;
i = G__9847;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__9850 = cljs.core.aclone(arr);
(G__9850[i] = a);

return G__9850;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__9851 = cljs.core.aclone(arr);
(G__9851[i] = a);

(G__9851[j] = b);

return G__9851;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9856 = init__$1;
var G__9857 = k;
var G__9858 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9856,G__9857,G__9858) : f.call(null,G__9856,G__9857,G__9858));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9859 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9859) : cljs.core.deref.call(null,G__9859));
} else {
var G__9860 = (i + (2));
var G__9861 = init__$2;
i = G__9860;
init__$1 = G__9861;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9862 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9862) : cljs.core.create_inode_seq.call(null,G__9862));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9876 = (0);
var j_9877 = (0);
while(true){
if((i_9876 < (32))){
if((((self__.bitmap >>> i_9876) & (1)) === (0))){
var G__9878 = (i_9876 + (1));
var G__9879 = j_9877;
i_9876 = G__9878;
j_9877 = G__9879;
continue;
} else {
(nodes[i_9876] = ((!(((self__.arr[j_9877]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9877])),(self__.arr[j_9877]),(self__.arr[(j_9877 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9877 + (1))])));

var G__9880 = (i_9876 + (1));
var G__9881 = (j_9877 + (2));
i_9876 = G__9880;
j_9877 = G__9881;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9863 = edit__$1;
var G__9864 = (shift + (5));
var G__9865 = key_or_nil;
var G__9866 = val_or_node;
var G__9867 = hash;
var G__9868 = key;
var G__9869 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9863,G__9864,G__9865,G__9866,G__9867,G__9868,G__9869) : cljs.core.create_node.call(null,G__9863,G__9864,G__9865,G__9866,G__9867,G__9868,G__9869));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9882 = (0);
var j_9883 = (0);
while(true){
if((i_9882 < (32))){
if((((self__.bitmap >>> i_9882) & (1)) === (0))){
var G__9884 = (i_9882 + (1));
var G__9885 = j_9883;
i_9882 = G__9884;
j_9883 = G__9885;
continue;
} else {
(nodes[i_9882] = ((!(((self__.arr[j_9883]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9883])),(self__.arr[j_9883]),(self__.arr[(j_9883 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9883 + (1))])));

var G__9886 = (i_9882 + (1));
var G__9887 = (j_9883 + (2));
i_9882 = G__9886;
j_9883 = G__9887;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9870 = (shift + (5));
var G__9871 = key_or_nil;
var G__9872 = val_or_node;
var G__9873 = hash;
var G__9874 = key;
var G__9875 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9870,G__9871,G__9872,G__9873,G__9874,G__9875) : cljs.core.create_node.call(null,G__9870,G__9871,G__9872,G__9873,G__9874,G__9875));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9888 = (i + (1));
var G__9889 = (j + (2));
var G__9890 = (bitmap | ((1) << i));
i = G__9888;
j = G__9889;
bitmap = G__9890;
continue;
} else {
var G__9891 = (i + (1));
var G__9892 = j;
var G__9893 = bitmap;
i = G__9891;
j = G__9892;
bitmap = G__9893;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9894 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9894) : cljs.core.create_array_node_seq.call(null,G__9894));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9895 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9895) : cljs.core.deref.call(null,G__9895));
} else {
var G__9896 = (i + (1));
var G__9897 = init__$2;
i = G__9896;
init__$1 = G__9897;
continue;
}
} else {
var G__9898 = (i + (1));
var G__9899 = init__$1;
i = G__9898;
init__$1 = G__9899;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9900 = (i + (2));
i = G__9900;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9901 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9901) : cljs.core.create_inode_seq.call(null,G__9901));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9902 = self__.nodes;
var G__9903 = (self__.i + (2));
var G__9904 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9902,G__9903,G__9904) : cljs.core.create_inode_seq.call(null,G__9902,G__9903,G__9904));
} else {
var G__9905 = self__.nodes;
var G__9906 = self__.i;
var G__9907 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9905,G__9906,G__9907) : cljs.core.create_inode_seq.call(null,G__9905,G__9906,G__9907));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9911 = (j + (2));
j = G__9911;
continue;
}
} else {
var G__9912 = (j + (2));
j = G__9912;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9913 = null;
var G__9914 = self__.nodes;
var G__9915 = self__.i;
var G__9916 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9913,G__9914,G__9915,G__9916) : cljs.core.create_array_node_seq.call(null,G__9913,G__9914,G__9915,G__9916));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9921 = (j + (1));
j = G__9921;
continue;
}
} else {
var G__9922 = (j + (1));
j = G__9922;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9924 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9924) : cljs.core.keys.call(null,G__9924));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9925 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9925) : cljs.core.vals.call(null,G__9925));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9926 = cljs.core.seq(coll);
var chunk__9927 = null;
var count__9928 = (0);
var i__9929 = (0);
while(true){
if((i__9929 < count__9928)){
var vec__9930 = chunk__9927.cljs$core$IIndexed$_nth$arity$2(null,i__9929);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9930,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9930,(1),null);
var G__9931_9942 = v;
var G__9932_9943 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9931_9942,G__9932_9943) : f.call(null,G__9931_9942,G__9932_9943));

var G__9944 = seq__9926;
var G__9945 = chunk__9927;
var G__9946 = count__9928;
var G__9947 = (i__9929 + (1));
seq__9926 = G__9944;
chunk__9927 = G__9945;
count__9928 = G__9946;
i__9929 = G__9947;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9926);
if(temp__4126__auto__){
var seq__9926__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9926__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__9926__$1);
var G__9948 = cljs.core.chunk_rest(seq__9926__$1);
var G__9949 = c__4340__auto__;
var G__9950 = cljs.core.count(c__4340__auto__);
var G__9951 = (0);
seq__9926 = G__9948;
chunk__9927 = G__9949;
count__9928 = G__9950;
i__9929 = G__9951;
continue;
} else {
var vec__9933 = cljs.core.first(seq__9926__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9933,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9933,(1),null);
var G__9934_9952 = v;
var G__9935_9953 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9934_9952,G__9935_9953) : f.call(null,G__9934_9952,G__9935_9953));

var G__9954 = cljs.core.next(seq__9926__$1);
var G__9955 = null;
var G__9956 = (0);
var G__9957 = (0);
seq__9926 = G__9954;
chunk__9927 = G__9955;
count__9928 = G__9956;
i__9929 = G__9957;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9936 = init;
var G__9937 = null;
var G__9938 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9936,G__9937,G__9938) : f.call(null,G__9936,G__9937,G__9938));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9939 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9939) : cljs.core.deref.call(null,G__9939));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj9941 = {};
return obj9941;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9958 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9959 = cljs.core.next(es);
ret = G__9958;
es = G__9959;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__9960 = null;
var G__9960__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9960__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9960 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9960__2.call(this,self__,k);
case 3:
return G__9960__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9960.cljs$core$IFn$_invoke$arity$2 = G__9960__2;
G__9960.cljs$core$IFn$_invoke$arity$3 = G__9960__3;
return G__9960;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9923){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9923)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9961 = (i + (2));
var G__9962 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9961;
ret = G__9962;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9963 = (i + (1));
var G__9964 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__9963;
out = G__9964;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__9965 = o;
if(G__9965){
var bit__4234__auto__ = (G__9965.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4234__auto__) || (G__9965.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9965.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9965);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9965);
}
})()){
return tcoll.assoc_BANG_((function (){var G__9966 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9966) : cljs.core.key.call(null,G__9966));
})(),(function (){var G__9967 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9967) : cljs.core.val.call(null,G__9967));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9970 = cljs.core.next(es);
var G__9971 = tcoll__$1.assoc_BANG_((function (){var G__9968 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9968) : cljs.core.key.call(null,G__9968));
})(),(function (){var G__9969 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9969) : cljs.core.val.call(null,G__9969));
})());
es = G__9970;
tcoll__$1 = G__9971;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__9972 = ((ascending_QMARK_)?t.left:t.right);
var G__9973 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__9972;
stack__$1 = G__9973;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9986 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9986) : cljs.core.deref.call(null,G__9986));
} else {
var init__$2 = (function (){var G__9987 = init__$1;
var G__9988 = node.key;
var G__9989 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9987,G__9988,G__9989) : f.call(null,G__9987,G__9988,G__9989));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9990 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9990) : cljs.core.deref.call(null,G__9990));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__9991 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9991) : cljs.core.deref.call(null,G__9991));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__9993 = null;
var G__9993__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9993__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9993 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9993__2.call(this,self__,k);
case 3:
return G__9993__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9993.cljs$core$IFn$_invoke$arity$2 = G__9993__2;
G__9993.cljs$core$IFn$_invoke$arity$3 = G__9993__3;
return G__9993;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args9992){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9992)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__9995 = null;
var G__9995__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9995__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9995 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9995__2.call(this,self__,k);
case 3:
return G__9995__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9995.cljs$core$IFn$_invoke$arity$2 = G__9995__2;
G__9995.cljs$core$IFn$_invoke$arity$3 = G__9995__3;
return G__9995;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args9994){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9994)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10008 = k;
var G__10009 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10008,G__10009) : comp.call(null,G__10008,G__10009));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10028 = k;
var G__10029 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10028,G__10029) : comp.call(null,G__10028,G__10029));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10040 = k;
var G__10041 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10040,G__10041) : comp.call(null,G__10040,G__10041));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10043 = cljs.core.seq(coll);
var chunk__10044 = null;
var count__10045 = (0);
var i__10046 = (0);
while(true){
if((i__10046 < count__10045)){
var vec__10047 = chunk__10044.cljs$core$IIndexed$_nth$arity$2(null,i__10046);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10047,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10047,(1),null);
var G__10048_10060 = v;
var G__10049_10061 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10048_10060,G__10049_10061) : f.call(null,G__10048_10060,G__10049_10061));

var G__10062 = seq__10043;
var G__10063 = chunk__10044;
var G__10064 = count__10045;
var G__10065 = (i__10046 + (1));
seq__10043 = G__10062;
chunk__10044 = G__10063;
count__10045 = G__10064;
i__10046 = G__10065;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10043);
if(temp__4126__auto__){
var seq__10043__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10043__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__10043__$1);
var G__10066 = cljs.core.chunk_rest(seq__10043__$1);
var G__10067 = c__4340__auto__;
var G__10068 = cljs.core.count(c__4340__auto__);
var G__10069 = (0);
seq__10043 = G__10066;
chunk__10044 = G__10067;
count__10045 = G__10068;
i__10046 = G__10069;
continue;
} else {
var vec__10050 = cljs.core.first(seq__10043__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10050,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10050,(1),null);
var G__10051_10070 = v;
var G__10052_10071 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10051_10070,G__10052_10071) : f.call(null,G__10051_10070,G__10052_10071));

var G__10072 = cljs.core.next(seq__10043__$1);
var G__10073 = null;
var G__10074 = (0);
var G__10075 = (0);
seq__10043 = G__10072;
chunk__10044 = G__10073;
count__10045 = G__10074;
i__10046 = G__10075;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10053 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10053) : cljs.core.keys.call(null,G__10053));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10054 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10054) : cljs.core.vals.call(null,G__10054));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10055 = k;
var G__10056 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10055,G__10056) : self__.comp.call(null,G__10055,G__10056));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10076 = t.left;
t = G__10076;
continue;
} else {
var G__10077 = t.right;
t = G__10077;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10078 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10079 = cljs.core.next(es);
ret = G__10078;
es = G__10079;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10080 = null;
var G__10080__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10080__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10080 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10080__2.call(this,self__,k);
case 3:
return G__10080__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10080.cljs$core$IFn$_invoke$arity$2 = G__10080__2;
G__10080.cljs$core$IFn$_invoke$arity$3 = G__10080__3;
return G__10080;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10042){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10042)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10057 = k;
var G__10058 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10057,G__10058) : self__.comp.call(null,G__10057,G__10058));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10081 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10082 = t.left;
stack = G__10081;
t = G__10082;
continue;
} else {
var G__10083 = stack;
var G__10084 = t.right;
stack = G__10083;
t = G__10084;
continue;
}
} else {
if((c > (0))){
var G__10085 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10086 = t.right;
stack = G__10085;
t = G__10086;
continue;
} else {
var G__10087 = stack;
var G__10088 = t.left;
stack = G__10087;
t = G__10088;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10059 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10059) : cljs.core.key.call(null,G__10059));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10089 = cljs.core.nnext(in$);
var G__10090 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10089;
out = G__10090;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10091__i = 0, G__10091__a = new Array(arguments.length -  0);
while (G__10091__i < G__10091__a.length) {G__10091__a[G__10091__i] = arguments[G__10091__i + 0]; ++G__10091__i;}
  keyvals = new cljs.core.IndexedSeq(G__10091__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__10092){
var keyvals = cljs.core.seq(arglist__10092);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10093__i = 0, G__10093__a = new Array(arguments.length -  0);
while (G__10093__i < G__10093__a.length) {G__10093__a[G__10093__i] = arguments[G__10093__i + 0]; ++G__10093__i;}
  keyvals = new cljs.core.IndexedSeq(G__10093__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__10094){
var keyvals = cljs.core.seq(arglist__10094);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10098 = {};
return obj10098;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10099 = cljs.core.nnext(kvs);
kvs = G__10099;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10100__i = 0, G__10100__a = new Array(arguments.length -  0);
while (G__10100__i < G__10100__a.length) {G__10100__a[G__10100__i] = arguments[G__10100__i + 0]; ++G__10100__i;}
  keyvals = new cljs.core.IndexedSeq(G__10100__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__10101){
var keyvals = cljs.core.seq(arglist__10101);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10102 = cljs.core.nnext(in$);
var G__10103 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10102;
out = G__10103;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10104__i = 0, G__10104__a = new Array(arguments.length -  0);
while (G__10104__i < G__10104__a.length) {G__10104__a[G__10104__i] = arguments[G__10104__i + 0]; ++G__10104__i;}
  keyvals = new cljs.core.IndexedSeq(G__10104__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__10105){
var keyvals = cljs.core.seq(arglist__10105);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10106 = cljs.core.nnext(in$);
var G__10107 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10106;
out = G__10107;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10108__i = 0, G__10108__a = new Array(arguments.length -  1);
while (G__10108__i < G__10108__a.length) {G__10108__a[G__10108__i] = arguments[G__10108__i + 1]; ++G__10108__i;}
  keyvals = new cljs.core.IndexedSeq(G__10108__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__10109){
var comparator = cljs.core.first(arglist__10109);
var keyvals = cljs.core.rest(arglist__10109);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10110 = self__.mseq;
if(G__10110){
var bit__4234__auto__ = (G__10110.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__10110.cljs$core$INext$)){
return true;
} else {
if((!G__10110.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10110);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10110);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10111 = self__.mseq;
if(G__10111){
var bit__4234__auto__ = (G__10111.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__10111.cljs$core$INext$)){
return true;
} else {
if((!G__10111.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10111);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10111);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10112 = self__.mseq;
if(G__10112){
var bit__4234__auto__ = (G__10112.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__10112.cljs$core$INext$)){
return true;
} else {
if((!G__10112.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10112);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10112);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10113 = self__.mseq;
if(G__10113){
var bit__4234__auto__ = (G__10113.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4234__auto__) || (G__10113.cljs$core$INext$)){
return true;
} else {
if((!G__10113.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10113);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10113);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10114_SHARP_,p2__10115_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3553__auto__ = p1__10114_SHARP_;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10115_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10116__i = 0, G__10116__a = new Array(arguments.length -  0);
while (G__10116__i < G__10116__a.length) {G__10116__a[G__10116__i] = arguments[G__10116__i + 0]; ++G__10116__i;}
  maps = new cljs.core.IndexedSeq(G__10116__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__10117){
var maps = cljs.core.seq(arglist__10117);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10120 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10121 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10120,G__10121) : f.call(null,G__10120,G__10121));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3553__auto__ = m1;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10122__i = 0, G__10122__a = new Array(arguments.length -  1);
while (G__10122__i < G__10122__a.length) {G__10122__a[G__10122__i] = arguments[G__10122__i + 1]; ++G__10122__i;}
  maps = new cljs.core.IndexedSeq(G__10122__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__10123){
var f = cljs.core.first(arglist__10123);
var maps = cljs.core.rest(arglist__10123);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10124 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10125 = cljs.core.next(keys);
ret = G__10124;
keys = G__10125;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10128 = cljs.core.seq(coll);
var chunk__10129 = null;
var count__10130 = (0);
var i__10131 = (0);
while(true){
if((i__10131 < count__10130)){
var vec__10132 = chunk__10129.cljs$core$IIndexed$_nth$arity$2(null,i__10131);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10132,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10132,(1),null);
var G__10133_10138 = v;
var G__10134_10139 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10133_10138,G__10134_10139) : f.call(null,G__10133_10138,G__10134_10139));

var G__10140 = seq__10128;
var G__10141 = chunk__10129;
var G__10142 = count__10130;
var G__10143 = (i__10131 + (1));
seq__10128 = G__10140;
chunk__10129 = G__10141;
count__10130 = G__10142;
i__10131 = G__10143;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10128);
if(temp__4126__auto__){
var seq__10128__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10128__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__10128__$1);
var G__10144 = cljs.core.chunk_rest(seq__10128__$1);
var G__10145 = c__4340__auto__;
var G__10146 = cljs.core.count(c__4340__auto__);
var G__10147 = (0);
seq__10128 = G__10144;
chunk__10129 = G__10145;
count__10130 = G__10146;
i__10131 = G__10147;
continue;
} else {
var vec__10135 = cljs.core.first(seq__10128__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10135,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10135,(1),null);
var G__10136_10148 = v;
var G__10137_10149 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10136_10148,G__10137_10149) : f.call(null,G__10136_10148,G__10137_10149));

var G__10150 = cljs.core.next(seq__10128__$1);
var G__10151 = null;
var G__10152 = (0);
var G__10153 = (0);
seq__10128 = G__10150;
chunk__10129 = G__10151;
count__10130 = G__10152;
i__10131 = G__10153;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10126_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10126_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10154 = null;
var G__10154__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10154__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10154 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10154__2.call(this,self__,k);
case 3:
return G__10154__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10154.cljs$core$IFn$_invoke$arity$2 = G__10154__2;
G__10154.cljs$core$IFn$_invoke$arity$3 = G__10154__3;
return G__10154;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10127){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10127)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10155 = (i + (1));
var G__10156 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10155;
out = G__10156;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10157 = (i + (1));
var G__10158 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10157;
out = G__10158;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10160 = null;
var G__10160__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10160__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10160 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10160__2.call(this,self__,k);
case 3:
return G__10160__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10160.cljs$core$IFn$_invoke$arity$2 = G__10160__2;
G__10160.cljs$core$IFn$_invoke$arity$3 = G__10160__3;
return G__10160;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10159){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10159)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10163 = cljs.core.seq(coll);
var chunk__10164 = null;
var count__10165 = (0);
var i__10166 = (0);
while(true){
if((i__10166 < count__10165)){
var vec__10167 = chunk__10164.cljs$core$IIndexed$_nth$arity$2(null,i__10166);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10167,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10167,(1),null);
var G__10168_10173 = v;
var G__10169_10174 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10168_10173,G__10169_10174) : f.call(null,G__10168_10173,G__10169_10174));

var G__10175 = seq__10163;
var G__10176 = chunk__10164;
var G__10177 = count__10165;
var G__10178 = (i__10166 + (1));
seq__10163 = G__10175;
chunk__10164 = G__10176;
count__10165 = G__10177;
i__10166 = G__10178;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10163);
if(temp__4126__auto__){
var seq__10163__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10163__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__10163__$1);
var G__10179 = cljs.core.chunk_rest(seq__10163__$1);
var G__10180 = c__4340__auto__;
var G__10181 = cljs.core.count(c__4340__auto__);
var G__10182 = (0);
seq__10163 = G__10179;
chunk__10164 = G__10180;
count__10165 = G__10181;
i__10166 = G__10182;
continue;
} else {
var vec__10170 = cljs.core.first(seq__10163__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10170,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10170,(1),null);
var G__10171_10183 = v;
var G__10172_10184 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10171_10183,G__10172_10184) : f.call(null,G__10171_10183,G__10172_10184));

var G__10185 = cljs.core.next(seq__10163__$1);
var G__10186 = null;
var G__10187 = (0);
var G__10188 = (0);
seq__10163 = G__10185;
chunk__10164 = G__10186;
count__10165 = G__10187;
i__10166 = G__10188;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10161_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10161_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10189 = null;
var G__10189__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10189__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10189 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10189__2.call(this,self__,k);
case 3:
return G__10189__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10189.cljs$core$IFn$_invoke$arity$2 = G__10189__2;
G__10189.cljs$core$IFn$_invoke$arity$3 = G__10189__3;
return G__10189;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10162){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10162)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4434__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4434__auto__.length)){
var G__10190 = (i + (1));
var G__10191 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10190;
res = G__10191;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10192 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10193 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10192;
out = G__10193;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__10194__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10194 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10195__i = 0, G__10195__a = new Array(arguments.length -  0);
while (G__10195__i < G__10195__a.length) {G__10195__a[G__10195__i] = arguments[G__10195__i + 0]; ++G__10195__i;}
  keys = new cljs.core.IndexedSeq(G__10195__a,0);
} 
return G__10194__delegate.call(this,keys);};
G__10194.cljs$lang$maxFixedArity = 0;
G__10194.cljs$lang$applyTo = (function (arglist__10196){
var keys = cljs.core.seq(arglist__10196);
return G__10194__delegate(keys);
});
G__10194.cljs$core$IFn$_invoke$arity$variadic = G__10194__delegate;
return G__10194;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__10197 = null;
if (arguments.length > 0) {
var G__10198__i = 0, G__10198__a = new Array(arguments.length -  0);
while (G__10198__i < G__10198__a.length) {G__10198__a[G__10198__i] = arguments[G__10198__i + 0]; ++G__10198__i;}
G__10197 = new cljs.core.IndexedSeq(G__10198__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10199__i = 0, G__10199__a = new Array(arguments.length -  0);
while (G__10199__i < G__10199__a.length) {G__10199__a[G__10199__i] = arguments[G__10199__i + 0]; ++G__10199__i;}
  keys = new cljs.core.IndexedSeq(G__10199__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__10200){
var keys = cljs.core.seq(arglist__10200);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10201__i = 0, G__10201__a = new Array(arguments.length -  1);
while (G__10201__i < G__10201__a.length) {G__10201__a[G__10201__i] = arguments[G__10201__i + 1]; ++G__10201__i;}
  keys = new cljs.core.IndexedSeq(G__10201__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__10202){
var comparator = cljs.core.first(arglist__10202);
var keys = cljs.core.rest(arglist__10202);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10203_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10203_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10203_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10204_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10204_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10204_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10225 = null;
var G__10225__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10225__1 = (function (result){
var G__10215 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10215) : rf.call(null,G__10215));
});
var G__10225__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10216 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10216) : cljs.core.deref.call(null,G__10216));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10217 = result;
var G__10218 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10217,G__10218) : rf.call(null,G__10217,G__10218));
}
});
G__10225 = function(result,input){
switch(arguments.length){
case 0:
return G__10225__0.call(this);
case 1:
return G__10225__1.call(this,result);
case 2:
return G__10225__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10225.cljs$core$IFn$_invoke$arity$0 = G__10225__0;
G__10225.cljs$core$IFn$_invoke$arity$1 = G__10225__1;
G__10225.cljs$core$IFn$_invoke$arity$2 = G__10225__2;
return G__10225;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10223,seen__$1){
while(true){
var vec__10224 = p__10223;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10224,(0),null);
var xs__$1 = vec__10224;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10226 = cljs.core.rest(s);
var G__10227 = seen__$1;
p__10223 = G__10226;
seen__$1 = G__10227;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10228 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10229 = cljs.core.next(s__$1);
ret = G__10228;
s__$1 = G__10229;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__10231 = x;
if(G__10231){
var bit__4227__auto__ = (G__10231.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4227__auto__) || (G__10231.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10232 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10233 = cljs.core.next(ks);
var G__10234 = cljs.core.next(vs);
map = G__10232;
ks = G__10233;
vs = G__10234;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__10245 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10245) : k.call(null,G__10245));
})() > (function (){var G__10246 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10246) : k.call(null,G__10246));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__10247__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10235_SHARP_,p2__10236_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10235_SHARP_,p2__10236_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10247 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10248__i = 0, G__10248__a = new Array(arguments.length -  3);
while (G__10248__i < G__10248__a.length) {G__10248__a[G__10248__i] = arguments[G__10248__i + 3]; ++G__10248__i;}
  more = new cljs.core.IndexedSeq(G__10248__a,0);
} 
return G__10247__delegate.call(this,k,x,y,more);};
G__10247.cljs$lang$maxFixedArity = 3;
G__10247.cljs$lang$applyTo = (function (arglist__10249){
var k = cljs.core.first(arglist__10249);
arglist__10249 = cljs.core.next(arglist__10249);
var x = cljs.core.first(arglist__10249);
arglist__10249 = cljs.core.next(arglist__10249);
var y = cljs.core.first(arglist__10249);
var more = cljs.core.rest(arglist__10249);
return G__10247__delegate(k,x,y,more);
});
G__10247.cljs$core$IFn$_invoke$arity$variadic = G__10247__delegate;
return G__10247;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__10250 = null;
if (arguments.length > 3) {
var G__10251__i = 0, G__10251__a = new Array(arguments.length -  3);
while (G__10251__i < G__10251__a.length) {G__10251__a[G__10251__i] = arguments[G__10251__i + 3]; ++G__10251__i;}
G__10250 = new cljs.core.IndexedSeq(G__10251__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__10262 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10262) : k.call(null,G__10262));
})() < (function (){var G__10263 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10263) : k.call(null,G__10263));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__10264__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10252_SHARP_,p2__10253_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10252_SHARP_,p2__10253_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10264 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10265__i = 0, G__10265__a = new Array(arguments.length -  3);
while (G__10265__i < G__10265__a.length) {G__10265__a[G__10265__i] = arguments[G__10265__i + 3]; ++G__10265__i;}
  more = new cljs.core.IndexedSeq(G__10265__a,0);
} 
return G__10264__delegate.call(this,k,x,y,more);};
G__10264.cljs$lang$maxFixedArity = 3;
G__10264.cljs$lang$applyTo = (function (arglist__10266){
var k = cljs.core.first(arglist__10266);
arglist__10266 = cljs.core.next(arglist__10266);
var x = cljs.core.first(arglist__10266);
arglist__10266 = cljs.core.next(arglist__10266);
var y = cljs.core.first(arglist__10266);
var more = cljs.core.rest(arglist__10266);
return G__10264__delegate(k,x,y,more);
});
G__10264.cljs$core$IFn$_invoke$arity$variadic = G__10264__delegate;
return G__10264;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__10267 = null;
if (arguments.length > 3) {
var G__10268__i = 0, G__10268__a = new Array(arguments.length -  3);
while (G__10268__i < G__10268__a.length) {G__10268__a[G__10268__i] = arguments[G__10268__i + 3]; ++G__10268__i;}
G__10267 = new cljs.core.IndexedSeq(G__10268__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10285 = null;
var G__10285__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10285__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10280 = result;
var G__10281 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10280,G__10281) : rf.call(null,G__10280,G__10281));
})());
})());
var G__10282 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10282) : rf.call(null,G__10282));
});
var G__10285__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10283 = result;
var G__10284 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10283,G__10284) : rf.call(null,G__10283,G__10284));
} else {
return result;
}
});
G__10285 = function(result,input){
switch(arguments.length){
case 0:
return G__10285__0.call(this);
case 1:
return G__10285__1.call(this,result);
case 2:
return G__10285__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10285.cljs$core$IFn$_invoke$arity$0 = G__10285__0;
G__10285.cljs$core$IFn$_invoke$arity$1 = G__10285__1;
G__10285.cljs$core$IFn$_invoke$arity$2 = G__10285__2;
return G__10285;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10298 = null;
var G__10298__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10298__1 = (function (result){
var G__10293 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10293) : rf.call(null,G__10293));
});
var G__10298__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10294 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10294) : pred.call(null,G__10294));
})())){
var G__10295 = result;
var G__10296 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10295,G__10296) : rf.call(null,G__10295,G__10296));
} else {
return cljs.core.reduced(result);
}
});
G__10298 = function(result,input){
switch(arguments.length){
case 0:
return G__10298__0.call(this);
case 1:
return G__10298__1.call(this,result);
case 2:
return G__10298__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10298.cljs$core$IFn$_invoke$arity$0 = G__10298__0;
G__10298.cljs$core$IFn$_invoke$arity$1 = G__10298__1;
G__10298.cljs$core$IFn$_invoke$arity$2 = G__10298__2;
return G__10298;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10297 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10297) : pred.call(null,G__10297));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10303 = (function (){var G__10305 = cljs.core._entry_key(sc,e);
var G__10306 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10305,G__10306) : comp.call(null,G__10305,G__10306));
})();
var G__10304 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10303,G__10304) : test.call(null,G__10303,G__10304));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10310 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10310,(0),null);
var s = vec__10310;
if(cljs.core.truth_((function (){var G__10311 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10311) : include.call(null,G__10311));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10312 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10312,(0),null);
var s = vec__10312;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10316 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10316,(0),null);
var s = vec__10316;
if(cljs.core.truth_((function (){var G__10317 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10317) : include.call(null,G__10317));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10318 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10318,(0),null);
var s = vec__10318;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10319 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10319) : Math.ceil.call(null,G__10319));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__3974__auto__ = self__.__hash;
if(!((h__3974__auto__ == null))){
return h__3974__auto__;
} else {
var h__3974__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__3974__auto____$1;

return h__3974__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10320 = ret;
var G__10321 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10320,G__10321) : f.call(null,G__10320,G__10321));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10322 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10322) : cljs.core.deref.call(null,G__10322));
} else {
var G__10323 = (i + self__.step);
var G__10324 = ret__$1;
i = G__10323;
ret = G__10324;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10342 = null;
var G__10342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10342__1 = (function (result){
var G__10339 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10339) : rf.call(null,G__10339));
});
var G__10342__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10340 = result;
var G__10341 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10340,G__10341) : rf.call(null,G__10340,G__10341));
} else {
return result;
}
});
G__10342 = function(result,input){
switch(arguments.length){
case 0:
return G__10342__0.call(this);
case 1:
return G__10342__1.call(this,result);
case 2:
return G__10342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10342.cljs$core$IFn$_invoke$arity$0 = G__10342__0;
G__10342.cljs$core$IFn$_invoke$arity$1 = G__10342__1;
G__10342.cljs$core$IFn$_invoke$arity$2 = G__10342__2;
return G__10342;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10364 = null;
var G__10364__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10364__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10355 = result;
var G__10356 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10355,G__10356) : rf.call(null,G__10355,G__10356));
})());
})());
var G__10357 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10357) : rf.call(null,G__10357));
});
var G__10364__2 = (function (result,input){
var pval = (function (){var G__10358 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10358) : cljs.core.deref.call(null,G__10358));
})();
var val = (function (){var G__10359 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10359) : f.call(null,G__10359));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10360 = result;
var G__10361 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10360,G__10361) : rf.call(null,G__10360,G__10361));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10364 = function(result,input){
switch(arguments.length){
case 0:
return G__10364__0.call(this);
case 1:
return G__10364__1.call(this,result);
case 2:
return G__10364__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10364.cljs$core$IFn$_invoke$arity$0 = G__10364__0;
G__10364.cljs$core$IFn$_invoke$arity$1 = G__10364__1;
G__10364.cljs$core$IFn$_invoke$arity$2 = G__10364__2;
return G__10364;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10362 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10362) : f.call(null,G__10362));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10343_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10363 = p1__10343_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10363) : f.call(null,G__10363));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10373 = init;
var G__10374 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10373,G__10374) : f.call(null,G__10373,G__10374));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10469 = null;
var G__10469__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10469__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10427 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10427) : f.call(null,G__10427));
})()],null));
});
var G__10469__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10428 = x;
var G__10429 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10428,G__10429) : f.call(null,G__10428,G__10429));
})()],null));
});
var G__10469__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10430 = x;
var G__10431 = y;
var G__10432 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10430,G__10431,G__10432) : f.call(null,G__10430,G__10431,G__10432));
})()],null));
});
var G__10469__4 = (function() { 
var G__10470__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10470 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10471__i = 0, G__10471__a = new Array(arguments.length -  3);
while (G__10471__i < G__10471__a.length) {G__10471__a[G__10471__i] = arguments[G__10471__i + 3]; ++G__10471__i;}
  args = new cljs.core.IndexedSeq(G__10471__a,0);
} 
return G__10470__delegate.call(this,x,y,z,args);};
G__10470.cljs$lang$maxFixedArity = 3;
G__10470.cljs$lang$applyTo = (function (arglist__10472){
var x = cljs.core.first(arglist__10472);
arglist__10472 = cljs.core.next(arglist__10472);
var y = cljs.core.first(arglist__10472);
arglist__10472 = cljs.core.next(arglist__10472);
var z = cljs.core.first(arglist__10472);
var args = cljs.core.rest(arglist__10472);
return G__10470__delegate(x,y,z,args);
});
G__10470.cljs$core$IFn$_invoke$arity$variadic = G__10470__delegate;
return G__10470;
})()
;
G__10469 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10469__0.call(this);
case 1:
return G__10469__1.call(this,x);
case 2:
return G__10469__2.call(this,x,y);
case 3:
return G__10469__3.call(this,x,y,z);
default:
var G__10473 = null;
if (arguments.length > 3) {
var G__10474__i = 0, G__10474__a = new Array(arguments.length -  3);
while (G__10474__i < G__10474__a.length) {G__10474__a[G__10474__i] = arguments[G__10474__i + 3]; ++G__10474__i;}
G__10473 = new cljs.core.IndexedSeq(G__10474__a,0);
}
return G__10469__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10469.cljs$lang$maxFixedArity = 3;
G__10469.cljs$lang$applyTo = G__10469__4.cljs$lang$applyTo;
G__10469.cljs$core$IFn$_invoke$arity$0 = G__10469__0;
G__10469.cljs$core$IFn$_invoke$arity$1 = G__10469__1;
G__10469.cljs$core$IFn$_invoke$arity$2 = G__10469__2;
G__10469.cljs$core$IFn$_invoke$arity$3 = G__10469__3;
G__10469.cljs$core$IFn$_invoke$arity$variadic = G__10469__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10469;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10475 = null;
var G__10475__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10475__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10433 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10433) : f.call(null,G__10433));
})(),(function (){var G__10434 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10434) : g.call(null,G__10434));
})()],null));
});
var G__10475__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10435 = x;
var G__10436 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10435,G__10436) : f.call(null,G__10435,G__10436));
})(),(function (){var G__10437 = x;
var G__10438 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10437,G__10438) : g.call(null,G__10437,G__10438));
})()],null));
});
var G__10475__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10439 = x;
var G__10440 = y;
var G__10441 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10439,G__10440,G__10441) : f.call(null,G__10439,G__10440,G__10441));
})(),(function (){var G__10442 = x;
var G__10443 = y;
var G__10444 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10442,G__10443,G__10444) : g.call(null,G__10442,G__10443,G__10444));
})()],null));
});
var G__10475__4 = (function() { 
var G__10476__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10476 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10477__i = 0, G__10477__a = new Array(arguments.length -  3);
while (G__10477__i < G__10477__a.length) {G__10477__a[G__10477__i] = arguments[G__10477__i + 3]; ++G__10477__i;}
  args = new cljs.core.IndexedSeq(G__10477__a,0);
} 
return G__10476__delegate.call(this,x,y,z,args);};
G__10476.cljs$lang$maxFixedArity = 3;
G__10476.cljs$lang$applyTo = (function (arglist__10478){
var x = cljs.core.first(arglist__10478);
arglist__10478 = cljs.core.next(arglist__10478);
var y = cljs.core.first(arglist__10478);
arglist__10478 = cljs.core.next(arglist__10478);
var z = cljs.core.first(arglist__10478);
var args = cljs.core.rest(arglist__10478);
return G__10476__delegate(x,y,z,args);
});
G__10476.cljs$core$IFn$_invoke$arity$variadic = G__10476__delegate;
return G__10476;
})()
;
G__10475 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10475__0.call(this);
case 1:
return G__10475__1.call(this,x);
case 2:
return G__10475__2.call(this,x,y);
case 3:
return G__10475__3.call(this,x,y,z);
default:
var G__10479 = null;
if (arguments.length > 3) {
var G__10480__i = 0, G__10480__a = new Array(arguments.length -  3);
while (G__10480__i < G__10480__a.length) {G__10480__a[G__10480__i] = arguments[G__10480__i + 3]; ++G__10480__i;}
G__10479 = new cljs.core.IndexedSeq(G__10480__a,0);
}
return G__10475__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10479);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10475.cljs$lang$maxFixedArity = 3;
G__10475.cljs$lang$applyTo = G__10475__4.cljs$lang$applyTo;
G__10475.cljs$core$IFn$_invoke$arity$0 = G__10475__0;
G__10475.cljs$core$IFn$_invoke$arity$1 = G__10475__1;
G__10475.cljs$core$IFn$_invoke$arity$2 = G__10475__2;
G__10475.cljs$core$IFn$_invoke$arity$3 = G__10475__3;
G__10475.cljs$core$IFn$_invoke$arity$variadic = G__10475__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10475;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10481 = null;
var G__10481__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10481__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10445 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10445) : f.call(null,G__10445));
})(),(function (){var G__10446 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10446) : g.call(null,G__10446));
})(),(function (){var G__10447 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10447) : h.call(null,G__10447));
})()],null));
});
var G__10481__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10448 = x;
var G__10449 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10448,G__10449) : f.call(null,G__10448,G__10449));
})(),(function (){var G__10450 = x;
var G__10451 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10450,G__10451) : g.call(null,G__10450,G__10451));
})(),(function (){var G__10452 = x;
var G__10453 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10452,G__10453) : h.call(null,G__10452,G__10453));
})()],null));
});
var G__10481__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10454 = x;
var G__10455 = y;
var G__10456 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10454,G__10455,G__10456) : f.call(null,G__10454,G__10455,G__10456));
})(),(function (){var G__10457 = x;
var G__10458 = y;
var G__10459 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10457,G__10458,G__10459) : g.call(null,G__10457,G__10458,G__10459));
})(),(function (){var G__10460 = x;
var G__10461 = y;
var G__10462 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10460,G__10461,G__10462) : h.call(null,G__10460,G__10461,G__10462));
})()],null));
});
var G__10481__4 = (function() { 
var G__10482__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10482 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10483__i = 0, G__10483__a = new Array(arguments.length -  3);
while (G__10483__i < G__10483__a.length) {G__10483__a[G__10483__i] = arguments[G__10483__i + 3]; ++G__10483__i;}
  args = new cljs.core.IndexedSeq(G__10483__a,0);
} 
return G__10482__delegate.call(this,x,y,z,args);};
G__10482.cljs$lang$maxFixedArity = 3;
G__10482.cljs$lang$applyTo = (function (arglist__10484){
var x = cljs.core.first(arglist__10484);
arglist__10484 = cljs.core.next(arglist__10484);
var y = cljs.core.first(arglist__10484);
arglist__10484 = cljs.core.next(arglist__10484);
var z = cljs.core.first(arglist__10484);
var args = cljs.core.rest(arglist__10484);
return G__10482__delegate(x,y,z,args);
});
G__10482.cljs$core$IFn$_invoke$arity$variadic = G__10482__delegate;
return G__10482;
})()
;
G__10481 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10481__0.call(this);
case 1:
return G__10481__1.call(this,x);
case 2:
return G__10481__2.call(this,x,y);
case 3:
return G__10481__3.call(this,x,y,z);
default:
var G__10485 = null;
if (arguments.length > 3) {
var G__10486__i = 0, G__10486__a = new Array(arguments.length -  3);
while (G__10486__i < G__10486__a.length) {G__10486__a[G__10486__i] = arguments[G__10486__i + 3]; ++G__10486__i;}
G__10485 = new cljs.core.IndexedSeq(G__10486__a,0);
}
return G__10481__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10481.cljs$lang$maxFixedArity = 3;
G__10481.cljs$lang$applyTo = G__10481__4.cljs$lang$applyTo;
G__10481.cljs$core$IFn$_invoke$arity$0 = G__10481__0;
G__10481.cljs$core$IFn$_invoke$arity$1 = G__10481__1;
G__10481.cljs$core$IFn$_invoke$arity$2 = G__10481__2;
G__10481.cljs$core$IFn$_invoke$arity$3 = G__10481__3;
G__10481.cljs$core$IFn$_invoke$arity$variadic = G__10481__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10481;
})()
});
var juxt__4 = (function() { 
var G__10487__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10488 = null;
var G__10488__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10375_SHARP_,p2__10376_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10375_SHARP_,(function (){return (p2__10376_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10376_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10376_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10488__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10377_SHARP_,p2__10378_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10377_SHARP_,(function (){var G__10463 = x;
return (p2__10378_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10378_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10463) : p2__10378_SHARP_.call(null,G__10463));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10488__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10379_SHARP_,p2__10380_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10379_SHARP_,(function (){var G__10464 = x;
var G__10465 = y;
return (p2__10380_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10380_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10464,G__10465) : p2__10380_SHARP_.call(null,G__10464,G__10465));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10488__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10381_SHARP_,p2__10382_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10381_SHARP_,(function (){var G__10466 = x;
var G__10467 = y;
var G__10468 = z;
return (p2__10382_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10382_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10466,G__10467,G__10468) : p2__10382_SHARP_.call(null,G__10466,G__10467,G__10468));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10488__4 = (function() { 
var G__10489__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10383_SHARP_,p2__10384_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10383_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10384_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10489 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10490__i = 0, G__10490__a = new Array(arguments.length -  3);
while (G__10490__i < G__10490__a.length) {G__10490__a[G__10490__i] = arguments[G__10490__i + 3]; ++G__10490__i;}
  args = new cljs.core.IndexedSeq(G__10490__a,0);
} 
return G__10489__delegate.call(this,x,y,z,args);};
G__10489.cljs$lang$maxFixedArity = 3;
G__10489.cljs$lang$applyTo = (function (arglist__10491){
var x = cljs.core.first(arglist__10491);
arglist__10491 = cljs.core.next(arglist__10491);
var y = cljs.core.first(arglist__10491);
arglist__10491 = cljs.core.next(arglist__10491);
var z = cljs.core.first(arglist__10491);
var args = cljs.core.rest(arglist__10491);
return G__10489__delegate(x,y,z,args);
});
G__10489.cljs$core$IFn$_invoke$arity$variadic = G__10489__delegate;
return G__10489;
})()
;
G__10488 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10488__0.call(this);
case 1:
return G__10488__1.call(this,x);
case 2:
return G__10488__2.call(this,x,y);
case 3:
return G__10488__3.call(this,x,y,z);
default:
var G__10492 = null;
if (arguments.length > 3) {
var G__10493__i = 0, G__10493__a = new Array(arguments.length -  3);
while (G__10493__i < G__10493__a.length) {G__10493__a[G__10493__i] = arguments[G__10493__i + 3]; ++G__10493__i;}
G__10492 = new cljs.core.IndexedSeq(G__10493__a,0);
}
return G__10488__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10488.cljs$lang$maxFixedArity = 3;
G__10488.cljs$lang$applyTo = G__10488__4.cljs$lang$applyTo;
G__10488.cljs$core$IFn$_invoke$arity$0 = G__10488__0;
G__10488.cljs$core$IFn$_invoke$arity$1 = G__10488__1;
G__10488.cljs$core$IFn$_invoke$arity$2 = G__10488__2;
G__10488.cljs$core$IFn$_invoke$arity$3 = G__10488__3;
G__10488.cljs$core$IFn$_invoke$arity$variadic = G__10488__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10488;
})()
;})(fs__$1))
};
var G__10487 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10494__i = 0, G__10494__a = new Array(arguments.length -  3);
while (G__10494__i < G__10494__a.length) {G__10494__a[G__10494__i] = arguments[G__10494__i + 3]; ++G__10494__i;}
  fs = new cljs.core.IndexedSeq(G__10494__a,0);
} 
return G__10487__delegate.call(this,f,g,h,fs);};
G__10487.cljs$lang$maxFixedArity = 3;
G__10487.cljs$lang$applyTo = (function (arglist__10495){
var f = cljs.core.first(arglist__10495);
arglist__10495 = cljs.core.next(arglist__10495);
var g = cljs.core.first(arglist__10495);
arglist__10495 = cljs.core.next(arglist__10495);
var h = cljs.core.first(arglist__10495);
var fs = cljs.core.rest(arglist__10495);
return G__10487__delegate(f,g,h,fs);
});
G__10487.cljs$core$IFn$_invoke$arity$variadic = G__10487__delegate;
return G__10487;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10496 = null;
if (arguments.length > 3) {
var G__10497__i = 0, G__10497__a = new Array(arguments.length -  3);
while (G__10497__i < G__10497__a.length) {G__10497__a[G__10497__i] = arguments[G__10497__i + 3]; ++G__10497__i;}
G__10496 = new cljs.core.IndexedSeq(G__10497__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10498 = cljs.core.next(coll);
coll = G__10498;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10499 = (n - (1));
var G__10500 = cljs.core.next(coll);
n = G__10499;
coll = G__10500;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10504 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10504,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10504,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10504,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10512 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__10513_10519 = cljs.core.first(coll);
var G__10514_10520 = writer;
var G__10515_10521 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10513_10519,G__10514_10520,G__10515_10521) : print_one.call(null,G__10513_10519,G__10514_10520,G__10515_10521));
} else {
}

var coll_10522__$1 = cljs.core.next(coll);
var n_10523 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10522__$1) && (((n_10523 == null)) || (!((n_10523 === (0)))))){
cljs.core._write(writer,sep);

var G__10516_10524 = cljs.core.first(coll_10522__$1);
var G__10517_10525 = writer;
var G__10518_10526 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10516_10524,G__10517_10525,G__10518_10526) : print_one.call(null,G__10516_10524,G__10517_10525,G__10518_10526));

var G__10527 = cljs.core.next(coll_10522__$1);
var G__10528 = (n_10523 - (1));
coll_10522__$1 = G__10527;
n_10523 = G__10528;
continue;
} else {
if((cljs.core.seq(coll_10522__$1)) && ((n_10523 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10512;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10533 = cljs.core.seq(ss);
var chunk__10534 = null;
var count__10535 = (0);
var i__10536 = (0);
while(true){
if((i__10536 < count__10535)){
var s = chunk__10534.cljs$core$IIndexed$_nth$arity$2(null,i__10536);
cljs.core._write(writer,s);

var G__10537 = seq__10533;
var G__10538 = chunk__10534;
var G__10539 = count__10535;
var G__10540 = (i__10536 + (1));
seq__10533 = G__10537;
chunk__10534 = G__10538;
count__10535 = G__10539;
i__10536 = G__10540;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10533);
if(temp__4126__auto__){
var seq__10533__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10533__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__10533__$1);
var G__10541 = cljs.core.chunk_rest(seq__10533__$1);
var G__10542 = c__4340__auto__;
var G__10543 = cljs.core.count(c__4340__auto__);
var G__10544 = (0);
seq__10533 = G__10541;
chunk__10534 = G__10542;
count__10535 = G__10543;
i__10536 = G__10544;
continue;
} else {
var s = cljs.core.first(seq__10533__$1);
cljs.core._write(writer,s);

var G__10545 = cljs.core.next(seq__10533__$1);
var G__10546 = null;
var G__10547 = (0);
var G__10548 = (0);
seq__10533 = G__10545;
chunk__10534 = G__10546;
count__10535 = G__10547;
i__10536 = G__10548;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10549__i = 0, G__10549__a = new Array(arguments.length -  1);
while (G__10549__i < G__10549__a.length) {G__10549__a[G__10549__i] = arguments[G__10549__i + 1]; ++G__10549__i;}
  ss = new cljs.core.IndexedSeq(G__10549__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10550){
var writer = cljs.core.first(arglist__10550);
var ss = cljs.core.rest(arglist__10550);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10552 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10552;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10555 = "[\\\\\"\b\f\n\r\t]";
var G__10556 = "g";
return RegExp(G__10555,G__10556);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3541__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3541__auto__)){
var and__3541__auto____$1 = (function (){var G__10570 = obj;
if(G__10570){
var bit__4234__auto__ = (G__10570.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4234__auto__) || (G__10570.cljs$core$IMeta$)){
return true;
} else {
if((!G__10570.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10570);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10570);
}
})();
if(and__3541__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10571 = obj;
if(G__10571){
var bit__4227__auto__ = (G__10571.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4227__auto__) || (G__10571.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10572 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10573 = pr_writer;
var G__10574 = writer;
var G__10575 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10572,G__10573,G__10574,G__10575) : cljs.core.print_map.call(null,G__10572,G__10573,G__10574,G__10575));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10576 = obj;
return goog.isString(G__10576);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10578 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10578;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10577 = obj;
if(G__10577){
var bit__4234__auto__ = (G__10577.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4234__auto__) || (G__10577.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10577.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10577);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10577);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10583 = cljs.core.seq(cljs.core.next(objs));
var chunk__10584 = null;
var count__10585 = (0);
var i__10586 = (0);
while(true){
if((i__10586 < count__10585)){
var obj = chunk__10584.cljs$core$IIndexed$_nth$arity$2(null,i__10586);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10587 = seq__10583;
var G__10588 = chunk__10584;
var G__10589 = count__10585;
var G__10590 = (i__10586 + (1));
seq__10583 = G__10587;
chunk__10584 = G__10588;
count__10585 = G__10589;
i__10586 = G__10590;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10583);
if(temp__4126__auto__){
var seq__10583__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10583__$1)){
var c__4340__auto__ = cljs.core.chunk_first(seq__10583__$1);
var G__10591 = cljs.core.chunk_rest(seq__10583__$1);
var G__10592 = c__4340__auto__;
var G__10593 = cljs.core.count(c__4340__auto__);
var G__10594 = (0);
seq__10583 = G__10591;
chunk__10584 = G__10592;
count__10585 = G__10593;
i__10586 = G__10594;
continue;
} else {
var obj = cljs.core.first(seq__10583__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10595 = cljs.core.next(seq__10583__$1);
var G__10596 = null;
var G__10597 = (0);
var G__10598 = (0);
seq__10583 = G__10595;
chunk__10584 = G__10596;
count__10585 = G__10597;
i__10586 = G__10598;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10599__i = 0, G__10599__a = new Array(arguments.length -  0);
while (G__10599__i < G__10599__a.length) {G__10599__a[G__10599__i] = arguments[G__10599__i + 0]; ++G__10599__i;}
  objs = new cljs.core.IndexedSeq(G__10599__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__10600){
var objs = cljs.core.seq(arglist__10600);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10601__i = 0, G__10601__a = new Array(arguments.length -  0);
while (G__10601__i < G__10601__a.length) {G__10601__a[G__10601__i] = arguments[G__10601__i + 0]; ++G__10601__i;}
  objs = new cljs.core.IndexedSeq(G__10601__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__10602){
var objs = cljs.core.seq(arglist__10602);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10603__i = 0, G__10603__a = new Array(arguments.length -  0);
while (G__10603__i < G__10603__a.length) {G__10603__a[G__10603__i] = arguments[G__10603__i + 0]; ++G__10603__i;}
  objs = new cljs.core.IndexedSeq(G__10603__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__10604){
var objs = cljs.core.seq(arglist__10604);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10605__i = 0, G__10605__a = new Array(arguments.length -  0);
while (G__10605__i < G__10605__a.length) {G__10605__a[G__10605__i] = arguments[G__10605__i + 0]; ++G__10605__i;}
  objs = new cljs.core.IndexedSeq(G__10605__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__10606){
var objs = cljs.core.seq(arglist__10606);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10607__i = 0, G__10607__a = new Array(arguments.length -  0);
while (G__10607__i < G__10607__a.length) {G__10607__a[G__10607__i] = arguments[G__10607__i + 0]; ++G__10607__i;}
  objs = new cljs.core.IndexedSeq(G__10607__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__10608){
var objs = cljs.core.seq(arglist__10608);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10609__i = 0, G__10609__a = new Array(arguments.length -  0);
while (G__10609__i < G__10609__a.length) {G__10609__a[G__10609__i] = arguments[G__10609__i + 0]; ++G__10609__i;}
  objs = new cljs.core.IndexedSeq(G__10609__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__10610){
var objs = cljs.core.seq(arglist__10610);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10611__i = 0, G__10611__a = new Array(arguments.length -  0);
while (G__10611__i < G__10611__a.length) {G__10611__a[G__10611__i] = arguments[G__10611__i + 0]; ++G__10611__i;}
  objs = new cljs.core.IndexedSeq(G__10611__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__10612){
var objs = cljs.core.seq(arglist__10612);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10613__i = 0, G__10613__a = new Array(arguments.length -  0);
while (G__10613__i < G__10613__a.length) {G__10613__a[G__10613__i] = arguments[G__10613__i + 0]; ++G__10613__i;}
  objs = new cljs.core.IndexedSeq(G__10613__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__10614){
var objs = cljs.core.seq(arglist__10614);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10621_10627 = cljs.core.key(e);
var G__10622_10628 = w;
var G__10623_10629 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10621_10627,G__10622_10628,G__10623_10629) : print_one.call(null,G__10621_10627,G__10622_10628,G__10623_10629));

cljs.core._write(w," ");

var G__10624 = cljs.core.val(e);
var G__10625 = w;
var G__10626 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10624,G__10625,G__10626) : print_one.call(null,G__10624,G__10625,G__10626));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10630__i = 0, G__10630__a = new Array(arguments.length -  2);
while (G__10630__i < G__10630__a.length) {G__10630__a[G__10630__i] = arguments[G__10630__i + 2]; ++G__10630__i;}
  args = new cljs.core.IndexedSeq(G__10630__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10631){
var iref = cljs.core.first(arglist__10631);
arglist__10631 = cljs.core.next(arglist__10631);
var f = cljs.core.first(arglist__10631);
var args = cljs.core.rest(arglist__10631);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10634 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10634) : cljs.core.atom.call(null,G__10634));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10636 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10636) : cljs.core.deref.call(null,G__10636));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__10637_SHARP_,p2__10638_SHARP_){
var ret = (function (){var G__10641 = p1__10637_SHARP_;
var G__10642 = p2__10638_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10641,G__10642) : rf.call(null,G__10641,G__10642));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10645 = null;
var G__10645__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10645__1 = (function (result){
var G__10644 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10644) : rf.call(null,G__10644));
});
var G__10645__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10645 = function(result,input){
switch(arguments.length){
case 0:
return G__10645__0.call(this);
case 1:
return G__10645__1.call(this,result);
case 2:
return G__10645__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10645.cljs$core$IFn$_invoke$arity$0 = G__10645__0;
G__10645.cljs$core$IFn$_invoke$arity$1 = G__10645__1;
G__10645.cljs$core$IFn$_invoke$arity$2 = G__10645__2;
return G__10645;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10654 = null;
var G__10654__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10654__1 = (function (result){
var G__10650 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10650) : rf.call(null,G__10650));
});
var G__10654__2 = (function (result,input){
var prior = (function (){var G__10651 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10651) : cljs.core.deref.call(null,G__10651));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10652 = result;
var G__10653 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10652,G__10653) : rf.call(null,G__10652,G__10653));
}
});
G__10654 = function(result,input){
switch(arguments.length){
case 0:
return G__10654__0.call(this);
case 1:
return G__10654__1.call(this,result);
case 2:
return G__10654__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10654.cljs$core$IFn$_invoke$arity$0 = G__10654__0;
G__10654.cljs$core$IFn$_invoke$arity$1 = G__10654__1;
G__10654.cljs$core$IFn$_invoke$arity$2 = G__10654__2;
return G__10654;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4531__auto__ = this;
return cljs.core.es6_iterator(this__4531__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10656_SHARP_,p2__10655_SHARP_){
var G__10658 = p2__10655_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10658) : proc.call(null,G__10658));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10660 = {};
return obj10660;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._clj__GT_js[(function (){var G__10664 = x__4197__auto__;
return goog.typeOf(G__10664);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._key__GT_js[(function (){var G__10668 = x__4197__auto__;
return goog.typeOf(G__10668);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10671 = k;
if(G__10671){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__10671.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10671.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10671);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10672 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10672) : cljs.core.clj__GT_js.call(null,G__10672));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10688 = x;
if(G__10688){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__10688.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10688.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10688);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10688);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10690 = {};
return obj10690;
})();
var seq__10691_10701 = cljs.core.seq(x);
var chunk__10692_10702 = null;
var count__10693_10703 = (0);
var i__10694_10704 = (0);
while(true){
if((i__10694_10704 < count__10693_10703)){
var vec__10695_10705 = chunk__10692_10702.cljs$core$IIndexed$_nth$arity$2(null,i__10694_10704);
var k_10706 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10695_10705,(0),null);
var v_10707 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10695_10705,(1),null);
(m[cljs.core.key__GT_js(k_10706)] = clj__GT_js(v_10707));

var G__10708 = seq__10691_10701;
var G__10709 = chunk__10692_10702;
var G__10710 = count__10693_10703;
var G__10711 = (i__10694_10704 + (1));
seq__10691_10701 = G__10708;
chunk__10692_10702 = G__10709;
count__10693_10703 = G__10710;
i__10694_10704 = G__10711;
continue;
} else {
var temp__4126__auto___10712 = cljs.core.seq(seq__10691_10701);
if(temp__4126__auto___10712){
var seq__10691_10713__$1 = temp__4126__auto___10712;
if(cljs.core.chunked_seq_QMARK_(seq__10691_10713__$1)){
var c__4340__auto___10714 = cljs.core.chunk_first(seq__10691_10713__$1);
var G__10715 = cljs.core.chunk_rest(seq__10691_10713__$1);
var G__10716 = c__4340__auto___10714;
var G__10717 = cljs.core.count(c__4340__auto___10714);
var G__10718 = (0);
seq__10691_10701 = G__10715;
chunk__10692_10702 = G__10716;
count__10693_10703 = G__10717;
i__10694_10704 = G__10718;
continue;
} else {
var vec__10696_10719 = cljs.core.first(seq__10691_10713__$1);
var k_10720 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10696_10719,(0),null);
var v_10721 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10696_10719,(1),null);
(m[cljs.core.key__GT_js(k_10720)] = clj__GT_js(v_10721));

var G__10722 = cljs.core.next(seq__10691_10713__$1);
var G__10723 = null;
var G__10724 = (0);
var G__10725 = (0);
seq__10691_10701 = G__10722;
chunk__10692_10702 = G__10723;
count__10693_10703 = G__10724;
i__10694_10704 = G__10725;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10697_10726 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10698_10727 = null;
var count__10699_10728 = (0);
var i__10700_10729 = (0);
while(true){
if((i__10700_10729 < count__10699_10728)){
var x_10730__$1 = chunk__10698_10727.cljs$core$IIndexed$_nth$arity$2(null,i__10700_10729);
arr.push(x_10730__$1);

var G__10731 = seq__10697_10726;
var G__10732 = chunk__10698_10727;
var G__10733 = count__10699_10728;
var G__10734 = (i__10700_10729 + (1));
seq__10697_10726 = G__10731;
chunk__10698_10727 = G__10732;
count__10699_10728 = G__10733;
i__10700_10729 = G__10734;
continue;
} else {
var temp__4126__auto___10735 = cljs.core.seq(seq__10697_10726);
if(temp__4126__auto___10735){
var seq__10697_10736__$1 = temp__4126__auto___10735;
if(cljs.core.chunked_seq_QMARK_(seq__10697_10736__$1)){
var c__4340__auto___10737 = cljs.core.chunk_first(seq__10697_10736__$1);
var G__10738 = cljs.core.chunk_rest(seq__10697_10736__$1);
var G__10739 = c__4340__auto___10737;
var G__10740 = cljs.core.count(c__4340__auto___10737);
var G__10741 = (0);
seq__10697_10726 = G__10738;
chunk__10698_10727 = G__10739;
count__10699_10728 = G__10740;
i__10700_10729 = G__10741;
continue;
} else {
var x_10742__$1 = cljs.core.first(seq__10697_10736__$1);
arr.push(x_10742__$1);

var G__10743 = cljs.core.next(seq__10697_10736__$1);
var G__10744 = null;
var G__10745 = (0);
var G__10746 = (0);
seq__10697_10726 = G__10743;
chunk__10698_10727 = G__10744;
count__10699_10728 = G__10745;
i__10700_10729 = G__10746;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10748 = {};
return obj10748;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3541__auto__ = x;
if(and__3541__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3541__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4197__auto__ = (((x == null))?null:x);
return (function (){var or__3553__auto__ = (cljs.core._js__GT_clj[(function (){var G__10752 = x__4197__auto__;
return goog.typeOf(G__10752);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__10809__delegate = function (x,opts){
var map__10782 = opts;
var map__10782__$1 = ((cljs.core.seq_QMARK_(map__10782))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10782):map__10782);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10782__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10782,map__10782__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__10798 = x__$1;
if(G__10798){
var bit__4234__auto__ = null;
if(cljs.core.truth_((function (){var or__3553__auto__ = bit__4234__auto__;
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return G__10798.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10798.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10798);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10798);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4309__auto__ = ((function (map__10782,map__10782__$1,keywordize_keys,keyfn){
return (function iter__10799(s__10800){
return (new cljs.core.LazySeq(null,((function (map__10782,map__10782__$1,keywordize_keys,keyfn){
return (function (){
var s__10800__$1 = s__10800;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10800__$1);
if(temp__4126__auto__){
var s__10800__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10800__$2)){
var c__4307__auto__ = cljs.core.chunk_first(s__10800__$2);
var size__4308__auto__ = cljs.core.count(c__4307__auto__);
var b__10802 = cljs.core.chunk_buffer(size__4308__auto__);
if((function (){var i__10801 = (0);
while(true){
if((i__10801 < size__4308__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4307__auto__,i__10801);
cljs.core.chunk_append(b__10802,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10807 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10807) : keyfn.call(null,G__10807));
})(),thisfn((x__$1[k]))], null));

var G__10810 = (i__10801 + (1));
i__10801 = G__10810;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10802),iter__10799(cljs.core.chunk_rest(s__10800__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10802),null);
}
} else {
var k = cljs.core.first(s__10800__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10808 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10808) : keyfn.call(null,G__10808));
})(),thisfn((x__$1[k]))], null),iter__10799(cljs.core.rest(s__10800__$2)));
}
} else {
return null;
}
break;
}
});})(map__10782,map__10782__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10782,map__10782__$1,keywordize_keys,keyfn))
;
return iter__4309__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10782,map__10782__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10809 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10811__i = 0, G__10811__a = new Array(arguments.length -  1);
while (G__10811__i < G__10811__a.length) {G__10811__a[G__10811__i] = arguments[G__10811__i + 1]; ++G__10811__i;}
  opts = new cljs.core.IndexedSeq(G__10811__a,0);
} 
return G__10809__delegate.call(this,x,opts);};
G__10809.cljs$lang$maxFixedArity = 1;
G__10809.cljs$lang$applyTo = (function (arglist__10812){
var x = cljs.core.first(arglist__10812);
var opts = cljs.core.rest(arglist__10812);
return G__10809__delegate(x,opts);
});
G__10809.cljs$core$IFn$_invoke$arity$variadic = G__10809__delegate;
return G__10809;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__10813 = null;
if (arguments.length > 1) {
var G__10814__i = 0, G__10814__a = new Array(arguments.length -  1);
while (G__10814__i < G__10814__a.length) {G__10814__a[G__10814__i] = arguments[G__10814__i + 1]; ++G__10814__i;}
G__10813 = new cljs.core.IndexedSeq(G__10814__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__10817 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10817) : cljs.core.atom.call(null,G__10817));
})();
return ((function (mem){
return (function() { 
var G__10819__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10818 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10818) : cljs.core.deref.call(null,G__10818));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10819 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10820__i = 0, G__10820__a = new Array(arguments.length -  0);
while (G__10820__i < G__10820__a.length) {G__10820__a[G__10820__i] = arguments[G__10820__i + 0]; ++G__10820__i;}
  args = new cljs.core.IndexedSeq(G__10820__a,0);
} 
return G__10819__delegate.call(this,args);};
G__10819.cljs$lang$maxFixedArity = 0;
G__10819.cljs$lang$applyTo = (function (arglist__10821){
var args = cljs.core.seq(arglist__10821);
return G__10819__delegate(args);
});
G__10819.cljs$core$IFn$_invoke$arity$variadic = G__10819__delegate;
return G__10819;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10823 = ret;
f = G__10823;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10824__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10824 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10825__i = 0, G__10825__a = new Array(arguments.length -  1);
while (G__10825__i < G__10825__a.length) {G__10825__a[G__10825__i] = arguments[G__10825__i + 1]; ++G__10825__i;}
  args = new cljs.core.IndexedSeq(G__10825__a,0);
} 
return G__10824__delegate.call(this,f,args);};
G__10824.cljs$lang$maxFixedArity = 1;
G__10824.cljs$lang$applyTo = (function (arglist__10826){
var f = cljs.core.first(arglist__10826);
var args = cljs.core.rest(arglist__10826);
return G__10824__delegate(f,args);
});
G__10824.cljs$core$IFn$_invoke$arity$variadic = G__10824__delegate;
return G__10824;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10827 = null;
if (arguments.length > 1) {
var G__10828__i = 0, G__10828__a = new Array(arguments.length -  1);
while (G__10828__i < G__10828__a.length) {G__10828__a[G__10828__i] = arguments[G__10828__i + 1]; ++G__10828__i;}
G__10827 = new cljs.core.IndexedSeq(G__10828__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10831 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10831) : Math.floor.call(null,G__10831));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10833 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10833) : f.call(null,G__10833));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10835 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10835) : cljs.core.atom.call(null,G__10835));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10836__i = 0, G__10836__a = new Array(arguments.length -  1);
while (G__10836__i < G__10836__a.length) {G__10836__a[G__10836__i] = arguments[G__10836__i + 1]; ++G__10836__i;}
  args = new cljs.core.IndexedSeq(G__10836__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10837){
var f = cljs.core.first(arglist__10837);
var args = cljs.core.rest(arglist__10837);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10902 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10902) : cljs.core.deref.call(null,G__10902));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3553__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
var and__3541__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3541__auto__){
var and__3541__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3541__auto____$1){
var and__3541__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3541__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10927 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10925 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10925) : child.call(null,G__10925));
})(),(function (){var G__10926 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10926) : parent.call(null,G__10926));
})());
var G__10928 = (i + (1));
ret = G__10927;
i = G__10928;
continue;
}
break;
}
} else {
return and__3541__auto____$2;
}
} else {
return and__3541__auto____$1;
}
} else {
return and__3541__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10932 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10932) : cljs.core.deref.call(null,G__10932));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10936 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10936) : cljs.core.deref.call(null,G__10936));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__10940 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10940) : cljs.core.deref.call(null,G__10940));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__10949 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10949) : targets.call(null,G__10949));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__10950 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10950) : sources.call(null,G__10950));
})()));
});})(tp,td,ta))
;
var or__3553__auto__ = ((cljs.core.contains_QMARK_((function (){var G__10954 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10954) : tp.call(null,G__10954));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__10955 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10955) : ta.call(null,G__10955));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__10956 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10956) : ta.call(null,G__10956));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__10963 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10963) : parentMap.call(null,G__10963));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__10964 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10964) : parentMap.call(null,G__10964));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__10957_SHARP_){
return cljs.core.cons(cljs.core.first(p1__10957_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10957_SHARP_),cljs.core.second(p1__10957_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__10965 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10965) : parentMap.call(null,G__10965));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__10958_SHARP_,p2__10959_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__10958_SHARP_,p2__10959_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__10968 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10968) : cljs.core.deref.call(null,G__10968));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__10969 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10969) : cljs.core.deref.call(null,G__10969));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__10985 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10985) : cljs.core.deref.call(null,G__10985));
})().call(null,x);
var or__3553__auto__ = (cljs.core.truth_((function (){var and__3541__auto__ = xprefs;
if(cljs.core.truth_(and__3541__auto__)){
var G__10987 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10987) : xprefs.call(null,G__10987));
} else {
return and__3541__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__10988 = cljs.core.rest(ps);
ps = G__10988;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3553__auto____$1)){
return or__3553__auto____$1;
} else {
var or__3553__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__10989 = cljs.core.rest(ps);
ps = G__10989;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3553__auto____$2)){
return or__3553__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3553__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3553__auto__)){
return or__3553__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11003){
var vec__11004 = p__11003;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11004,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11004,(1),null);
var e = vec__11004;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11005 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11005) : cljs.core.deref.call(null,G__11005));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3553__auto__ = (be == null);
if(or__3553__auto__){
return or__3553__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11006 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11006) : cljs.core.deref.call(null,G__11006));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11007 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11007) : cljs.core.deref.call(null,G__11007));
})(),(function (){var G__11008 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11008) : cljs.core.deref.call(null,G__11008));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11010 = {};
return obj11010;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._reset[(function (){var G__11014 = x__4197__auto__;
return goog.typeOf(G__11014);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._reset["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._add_method[(function (){var G__11018 = x__4197__auto__;
return goog.typeOf(G__11018);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._add_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._remove_method[(function (){var G__11022 = x__4197__auto__;
return goog.typeOf(G__11022);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._prefer_method[(function (){var G__11026 = x__4197__auto__;
return goog.typeOf(G__11026);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._get_method[(function (){var G__11030 = x__4197__auto__;
return goog.typeOf(G__11030);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._get_method["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._methods[(function (){var G__11034 = x__4197__auto__;
return goog.typeOf(G__11034);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._methods["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3541__auto__ = mf;
if(and__3541__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3541__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4197__auto__ = (((mf == null))?null:mf);
return (function (){var or__3553__auto__ = (cljs.core._prefers[(function (){var G__11038 = x__4197__auto__;
return goog.typeOf(G__11038);
})()]);
if(or__3553__auto__){
return or__3553__auto__;
} else {
var or__3553__auto____$1 = (cljs.core._prefers["_"]);
if(or__3553__auto____$1){
return or__3553__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11040 = this$__$1;
return goog.getUid(G__11040);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11041 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11041) : cljs.core.deref.call(null,G__11041));
})(),(function (){var G__11042 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11042) : cljs.core.deref.call(null,G__11042));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11043 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11043) : cljs.core.deref.call(null,G__11043));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11044 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11044) : cljs.core.deref.call(null,G__11044));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11045 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11045) : cljs.core.deref.call(null,G__11045));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11046 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11046) : cljs.core.deref.call(null,G__11046));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11887 = null;
var G__11887__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11887__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11047 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11047) : self__.dispatch_fn.call(null,G__11047));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11048 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11048) : target_fn.call(null,G__11048));
});
var G__11887__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11049 = a;
var G__11050 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11049,G__11050) : self__.dispatch_fn.call(null,G__11049,G__11050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11051 = a;
var G__11052 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11051,G__11052) : target_fn.call(null,G__11051,G__11052));
});
var G__11887__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11053 = a;
var G__11054 = b;
var G__11055 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11053,G__11054,G__11055) : self__.dispatch_fn.call(null,G__11053,G__11054,G__11055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11056 = a;
var G__11057 = b;
var G__11058 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11056,G__11057,G__11058) : target_fn.call(null,G__11056,G__11057,G__11058));
});
var G__11887__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11059 = a;
var G__11060 = b;
var G__11061 = c;
var G__11062 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11059,G__11060,G__11061,G__11062) : self__.dispatch_fn.call(null,G__11059,G__11060,G__11061,G__11062));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11063 = a;
var G__11064 = b;
var G__11065 = c;
var G__11066 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11063,G__11064,G__11065,G__11066) : target_fn.call(null,G__11063,G__11064,G__11065,G__11066));
});
var G__11887__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11067 = a;
var G__11068 = b;
var G__11069 = c;
var G__11070 = d;
var G__11071 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11067,G__11068,G__11069,G__11070,G__11071) : self__.dispatch_fn.call(null,G__11067,G__11068,G__11069,G__11070,G__11071));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11072 = a;
var G__11073 = b;
var G__11074 = c;
var G__11075 = d;
var G__11076 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11072,G__11073,G__11074,G__11075,G__11076) : target_fn.call(null,G__11072,G__11073,G__11074,G__11075,G__11076));
});
var G__11887__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11077 = a;
var G__11078 = b;
var G__11079 = c;
var G__11080 = d;
var G__11081 = e;
var G__11082 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11077,G__11078,G__11079,G__11080,G__11081,G__11082) : self__.dispatch_fn.call(null,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11083 = a;
var G__11084 = b;
var G__11085 = c;
var G__11086 = d;
var G__11087 = e;
var G__11088 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11083,G__11084,G__11085,G__11086,G__11087,G__11088) : target_fn.call(null,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088));
});
var G__11887__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11089 = a;
var G__11090 = b;
var G__11091 = c;
var G__11092 = d;
var G__11093 = e;
var G__11094 = f;
var G__11095 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11089,G__11090,G__11091,G__11092,G__11093,G__11094,G__11095) : self__.dispatch_fn.call(null,G__11089,G__11090,G__11091,G__11092,G__11093,G__11094,G__11095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11096 = a;
var G__11097 = b;
var G__11098 = c;
var G__11099 = d;
var G__11100 = e;
var G__11101 = f;
var G__11102 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102) : target_fn.call(null,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102));
});
var G__11887__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11103 = a;
var G__11104 = b;
var G__11105 = c;
var G__11106 = d;
var G__11107 = e;
var G__11108 = f;
var G__11109 = g;
var G__11110 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110) : self__.dispatch_fn.call(null,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11111 = a;
var G__11112 = b;
var G__11113 = c;
var G__11114 = d;
var G__11115 = e;
var G__11116 = f;
var G__11117 = g;
var G__11118 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118) : target_fn.call(null,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118));
});
var G__11887__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11119 = a;
var G__11120 = b;
var G__11121 = c;
var G__11122 = d;
var G__11123 = e;
var G__11124 = f;
var G__11125 = g;
var G__11126 = h;
var G__11127 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11119,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126,G__11127) : self__.dispatch_fn.call(null,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126,G__11127));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11128 = a;
var G__11129 = b;
var G__11130 = c;
var G__11131 = d;
var G__11132 = e;
var G__11133 = f;
var G__11134 = g;
var G__11135 = h;
var G__11136 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136) : target_fn.call(null,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136));
});
var G__11887__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11137 = a;
var G__11138 = b;
var G__11139 = c;
var G__11140 = d;
var G__11141 = e;
var G__11142 = f;
var G__11143 = g;
var G__11144 = h;
var G__11145 = i;
var G__11146 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11137,G__11138,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146) : self__.dispatch_fn.call(null,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11147 = a;
var G__11148 = b;
var G__11149 = c;
var G__11150 = d;
var G__11151 = e;
var G__11152 = f;
var G__11153 = g;
var G__11154 = h;
var G__11155 = i;
var G__11156 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11147,G__11148,G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155,G__11156) : target_fn.call(null,G__11147,G__11148,G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155,G__11156));
});
var G__11887__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11157 = a;
var G__11158 = b;
var G__11159 = c;
var G__11160 = d;
var G__11161 = e;
var G__11162 = f;
var G__11163 = g;
var G__11164 = h;
var G__11165 = i;
var G__11166 = j;
var G__11167 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167) : self__.dispatch_fn.call(null,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11168 = a;
var G__11169 = b;
var G__11170 = c;
var G__11171 = d;
var G__11172 = e;
var G__11173 = f;
var G__11174 = g;
var G__11175 = h;
var G__11176 = i;
var G__11177 = j;
var G__11178 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178) : target_fn.call(null,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178));
});
var G__11887__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11179 = a;
var G__11180 = b;
var G__11181 = c;
var G__11182 = d;
var G__11183 = e;
var G__11184 = f;
var G__11185 = g;
var G__11186 = h;
var G__11187 = i;
var G__11188 = j;
var G__11189 = k;
var G__11190 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190) : self__.dispatch_fn.call(null,G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11191 = a;
var G__11192 = b;
var G__11193 = c;
var G__11194 = d;
var G__11195 = e;
var G__11196 = f;
var G__11197 = g;
var G__11198 = h;
var G__11199 = i;
var G__11200 = j;
var G__11201 = k;
var G__11202 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11191,G__11192,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202) : target_fn.call(null,G__11191,G__11192,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202));
});
var G__11887__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11203 = a;
var G__11204 = b;
var G__11205 = c;
var G__11206 = d;
var G__11207 = e;
var G__11208 = f;
var G__11209 = g;
var G__11210 = h;
var G__11211 = i;
var G__11212 = j;
var G__11213 = k;
var G__11214 = l;
var G__11215 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11203,G__11204,G__11205,G__11206,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215) : self__.dispatch_fn.call(null,G__11203,G__11204,G__11205,G__11206,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11216 = a;
var G__11217 = b;
var G__11218 = c;
var G__11219 = d;
var G__11220 = e;
var G__11221 = f;
var G__11222 = g;
var G__11223 = h;
var G__11224 = i;
var G__11225 = j;
var G__11226 = k;
var G__11227 = l;
var G__11228 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11216,G__11217,G__11218,G__11219,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228) : target_fn.call(null,G__11216,G__11217,G__11218,G__11219,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228));
});
var G__11887__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11229 = a;
var G__11230 = b;
var G__11231 = c;
var G__11232 = d;
var G__11233 = e;
var G__11234 = f;
var G__11235 = g;
var G__11236 = h;
var G__11237 = i;
var G__11238 = j;
var G__11239 = k;
var G__11240 = l;
var G__11241 = m;
var G__11242 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238,G__11239,G__11240,G__11241,G__11242) : self__.dispatch_fn.call(null,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238,G__11239,G__11240,G__11241,G__11242));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11243 = a;
var G__11244 = b;
var G__11245 = c;
var G__11246 = d;
var G__11247 = e;
var G__11248 = f;
var G__11249 = g;
var G__11250 = h;
var G__11251 = i;
var G__11252 = j;
var G__11253 = k;
var G__11254 = l;
var G__11255 = m;
var G__11256 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252,G__11253,G__11254,G__11255,G__11256) : target_fn.call(null,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252,G__11253,G__11254,G__11255,G__11256));
});
var G__11887__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11257 = a;
var G__11258 = b;
var G__11259 = c;
var G__11260 = d;
var G__11261 = e;
var G__11262 = f;
var G__11263 = g;
var G__11264 = h;
var G__11265 = i;
var G__11266 = j;
var G__11267 = k;
var G__11268 = l;
var G__11269 = m;
var G__11270 = n;
var G__11271 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271) : self__.dispatch_fn.call(null,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11272 = a;
var G__11273 = b;
var G__11274 = c;
var G__11275 = d;
var G__11276 = e;
var G__11277 = f;
var G__11278 = g;
var G__11279 = h;
var G__11280 = i;
var G__11281 = j;
var G__11282 = k;
var G__11283 = l;
var G__11284 = m;
var G__11285 = n;
var G__11286 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286) : target_fn.call(null,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286));
});
var G__11887__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11287 = a;
var G__11288 = b;
var G__11289 = c;
var G__11290 = d;
var G__11291 = e;
var G__11292 = f;
var G__11293 = g;
var G__11294 = h;
var G__11295 = i;
var G__11296 = j;
var G__11297 = k;
var G__11298 = l;
var G__11299 = m;
var G__11300 = n;
var G__11301 = o;
var G__11302 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11287,G__11288,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302) : self__.dispatch_fn.call(null,G__11287,G__11288,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11303 = a;
var G__11304 = b;
var G__11305 = c;
var G__11306 = d;
var G__11307 = e;
var G__11308 = f;
var G__11309 = g;
var G__11310 = h;
var G__11311 = i;
var G__11312 = j;
var G__11313 = k;
var G__11314 = l;
var G__11315 = m;
var G__11316 = n;
var G__11317 = o;
var G__11318 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315,G__11316,G__11317,G__11318) : target_fn.call(null,G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315,G__11316,G__11317,G__11318));
});
var G__11887__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11319 = a;
var G__11320 = b;
var G__11321 = c;
var G__11322 = d;
var G__11323 = e;
var G__11324 = f;
var G__11325 = g;
var G__11326 = h;
var G__11327 = i;
var G__11328 = j;
var G__11329 = k;
var G__11330 = l;
var G__11331 = m;
var G__11332 = n;
var G__11333 = o;
var G__11334 = p;
var G__11335 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335) : self__.dispatch_fn.call(null,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11336 = a;
var G__11337 = b;
var G__11338 = c;
var G__11339 = d;
var G__11340 = e;
var G__11341 = f;
var G__11342 = g;
var G__11343 = h;
var G__11344 = i;
var G__11345 = j;
var G__11346 = k;
var G__11347 = l;
var G__11348 = m;
var G__11349 = n;
var G__11350 = o;
var G__11351 = p;
var G__11352 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352) : target_fn.call(null,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352));
});
var G__11887__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11353 = a;
var G__11354 = b;
var G__11355 = c;
var G__11356 = d;
var G__11357 = e;
var G__11358 = f;
var G__11359 = g;
var G__11360 = h;
var G__11361 = i;
var G__11362 = j;
var G__11363 = k;
var G__11364 = l;
var G__11365 = m;
var G__11366 = n;
var G__11367 = o;
var G__11368 = p;
var G__11369 = q;
var G__11370 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370) : self__.dispatch_fn.call(null,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11371 = a;
var G__11372 = b;
var G__11373 = c;
var G__11374 = d;
var G__11375 = e;
var G__11376 = f;
var G__11377 = g;
var G__11378 = h;
var G__11379 = i;
var G__11380 = j;
var G__11381 = k;
var G__11382 = l;
var G__11383 = m;
var G__11384 = n;
var G__11385 = o;
var G__11386 = p;
var G__11387 = q;
var G__11388 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388) : target_fn.call(null,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388));
});
var G__11887__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11389 = a;
var G__11390 = b;
var G__11391 = c;
var G__11392 = d;
var G__11393 = e;
var G__11394 = f;
var G__11395 = g;
var G__11396 = h;
var G__11397 = i;
var G__11398 = j;
var G__11399 = k;
var G__11400 = l;
var G__11401 = m;
var G__11402 = n;
var G__11403 = o;
var G__11404 = p;
var G__11405 = q;
var G__11406 = r;
var G__11407 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407) : self__.dispatch_fn.call(null,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11408 = a;
var G__11409 = b;
var G__11410 = c;
var G__11411 = d;
var G__11412 = e;
var G__11413 = f;
var G__11414 = g;
var G__11415 = h;
var G__11416 = i;
var G__11417 = j;
var G__11418 = k;
var G__11419 = l;
var G__11420 = m;
var G__11421 = n;
var G__11422 = o;
var G__11423 = p;
var G__11424 = q;
var G__11425 = r;
var G__11426 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426) : target_fn.call(null,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426));
});
var G__11887__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11427 = a;
var G__11428 = b;
var G__11429 = c;
var G__11430 = d;
var G__11431 = e;
var G__11432 = f;
var G__11433 = g;
var G__11434 = h;
var G__11435 = i;
var G__11436 = j;
var G__11437 = k;
var G__11438 = l;
var G__11439 = m;
var G__11440 = n;
var G__11441 = o;
var G__11442 = p;
var G__11443 = q;
var G__11444 = r;
var G__11445 = s;
var G__11446 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446) : self__.dispatch_fn.call(null,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11447 = a;
var G__11448 = b;
var G__11449 = c;
var G__11450 = d;
var G__11451 = e;
var G__11452 = f;
var G__11453 = g;
var G__11454 = h;
var G__11455 = i;
var G__11456 = j;
var G__11457 = k;
var G__11458 = l;
var G__11459 = m;
var G__11460 = n;
var G__11461 = o;
var G__11462 = p;
var G__11463 = q;
var G__11464 = r;
var G__11465 = s;
var G__11466 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466) : target_fn.call(null,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466));
});
var G__11887__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11887 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11887__1.call(this,self__);
case 2:
return G__11887__2.call(this,self__,a);
case 3:
return G__11887__3.call(this,self__,a,b);
case 4:
return G__11887__4.call(this,self__,a,b,c);
case 5:
return G__11887__5.call(this,self__,a,b,c,d);
case 6:
return G__11887__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11887__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11887__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11887__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11887__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11887__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11887__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11887__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11887__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11887__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11887__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11887__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11887__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11887__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11887__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11887__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11887__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11887.cljs$core$IFn$_invoke$arity$1 = G__11887__1;
G__11887.cljs$core$IFn$_invoke$arity$2 = G__11887__2;
G__11887.cljs$core$IFn$_invoke$arity$3 = G__11887__3;
G__11887.cljs$core$IFn$_invoke$arity$4 = G__11887__4;
G__11887.cljs$core$IFn$_invoke$arity$5 = G__11887__5;
G__11887.cljs$core$IFn$_invoke$arity$6 = G__11887__6;
G__11887.cljs$core$IFn$_invoke$arity$7 = G__11887__7;
G__11887.cljs$core$IFn$_invoke$arity$8 = G__11887__8;
G__11887.cljs$core$IFn$_invoke$arity$9 = G__11887__9;
G__11887.cljs$core$IFn$_invoke$arity$10 = G__11887__10;
G__11887.cljs$core$IFn$_invoke$arity$11 = G__11887__11;
G__11887.cljs$core$IFn$_invoke$arity$12 = G__11887__12;
G__11887.cljs$core$IFn$_invoke$arity$13 = G__11887__13;
G__11887.cljs$core$IFn$_invoke$arity$14 = G__11887__14;
G__11887.cljs$core$IFn$_invoke$arity$15 = G__11887__15;
G__11887.cljs$core$IFn$_invoke$arity$16 = G__11887__16;
G__11887.cljs$core$IFn$_invoke$arity$17 = G__11887__17;
G__11887.cljs$core$IFn$_invoke$arity$18 = G__11887__18;
G__11887.cljs$core$IFn$_invoke$arity$19 = G__11887__19;
G__11887.cljs$core$IFn$_invoke$arity$20 = G__11887__20;
G__11887.cljs$core$IFn$_invoke$arity$21 = G__11887__21;
G__11887.cljs$core$IFn$_invoke$arity$22 = G__11887__22;
return G__11887;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11039){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11039)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11467 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11467) : self__.dispatch_fn.call(null,G__11467));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11468 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11468) : target_fn.call(null,G__11468));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11469 = a;
var G__11470 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11469,G__11470) : self__.dispatch_fn.call(null,G__11469,G__11470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11471 = a;
var G__11472 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11471,G__11472) : target_fn.call(null,G__11471,G__11472));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11473 = a;
var G__11474 = b;
var G__11475 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11473,G__11474,G__11475) : self__.dispatch_fn.call(null,G__11473,G__11474,G__11475));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11476 = a;
var G__11477 = b;
var G__11478 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11476,G__11477,G__11478) : target_fn.call(null,G__11476,G__11477,G__11478));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11479 = a;
var G__11480 = b;
var G__11481 = c;
var G__11482 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11479,G__11480,G__11481,G__11482) : self__.dispatch_fn.call(null,G__11479,G__11480,G__11481,G__11482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11483 = a;
var G__11484 = b;
var G__11485 = c;
var G__11486 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11483,G__11484,G__11485,G__11486) : target_fn.call(null,G__11483,G__11484,G__11485,G__11486));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11487 = a;
var G__11488 = b;
var G__11489 = c;
var G__11490 = d;
var G__11491 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11487,G__11488,G__11489,G__11490,G__11491) : self__.dispatch_fn.call(null,G__11487,G__11488,G__11489,G__11490,G__11491));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11492 = a;
var G__11493 = b;
var G__11494 = c;
var G__11495 = d;
var G__11496 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11492,G__11493,G__11494,G__11495,G__11496) : target_fn.call(null,G__11492,G__11493,G__11494,G__11495,G__11496));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11497 = a;
var G__11498 = b;
var G__11499 = c;
var G__11500 = d;
var G__11501 = e;
var G__11502 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11497,G__11498,G__11499,G__11500,G__11501,G__11502) : self__.dispatch_fn.call(null,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11503 = a;
var G__11504 = b;
var G__11505 = c;
var G__11506 = d;
var G__11507 = e;
var G__11508 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11503,G__11504,G__11505,G__11506,G__11507,G__11508) : target_fn.call(null,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11509 = a;
var G__11510 = b;
var G__11511 = c;
var G__11512 = d;
var G__11513 = e;
var G__11514 = f;
var G__11515 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515) : self__.dispatch_fn.call(null,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11516 = a;
var G__11517 = b;
var G__11518 = c;
var G__11519 = d;
var G__11520 = e;
var G__11521 = f;
var G__11522 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522) : target_fn.call(null,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11523 = a;
var G__11524 = b;
var G__11525 = c;
var G__11526 = d;
var G__11527 = e;
var G__11528 = f;
var G__11529 = g;
var G__11530 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530) : self__.dispatch_fn.call(null,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11531 = a;
var G__11532 = b;
var G__11533 = c;
var G__11534 = d;
var G__11535 = e;
var G__11536 = f;
var G__11537 = g;
var G__11538 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538) : target_fn.call(null,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11539 = a;
var G__11540 = b;
var G__11541 = c;
var G__11542 = d;
var G__11543 = e;
var G__11544 = f;
var G__11545 = g;
var G__11546 = h;
var G__11547 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547) : self__.dispatch_fn.call(null,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11548 = a;
var G__11549 = b;
var G__11550 = c;
var G__11551 = d;
var G__11552 = e;
var G__11553 = f;
var G__11554 = g;
var G__11555 = h;
var G__11556 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556) : target_fn.call(null,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11557 = a;
var G__11558 = b;
var G__11559 = c;
var G__11560 = d;
var G__11561 = e;
var G__11562 = f;
var G__11563 = g;
var G__11564 = h;
var G__11565 = i;
var G__11566 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566) : self__.dispatch_fn.call(null,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11567 = a;
var G__11568 = b;
var G__11569 = c;
var G__11570 = d;
var G__11571 = e;
var G__11572 = f;
var G__11573 = g;
var G__11574 = h;
var G__11575 = i;
var G__11576 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576) : target_fn.call(null,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11577 = a;
var G__11578 = b;
var G__11579 = c;
var G__11580 = d;
var G__11581 = e;
var G__11582 = f;
var G__11583 = g;
var G__11584 = h;
var G__11585 = i;
var G__11586 = j;
var G__11587 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587) : self__.dispatch_fn.call(null,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11588 = a;
var G__11589 = b;
var G__11590 = c;
var G__11591 = d;
var G__11592 = e;
var G__11593 = f;
var G__11594 = g;
var G__11595 = h;
var G__11596 = i;
var G__11597 = j;
var G__11598 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598) : target_fn.call(null,G__11588,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11599 = a;
var G__11600 = b;
var G__11601 = c;
var G__11602 = d;
var G__11603 = e;
var G__11604 = f;
var G__11605 = g;
var G__11606 = h;
var G__11607 = i;
var G__11608 = j;
var G__11609 = k;
var G__11610 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610) : self__.dispatch_fn.call(null,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11611 = a;
var G__11612 = b;
var G__11613 = c;
var G__11614 = d;
var G__11615 = e;
var G__11616 = f;
var G__11617 = g;
var G__11618 = h;
var G__11619 = i;
var G__11620 = j;
var G__11621 = k;
var G__11622 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622) : target_fn.call(null,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11623 = a;
var G__11624 = b;
var G__11625 = c;
var G__11626 = d;
var G__11627 = e;
var G__11628 = f;
var G__11629 = g;
var G__11630 = h;
var G__11631 = i;
var G__11632 = j;
var G__11633 = k;
var G__11634 = l;
var G__11635 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635) : self__.dispatch_fn.call(null,G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11636 = a;
var G__11637 = b;
var G__11638 = c;
var G__11639 = d;
var G__11640 = e;
var G__11641 = f;
var G__11642 = g;
var G__11643 = h;
var G__11644 = i;
var G__11645 = j;
var G__11646 = k;
var G__11647 = l;
var G__11648 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648) : target_fn.call(null,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11649 = a;
var G__11650 = b;
var G__11651 = c;
var G__11652 = d;
var G__11653 = e;
var G__11654 = f;
var G__11655 = g;
var G__11656 = h;
var G__11657 = i;
var G__11658 = j;
var G__11659 = k;
var G__11660 = l;
var G__11661 = m;
var G__11662 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662) : self__.dispatch_fn.call(null,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11663 = a;
var G__11664 = b;
var G__11665 = c;
var G__11666 = d;
var G__11667 = e;
var G__11668 = f;
var G__11669 = g;
var G__11670 = h;
var G__11671 = i;
var G__11672 = j;
var G__11673 = k;
var G__11674 = l;
var G__11675 = m;
var G__11676 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676) : target_fn.call(null,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11677 = a;
var G__11678 = b;
var G__11679 = c;
var G__11680 = d;
var G__11681 = e;
var G__11682 = f;
var G__11683 = g;
var G__11684 = h;
var G__11685 = i;
var G__11686 = j;
var G__11687 = k;
var G__11688 = l;
var G__11689 = m;
var G__11690 = n;
var G__11691 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691) : self__.dispatch_fn.call(null,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11692 = a;
var G__11693 = b;
var G__11694 = c;
var G__11695 = d;
var G__11696 = e;
var G__11697 = f;
var G__11698 = g;
var G__11699 = h;
var G__11700 = i;
var G__11701 = j;
var G__11702 = k;
var G__11703 = l;
var G__11704 = m;
var G__11705 = n;
var G__11706 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706) : target_fn.call(null,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11707 = a;
var G__11708 = b;
var G__11709 = c;
var G__11710 = d;
var G__11711 = e;
var G__11712 = f;
var G__11713 = g;
var G__11714 = h;
var G__11715 = i;
var G__11716 = j;
var G__11717 = k;
var G__11718 = l;
var G__11719 = m;
var G__11720 = n;
var G__11721 = o;
var G__11722 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722) : self__.dispatch_fn.call(null,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11723 = a;
var G__11724 = b;
var G__11725 = c;
var G__11726 = d;
var G__11727 = e;
var G__11728 = f;
var G__11729 = g;
var G__11730 = h;
var G__11731 = i;
var G__11732 = j;
var G__11733 = k;
var G__11734 = l;
var G__11735 = m;
var G__11736 = n;
var G__11737 = o;
var G__11738 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738) : target_fn.call(null,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11739 = a;
var G__11740 = b;
var G__11741 = c;
var G__11742 = d;
var G__11743 = e;
var G__11744 = f;
var G__11745 = g;
var G__11746 = h;
var G__11747 = i;
var G__11748 = j;
var G__11749 = k;
var G__11750 = l;
var G__11751 = m;
var G__11752 = n;
var G__11753 = o;
var G__11754 = p;
var G__11755 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755) : self__.dispatch_fn.call(null,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11756 = a;
var G__11757 = b;
var G__11758 = c;
var G__11759 = d;
var G__11760 = e;
var G__11761 = f;
var G__11762 = g;
var G__11763 = h;
var G__11764 = i;
var G__11765 = j;
var G__11766 = k;
var G__11767 = l;
var G__11768 = m;
var G__11769 = n;
var G__11770 = o;
var G__11771 = p;
var G__11772 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772) : target_fn.call(null,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11773 = a;
var G__11774 = b;
var G__11775 = c;
var G__11776 = d;
var G__11777 = e;
var G__11778 = f;
var G__11779 = g;
var G__11780 = h;
var G__11781 = i;
var G__11782 = j;
var G__11783 = k;
var G__11784 = l;
var G__11785 = m;
var G__11786 = n;
var G__11787 = o;
var G__11788 = p;
var G__11789 = q;
var G__11790 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790) : self__.dispatch_fn.call(null,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11791 = a;
var G__11792 = b;
var G__11793 = c;
var G__11794 = d;
var G__11795 = e;
var G__11796 = f;
var G__11797 = g;
var G__11798 = h;
var G__11799 = i;
var G__11800 = j;
var G__11801 = k;
var G__11802 = l;
var G__11803 = m;
var G__11804 = n;
var G__11805 = o;
var G__11806 = p;
var G__11807 = q;
var G__11808 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808) : target_fn.call(null,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11809 = a;
var G__11810 = b;
var G__11811 = c;
var G__11812 = d;
var G__11813 = e;
var G__11814 = f;
var G__11815 = g;
var G__11816 = h;
var G__11817 = i;
var G__11818 = j;
var G__11819 = k;
var G__11820 = l;
var G__11821 = m;
var G__11822 = n;
var G__11823 = o;
var G__11824 = p;
var G__11825 = q;
var G__11826 = r;
var G__11827 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827) : self__.dispatch_fn.call(null,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11828 = a;
var G__11829 = b;
var G__11830 = c;
var G__11831 = d;
var G__11832 = e;
var G__11833 = f;
var G__11834 = g;
var G__11835 = h;
var G__11836 = i;
var G__11837 = j;
var G__11838 = k;
var G__11839 = l;
var G__11840 = m;
var G__11841 = n;
var G__11842 = o;
var G__11843 = p;
var G__11844 = q;
var G__11845 = r;
var G__11846 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846) : target_fn.call(null,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11847 = a;
var G__11848 = b;
var G__11849 = c;
var G__11850 = d;
var G__11851 = e;
var G__11852 = f;
var G__11853 = g;
var G__11854 = h;
var G__11855 = i;
var G__11856 = j;
var G__11857 = k;
var G__11858 = l;
var G__11859 = m;
var G__11860 = n;
var G__11861 = o;
var G__11862 = p;
var G__11863 = q;
var G__11864 = r;
var G__11865 = s;
var G__11866 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866) : self__.dispatch_fn.call(null,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11867 = a;
var G__11868 = b;
var G__11869 = c;
var G__11870 = d;
var G__11871 = e;
var G__11872 = f;
var G__11873 = g;
var G__11874 = h;
var G__11875 = i;
var G__11876 = j;
var G__11877 = k;
var G__11878 = l;
var G__11879 = m;
var G__11880 = n;
var G__11881 = o;
var G__11882 = p;
var G__11883 = q;
var G__11884 = r;
var G__11885 = s;
var G__11886 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886) : target_fn.call(null,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11888 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11888);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4140__auto__,writer__4141__auto__,opt__4142__auto__){
return cljs.core._write(writer__4141__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__11893 = msg;
return Error(G__11893);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11898 = x;
var G__11899 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11898,G__11899) : pred.call(null,G__11898,G__11899));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11900 = y;
var G__11901 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11900,G__11901) : pred.call(null,G__11900,G__11901));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map